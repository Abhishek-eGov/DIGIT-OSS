swagger: '2.0'
info:
  version: 1.0.0
  title: Common Object Definitions
  description: Definitions of common objects used across the modules. These objects will/may be commonly used by all eGov API deicitions. There are no paths defined in this spec as these objects cannot be used solely on their own.
  contact:
    name:  eGov
    email: info@egovernments.org
host: phoenix-qa.egovernments.org

schemes:
  - https
basePath: '/common/v1/definitions'
paths:
  /businessCategory/_create:
    post:
      summary: create business catgory
      description: create business catgory
      parameters:
        - name: businessCategoryRequest
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/BusinessCategoryRequest'
      tags:
        - BusinessCategory
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BusinessCategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessCategory/_update:
    post:
      summary: updates business catgory
      description: updates business catgory
      parameters:
        - name: businessCategoryRequest
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/BusinessCategoryRequest'
      tags:
        - BusinessCategory
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BusinessCategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessCategory/_search:
    post:
      summary: searches business catgory
      description: searches business catgory
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - BusinessCategory
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BusinessCategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessDetails/_create:
    post:
      summary: creates business details
      description: creates business details
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/BusinessDetailsRequest'
      tags:
        - BusinessDetails
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BusinessDetailsResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessDetails/_update:
    post:
      summary: updates business details
      description: updates business details
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/BusinessDetailsRequest'
      tags:
        - BusinessDetails
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BusinessDetailsResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessDetails/_search:
    post:
      summary: searches business details
      description: searches business details
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - BusinessDetails
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BusinessDetailsResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /businessDetails/_getBusinessTypes:
    post:
      summary: gets business details type
      description: gets business details type
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
        - name: tenantId
          in: query
          type: string
          required: true
      tags:
        - BusinessDetails
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/EnumResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /calendaryears/_search:
    post:
      summary: search calender
      description: search calender
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - CalenderYears
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/CalendarYearResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /calendaryears/_searchfutureyears:
    post:
      summary: search future yesrs in calender
      description: search future yesrs in calender
      parameters:
        - name: requestInfoWrapper
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - CalenderYears
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/CalendarYearResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /calendaryears/_create:
    post:
      summary: create calender request
      description: create calender request
      parameters:
        - name: calendarYearRequest
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/CalendarYearRequest'
      tags:
        - CalenderYears
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/CalendarYearResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /calendaryears/{calendarYearId}/_update:
    post:
      summary: update calender request
      description: update calender request
      parameters:
        - name: calendarYearRequest
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/CalendarYearRequest'
        - name: calendarYearId
          in: path
          required: true
          type: integer
      tags:
        - CalenderYears
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/CalendarYearResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /categories/_search:
    post:
      summary: search categories
      description: search categories
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/CategoryRequestBody'
      tags:
        - Categories
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/CategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /communities/_search:
    post:
      summary: search community
      description: search community
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/CommunityRequestBody'
      tags:
        - Community
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/CommunityResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /departments/_search:
    post:
      summary: search department
      description: search department
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/DepartmentRequestBody'
      tags:
        - Department
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/DepartmentResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /departments/v1/_search:
    post:
      summary: search department
      description: search department
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/DepartmentRequestBody'
      tags:
        - Department
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/DepartmentResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /departments/v1/_create:
    post:
      summary: create department
      description: create department
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/DepartmentRequest'
      tags:
        - Department
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/DepartmentResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /departments/v1/_update:
    post:
      summary: updates department
      description: updates department
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/DepartmentRequest'
      tags:
        - Department
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/DepartmentResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /bloodgroups/_search:
    post:
      summary: searches by bloodgroup
      description: searches by bloodgroup
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - Enum
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/BloodGroupResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /maritalstatuses/_search:
    post:
      summary: searches by bloodgroup
      description: searches by bloodgroup
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - Enum
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/MaritalStatusResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /relationships/_search:
    post:
      summary: searches by bloodgroup
      description: searches by bloodgroup
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - Enum
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/RelationshipResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /genders/_search:
    post:
      summary: searches by bloodgroup
      description: searches by bloodgroup
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/RequestInfoWrap'
      tags:
        - Enum
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/GenderResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /holidays/_create:
    post:
      summary: creates holiday
      description: creates holiday
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/HolidayRequest'
      tags:
        - Holidays
      responses:
        '201':
          description: Designation created sucessfully.
          schema:
            $ref: '#/definitions/HolidayResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /holidays/{holidayId}/_update:
    post:
      summary: updates holiday
      description: updates holiday
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/HolidayRequest'
        - name: holidayId
          in: path
          required: true
          type: string
      tags:
        - Holidays
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/HolidayResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /holidays/_search:
    post:
      summary: searaches holiday
      description: searches holiday
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/HolidayRequestBody'
      tags:
        - Holidays
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/HolidayResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /holidays/_searchprefixsuffix:
    post:
      summary: searches holiday
      description: searches holiday
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/HolidayRequestBody'
      tags:
        - Holidays
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/HolidayResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /holidaytypes/_search:
    post:
      summary: searches holidaytype
      description: searches holidaytype
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/HolidayRequestBody'
      tags:
        - Holidaytype
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/HolidayResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /languages/_search:
    post:
      summary: searches languages
      description: searches languages
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/LanguageRequestBody'
      tags:
        - Language
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/LanguageResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /modules/_search:
    post:
      summary: searches modules
      description: searches modules
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/ModuleRequestBody'
      tags:
        - Language
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/ModuleResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /religions/_search:
    post:
      summary: searches uomcategories
      description: searches uomcategories
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/ReligionRequestBody'
      tags:
        - Language
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/ReligionResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /uomcategories/_search:
    post:
      summary: searches modules
      description: searches modules
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/UOMCategoryRequestBody'
      tags:
        - UOMCategory
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/UOMCategoryResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'

  /uoms/_search:
    post:
      summary: searches modules
      description: searches modules
      parameters:
        - name: requestBody
          in: body
          description: body.
          required: true
          schema:
            $ref: '#/definitions/UOMRequestBody'
      tags:
        - UOM
      responses:
        '201':
          description: Designation updated sucessfully.
          schema:
            $ref: '#/definitions/UOMResponse'
        '400':
          description: Invalid input.
          schema:
            $ref: 'https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml#/definitions/ErrorRes'


parameters:
  requestInfo:
    name: requestInfo
    description: Parameter to carry Request metadata in the request body
    in: body
    required: false
    schema:
      $ref: '#/definitions/RequestInfo'

  tenantId:
    name: tenantId
    in: query
    description: Unique id for a tenant.
    required: true
    type: string
    format: varchar

  lastChangedSince:
    name: lastChangedSince
    description: |
      epoch of the time since when the changes on the object should be picked up. Search results from this parameter should include both newly created objects since this time as well as any modified objects since this time. This criterion is included to help polling clients to get the changes in system since a last time they synchronized with the platform.
    in: query
    required: false
    type: integer
    format: int64


definitions:
  RequestInfo:
    type: object
    description: RequestInfo should be used to carry meta information about the requests to the server as described in the fields below. All eGov APIs will use requestinfo as a part of the request body to carry this meta information. Some of this information will be returned back from the server as part of the ResponseInfo in the response body to ensure correlation.
    properties:
      apiId:
        type: string
        description: unique API ID
        maxLength: 128
      ver:
        type: string
        description: API version - for HTTP based request this will be same as used in path
        maxLength: 32
      ts:
        type: integer
        format: int64
        description: time in epoch
      action:
        type: string
        description: API action to be performed like _create, _update, _search (denoting POST, PUT, GET) or _oauth etc
        maxLength: 32
      did:
        type: string
        description: Device ID from which the API is called
        maxLength: 1024
      key:
        type: string
        description: API key (API key provided to the caller in case of server to server communication)
        maxLength: 256
      msgId:
        type: string
        description: Unique request message id from the caller
        maxLength: 256
      requesterId:
        type: string
        description: UserId of the user calling
        maxLength: 256
      authToken:
        type: string
        description: //session/jwt/saml token/oauth token - the usual value that would go into HTTP bearer token
      userInfo:
        $ref: '#/definitions/User'
      correlationId:
        type: string
        readOnly: true
    required:
      - apiId
      - ver
      - ts
      - msgId
      - action

  CategoryRequestBody:
    type: object
    properties:
      categoryGetRequest:
        $ref: '#/definitions/CategoryGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  CommunityRequestBody:
    type: object
    properties:
      categoryGetRequest:
        $ref: '#/definitions/CommunityGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  DepartmentRequestBody:
    type: object
    properties:
      departmentGetRequest:
        $ref: '#/definitions/DepartmentGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  HolidayRequestBody:
    type: object
    properties:
      departmentGetRequest:
        $ref: '#/definitions/HolidayGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  LanguageRequestBody:
    type: object
    properties:
      languageGetRequest:
        $ref: '#/definitions/LanguageGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  UOMCategoryRequestBody:
    type: object
    properties:
      uomCategoryGetRequest:
        $ref: '#/definitions/UOMCategoryGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  UOMRequestBody:
    type: object
    properties:
      uomGetRequest:
        $ref: '#/definitions/UOMGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  ModuleRequestBody:
    type: object
    properties:
      languageGetRequest:
        $ref: '#/definitions/ModuleGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  ReligionRequestBody:
    type: object
    properties:
      religionGetRequest:
        $ref: '#/definitions/ReligionGetRequest'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/RequestInfoWrap'

  DepartmentRequest:
    type: object
    properties:
      requestinfo:
        $ref: '#/definitions/RequestInfo'
      Department:
        $ref: '#/definitions/Department'

  HolidayRequest:
    type: object
    properties:
      requestinfo:
        $ref: '#/definitions/RequestInfo'
      holiday:
        $ref: '#/definitions/Holiday'

  CategoryResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      categories:
        type: array
        items:
          $ref: '#/definitions/Category'

  HolidayResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      requestInfoWrapper:
        type: array
        items:
          $ref: '#/definitions/Holiday'

  DepartmentResponse:
    type: object
    properties:
      categoryGetRequest:
        $ref: '#/definitions/ResponseInfo'
      departments:
        type: array
        items:
          $ref: '#/definitions/Department'

  CommunityResponse:
    type: object
    properties:
      categoryGetRequest:
        $ref: '#/definitions/ResponseInfo'
      community:
        type: array
        items:
          $ref: '#/definitions/Community'

  BloodGroupResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      bloodgroup:
        type: array
        items:
          type: string

  MaritalStatusResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      maritalStatus:
        type: array
        items:
          type: string

  RelationshipResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      relationship:
        type: array
        items:
          type: string

  ReligionResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      religion:
        type: array
        items:
          $ref: '#/definitions/Religion'

  GenderResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      gender:
        type: array
        items:
          type: string

  UOMCategoryResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      uomCategory:
        type: array
        items:
          $ref: '#/definitions/UOMCategory'

  UOMResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      uoms:
        type: array
        items:
          $ref: '#/definitions/UOM'

  Community:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      createdBy:
        type: integer
        format: int64
      createdDate:
        type: string
        format: date
      lastModifiedBy:
        type: integer
        format: int64
      lastModifiedDate:
        type: string
        format: date

  Department:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      description:
        type: string

  Category:
    type: object
    properties:
      name:
        type: string
      description:
        type: integer
      id:
        type: integer
        format: int64
      active:
        type: boolean
      tenantId:
        type: string

  Religion:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      id:
        type: integer
        format: int64
      active:
        type: boolean
      tenantId:
        type: string

  UOM:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      description:
        type: string
      category:
        $ref: '#/definitions/UOMCategory'
      id:
        type: integer
        format: int64
      active:
        type: boolean
      tenantId:
        type: string
      conversionFactor:
        type: number
      baseuom:
        type: boolean
      createdBy:
        type: integer
        format: int64
      createdDate:
        type: string
        format: date
      lastModifiedBy:
        type: integer
        format: int64
      lastModifiedDate:
        type: string
        format: date

  Holiday:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      applicableOn:
        type: string
        format: date
      suffixToDate:
        type: string
        format: date
      prefixFromDate:
        type: string
        format: date
      prefixToDate:
        type: string
        format: date
      suffixFromDate:
        type: string
        format: date
      tenantId:
        type: string
      noOfDays:
        type: integer
      calenderYear:
        $ref: '#/definitions/CalendarYear'
      holidayType:
        $ref: '#/definitions/HolidayType'

  UOMCategory:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      id:
        type: integer
        format: int64
      active:
        type: boolean
      tenantId:
        type: string


  CategoryGetRequest:
    type: object
    properties:
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer


  DepartmentGetRequest:
    type: object
    properties:
      id:
        type: array
        items:
          type: string
      codes:
        type: array
        items:
          type: string
      names:
        type: array
        items:
          type: string
      name:
        type: string
      code:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer


  CommunityGetRequest:
    type: object
    properties:
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64


  HolidayGetRequest:
    type: object
    properties:
      year:
        type: integer
      holidayType:
        type: integer
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64
      applicableOn:
        type: integer
        format: date
      fromDate:
        type: integer
        format: date
      toDate:
        type: integer
        format: date


  LanguageGetRequest:
    type: object
    properties:
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64


  ModuleGetRequest:
    type: object
    properties:
      name:
        type: string
      enabled:
        type: boolean
      tenantId:
        type: string
      contextRoot:
        type: string
      displayName:
        type: string
      parentModule:
        type: integer
        format: int64
      orderNumber:
        type: integer
        format: int64
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64


  ReligionGetRequest:
    type: object
    properties:
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64


  UOMGetRequest:
    type: object
    properties:
      code:
        type: string
      name:
        type: string
      active:
        type: boolean
      categoryId:
        type: array
        items:
          type: integer
          format: int64
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64


  UOMCategoryGetRequest:
    type: object
    properties:
      name:
        type: string
      active:
        type: boolean
      tenantId:
        type: string
      sortBy:
        type: string
      sortOrder:
        type: string
      pageSize:
        type: integer
      pageNumber:
        type: integer
      id:
        type: array
        items:
          type: integer
          format: int64


  CalendarYearRequest:
    type: object
    properties:
      requestInfo:
        $ref: '#/definitions/RequestInfo'
      calendarYear:
        type: array
        items:
          $ref: '#/definitions/CalendarYear'

  CalendarYearResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      calendarYear:
        type: array
        items:
          $ref: '#/definitions/CalendarYear'

  BusinessCategoryResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      businessCategoryInfo:
        type: array
        items:
          $ref: '#/definitions/BusinessCategory'

  LanguageResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      languages:
        type: array
        items:
          $ref: '#/definitions/Language'

  EnumResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      businessCategoryInfo:
        type: array
        items:
          $ref: '#/definitions/EnumData'

  ModuleResponse:
    type: object
    properties:
      responseInfo:
        $ref: '#/definitions/ResponseInfo'
      modules:
        type: array
        items:
          $ref: '#/definitions/Module'

  EnumData:
    type: object
    properties:
      key:
        type: string
      object:
        type: object

  RequestInfoWrap:
    type: object
    properties:
      requestInfo:
        $ref: '#/definitions/RequestInfo'

  BusinessCategoryRequest:
    type: object
    properties:
      requestInfo:
        $ref: '#/definitions/RequestInfo'
      businessCategory:
        type: array
        items:
          $ref: '#/definitions/BusinessCategory'

  BusinessDetailsRequest:
    type: object
    properties:
      requestInfo:
        $ref: '#/definitions/RequestInfo'
      businessCategoryInfo:
        type: array
        items:
          $ref: '#/definitions/BusinessDetails'

  BusinessDetailsResponse:
    type: object
    properties:
      requestInfo:
        $ref: '#/definitions/ResponseInfo'
      businessCategoryInfo:
        type: array
        items:
          $ref: '#/definitions/BusinessDetails'

  BusinessDetails:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string
      name:
        type: string
      tenantId:
        type: string
      active:
        type: boolean
      businessCategory:
        type: integer
        format: int64
      businessType:
        type: string
      businessUrl:
        type: string
      department:
        type: string
      fundSource:
        type: string
      functionary:
        type: string
      voucherCreation:
        type: boolean
      callBackForApportioning:
        type: boolean
      voucherCutoffDate:
        type: integer
        format: int64
      orderNumber:
        type: integer
      fund:
        type: string
      function:
        type: string
      accountDetails:
        type: array
        items:
          $ref: '#/definitions/BusinessAccountDetails'

  BusinessAccountDetails:
    type: object
    properties:
      id:
        type: integer
        format: int64
      businessDetails:
        type: string
      chartOfAccounts:
        type: string
      amount:
        type: integer
      tenantId:
        type: string
      subledgerDetails:
        type: array
        items:
          $ref: '#/definitions/BusinessAccountSubLedger'

  BusinessAccountSubLedger:
    type: object
    properties:
      id:
        type: integer
        format: int64
      detailType:
        type: integer
        format: int64
      detailKey:
        type: integer
        format: int64
      amount:
        type: integer
      businessAccountDetails:
        type: integer
        format: int64

  BusinessCategory:
    type: object
    properties:
      id:
        type: integer
        format: int64
      code:
        type: string
      name:
        type: string
      tenantId:
        type: string
      active:
        type: boolean

  CalendarYear:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: integer
      active:
        type: boolean
      tenantId:
        type: string
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date

  HolidayType:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: integer
      tenantId:
        type: string

  Language:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: integer
      tenantId:
        type: string
      description:
        type: string
      active:
        type: boolean

  Module:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: integer
      enabled:
        type: boolean
      contextRoot:
        type: string
      parentModule:
        type: integer
        format: int64
      displayName:
        type: string
      orderNumber:
        type: integer
        format: int64


  User:
    type: object
    description: This is acting ID token of the authenticated user on the server. Any value provided by the clients will be ignored and actual user based on authtoken will be used on the server.
    readOnly: true
    properties:
      tenantId:
        type: string
        description: Unique Identifier of the tenant to which user primarily belongs
      id:
        type: integer
        format: int32
        description: User id of the authenticated user. Will be deprecated in future
      uuid:
        type: string
        description: UUID of the user
      userName:
        type: string
        description: Unique user name of the authenticated user
      mobileNumber:
        type: string
        description: mobile number of the autheticated user
      emailId:
        type: string
        description: email address of the authenticated user
      roles:
        type: array
        description: List of all the roles
        items:
          $ref: '#/definitions/Role'
    required:
      - tenantId
      - userName
      - roles

  Role:
    type: object
    description: |
      minimal representation of the Roles in the system to be carried along in UserInfo with RequestInfo meta data. Actual authorization service to extend this to have more role related attributes
    properties:
      tenantId:
        type: string
        description: TenantId for which the role is given
      id:
        type: string
        format: int32
        description: id of the role
      name:
        type: string
        description: Unique name of the role
        maxLength: 64
      description:
        type: string
        description: brief description of the role
    required:
      - code
      - tenantId


  ResponseInfo:
    type: object
    readOnly: true
    description: ResponseInfo should be used to carry metadata information about the response from the server. apiId, ver and msgId in ResponseInfo should always correspond to the same values in respective request's RequestInfo.
    properties:
      apiId:
        type: string
        description: unique API ID
        maxLength: 128
      ver:
        type: string
        description: API version
        maxLength: 32
      ts:
        type: integer
        format: int64
        description: response time in epoch
      resMsgId:
        type: string
        description: unique response message id (UUID) - will usually be the correlation id from the server
        maxLength: 256
      msgId:
        type: string
        description: message id of the request
        maxLength: 256
      status:
        type: string
        description: status of request processing - to be enhanced in futuer to include INPROGRESS
        enum:
          - SUCCESSFUL
          - FAILED
    required:
      - apiId
      - ver
      - ts
      - status

  Error:
    type: object
    description: Error object will be returned as a part of reponse body in conjunction with ResponseInfo as part of ErrorResponse whenever the request processing status in the ResponseInfo is FAILED. HTTP return in this scenario will usually be HTTP 400.
    properties:
      code:
        type: string
        description: Error Code will be module specific error label/code to identiffy the error. All modules should also publish the Error codes with their specific localized values in localization service to ensure clients can print locale specific error messages. Example for error code would be User.NotFound to indicate User Not Found by User/Authentication service. All services must declare their possible Error Codes with brief description in the error response section of their API path.
      message:
        type: string
        description: English locale message of the error code. Clients should make a separate call to get the other locale description if configured with the service. Clients may choose to cache these locale specific messages to enhance performance with a reasonable TTL (May be defined by the localization service based on tenant + module combination).
      description:
        type: string
        description: Optional long description of the error to help clients take remedial action. This will not be available as part of localization service.
      params:
        type: array
        description: Some error messages may carry replaceable fields (say $1, $2) to provide more context to the message. E.g. Format related errors may want to indicate the actual field for which the format is invalid. Client's should use the values in the param array to replace those fields.
        items:
          type: string
    required:
      - code
      - message

  ErrorRes:
    type: object
    description: All APIs will return ErrorRes in case of failure which will carry ResponseInfo as metadata and Error object as actual representation of error. In case of bulk apis, some apis may chose to return the array of Error objects to indicate individual failure.
    properties:
      ResponseInfo:
        $ref: '#/definitions/ResponseInfo'
      Errors:
        description: Error response array corresponding to Request Object array. In case of single object submission or _search related paths this may be an array of one error element
        type: array
        minLength: 1
        items:
          $ref: '#/definitions/Error'
    required:
      - ResponseInfo

  Address:
    type: object
    description: |
      Representation of a address. Indiavidual APIs may choose to extend from this using allOf if more details needed to be added in their case.
    properties:
      tenantId:
        type: string
        description: Unique Identifier of the tenant to which user primarily belongs
      latitude:
        type: number
        format: double
        description: latitude of the address
      longitude:
        type: number
        format: double
        description: longitude of the address
      addressId:
        type: string
        description: System generated id for the address
        readOnly: true
      addressNumber:
        description: House, Door, Building number in the address
        type: string
      addressLine1:
        description: Apartment, Block, Street of the address
        type: string
      addressLine2:
        description: Locality, Area, Zone, Ward of the address
        type: string
      landmark:
        description: additional landmark to help locate the address
        type: string
      city:
        description: City of the address. Can be represented by the tenantid itself
        type: string
      pincode:
        type: string
        description: PIN code of the address. Indian pincodes will usually be all numbers.
      detail:
        type: string
        description: more address detail as may be needed

  AuditDetails:
    type: object
    description: Collection of audit related fields used by most models
    readOnly: true
    properties:
      createdBy:
        type: string
        description: username (preferred) or userid of the user that created the object
      lastModifiedBy:
        type: string
        description: username (preferred) or userid of the user that last modified the object
      createdTime:
        type: integer
        format: int64
        description: epoch of the time object is created
      lastModifiedTime:
        type: integer
        format: int64
        description: epoch of the time object is last modified

