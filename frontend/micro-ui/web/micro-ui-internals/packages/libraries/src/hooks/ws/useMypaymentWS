import { useQuery, useQueryClient } from "react-query";

export const useMypaymentWS = ({ tenantId, filters, BusinessService="WS",searchedFrom="" }, config = {}) => {
  const client = useQueryClient();
console.log(BusinessService,tenantId,filters)

  const args = tenantId ? { tenantId, filters, BusinessService } : { filters, BusinessService };

  // const defaultSelect = (data,Swdata) => {
    
  //   return data,Swdata;
  // };

  const { isLoading, error, data, isSuccess } = useQuery(["WSSearchList", tenantId, filters, BusinessService], () => Digit.WSService.paymentsearch(args), {
    ...config,
  });

 console.log(data,"dfgfhfgh")
  // const { isSwLoading, Swerror, Swdata, isSwSuccess } = useQuery(["WSSearchList", tenantId, filters, auth], () => Digit.WSService.sw_paymentsearch(args), {
  //   select: defaultSelect,
  //   ...config,
  // });
  // console.log(Swdata,"Swdata")
 
  return {isLoading,error, data, isSuccess, revalidate: () => client.invalidateQueries(["WSSearchList", tenantId, filters, auth]) };

};


export default useMypaymentWS