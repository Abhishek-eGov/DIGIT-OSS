import { LabelFieldPair, CardLabel, TextInput, CardLabelError, FormStep, CitizenInfoLabel, RadioButtons, CardLabelDesc, Dropdown, UploadFile, Card, CardHeader, CardText, CardSubHeader, Loader, SubmitBar, RadioOrSelect, TelePhone, CardSectionHeader, CheckPoint, ConnectingCheckPoints, ActionLinks, LocationSearchCard, TextArea, CheckBox, MobileNumber, LinkButton, Toast, StatusTable, Row, Banner, KeyNote, Header, Localities, FormComposer, ResponseComposer, Modal, AppContainer, BackButton, PrivateRoute, CardCaption, DatePicker, Table, PropertyHouse, CloseSvg, Label, LinkLabel, ActionBar, DetailsCard, SearchAction, FilterAction, PopUp, ShippingTruck, BreakLine, Menu, EmployeeModuleCard, RemoveableTag, CitizenHomeCard, PTIcon } from '@egovernments/digit-ui-react-components';
import React, { useState, useEffect, Fragment as Fragment$1, useMemo, useLayoutEffect, useRef, useCallback } from 'react';
import { useTranslation } from 'react-i18next';
import { useLocation, Link, useHistory, useRouteMatch, Switch, Route, Redirect, useParams } from 'react-router-dom';
import { useForm, Controller } from 'react-hook-form';
import { useQueryClient } from 'react-query';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var Area = function Area(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      setFormError = _ref.setError,
      clearFormErrors = _ref.clearErrors,
      formState = _ref.formState,
      onBlur = _ref.onBlur;
  var index = window.location.href.split("/").pop();
  var validation = {};

  var onSkip = function onSkip() {
    return onSelect();
  };

  var floorarea;
  var setfloorarea;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].floorarea);

    floorarea = _useState[0];
    setfloorarea = _useState[1];
  } else {
    var _formData$landarea;

    var _useState2 = useState((_formData$landarea = formData.landarea) === null || _formData$landarea === void 0 ? void 0 : _formData$landarea.floorarea);

    floorarea = _useState2[0];
    setfloorarea = _useState2[1];
  }

  var _useState3 = useState(null),
      setError = _useState3[1];

  var _useState4 = useState(null),
      unitareaerror = _useState4[0],
      setunitareaerror = _useState4[1];

  var _useState5 = useState(null),
      areanotzeroerror = _useState5[0],
      setareanotzeroerror = _useState5[1];

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var presentInModifyApplication = pathname.includes("modify");

  function setPropertyfloorarea(e) {
    var _formData$PropertyTyp, _formData$units$index, _formData$PropertyTyp2, _formData$floordetail;

    setfloorarea(e.target.value);
    setunitareaerror(null);
    setareanotzeroerror(null);

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp = formData.PropertyType) === null || _formData$PropertyTyp === void 0 ? void 0 : _formData$PropertyTyp.code) === "BUILTUP.INDEPENDENTPROPERTY" && parseInt(formData === null || formData === void 0 ? void 0 : (_formData$units$index = formData.units[index]) === null || _formData$units$index === void 0 ? void 0 : _formData$units$index.builtUpArea) < e.target.value) {
      setunitareaerror("PT_TOTUNITAREA_LESS_THAN_BUILTUP_ERR_MSG");
    }

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp2 = formData.PropertyType) === null || _formData$PropertyTyp2 === void 0 ? void 0 : _formData$PropertyTyp2.code) === "BUILTUP.SHAREDPROPERTY" && parseInt(formData === null || formData === void 0 ? void 0 : (_formData$floordetail = formData.floordetails) === null || _formData$floordetail === void 0 ? void 0 : _formData$floordetail.builtUpArea) < e.target.value) {
      setunitareaerror("PT_SELFOCCUPIED_AREA_LESS_THAN_BUILTUP");
    }

    if (parseInt(e.target.value) == 0) {
      setareanotzeroerror("PT_AREA_NOT_0_MSG");
    }
  }

  var goNext = function goNext() {
    if (!isNaN(index)) {
      var _formData$isResdentia, _formData$usageCatego, _formData$PropertyTyp3;

      var unit = formData.units && formData.units[index];

      if (((formData === null || formData === void 0 ? void 0 : (_formData$isResdentia = formData.isResdential) === null || _formData$isResdentia === void 0 ? void 0 : _formData$isResdentia.i18nKey) === "PT_COMMON_YES" || (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego = formData.usageCategoryMajor) === null || _formData$usageCatego === void 0 ? void 0 : _formData$usageCatego.i18nKey) == "PROPERTYTAX_BILLING_SLAB_NONRESIDENTIAL") && (formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp3 = formData.PropertyType) === null || _formData$PropertyTyp3 === void 0 ? void 0 : _formData$PropertyTyp3.i18nKey) !== "COMMON_PROPTYPE_VACANT") {
        sessionStorage.setItem("area", "yes");
      } else {
        sessionStorage.setItem("area", "no");
      }

      var floordet = _extends({}, unit, {
        floorarea: floorarea
      });

      onSelect(config.key, floordet, false, index);
    } else {
      var _formData$isResdentia2, _formData$usageCatego2, _formData$PropertyTyp4, _formData$PropertyTyp5;

      if (((formData === null || formData === void 0 ? void 0 : (_formData$isResdentia2 = formData.isResdential) === null || _formData$isResdentia2 === void 0 ? void 0 : _formData$isResdentia2.i18nKey) === "PT_COMMON_YES" || (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego2 = formData.usageCategoryMajor) === null || _formData$usageCatego2 === void 0 ? void 0 : _formData$usageCatego2.i18nKey) == "PROPERTYTAX_BILLING_SLAB_NONRESIDENTIAL") && (formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp4 = formData.PropertyType) === null || _formData$PropertyTyp4 === void 0 ? void 0 : _formData$PropertyTyp4.i18nKey) !== "COMMON_PROPTYPE_VACANT") {
        sessionStorage.setItem("area", "yes");
      } else if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp5 = formData.PropertyType) === null || _formData$PropertyTyp5 === void 0 ? void 0 : _formData$PropertyTyp5.code) === "VACANT") {
        sessionStorage.setItem("area", "vacant");
      } else {
        sessionStorage.setItem("area", "no");
      }

      onSelect("landarea", {
        floorarea: floorarea
      });
    }
  };

  function onChange(e) {
    if (e.target.value.length > 1024) {
      setError("CS_COMMON_LANDMARK_MAX_LENGTH");
    } else {
      setError(null);
      setfloorarea(e.target.value);
    }
  }

  useEffect(function () {
    if (userType === "employee") {
      if (!Number(floorarea)) setFormError(config.key, {
        type: "required",
        message: t("CORE_COMMON_REQUIRED_ERRMSG")
      });else if (isNaN(floorarea)) setFormError(config.key, {
        type: "invalid",
        message: t("ERR_DEFAULT_INPUT_FIELD_MSG")
      });else clearFormErrors(config.key);
      onSelect(config.key, floorarea);
    }
  }, [floorarea]);
  useEffect(function () {
    if (presentInModifyApplication && userType === "employee") {
      var _formData$originalDat;

      setfloorarea(formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : _formData$originalDat.landArea);
    }
  }, []);
  var inputs = [{
    label: "PT_PLOT_SIZE_SQUARE_FEET_LABEL",
    type: "text",
    name: "area",
    validation: {}
  }];

  if (userType === "employee") {
    return inputs === null || inputs === void 0 ? void 0 : inputs.map(function (input, index) {
      var _formState$errors, _formState$errors$con;

      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, t(input.label) + " *"), /*#__PURE__*/React.createElement("div", {
        className: "field"
      }, /*#__PURE__*/React.createElement(TextInput, _extends({
        key: input.name,
        id: input.name,
        value: floorarea,
        onChange: onChange
      }, input.validation, {
        onBlur: onBlur
      })))), formState.touched[config.key] ? /*#__PURE__*/React.createElement(CardLabelError, {
        style: {
          width: "70%",
          marginLeft: "30%",
          fontSize: "12px",
          marginTop: "-21px"
        }
      }, (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$con = _formState$errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.message) : null);
    });
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onChange: onChange,
    forcedError: t(unitareaerror) || t(areanotzeroerror),
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    isDisabled: unitareaerror || areanotzeroerror || !floorarea,
    showErrorBelowChildren: true
  }, /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_PLOT_SIZE_SQUARE_FEET_LABEL")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    type: "number",
    isMandatory: false,
    optionKey: "i18nKey",
    name: "floorarea",
    value: floorarea,
    onChange: setPropertyfloorarea
  }, validation = {
    pattern: "^([0-9]){0,8}$",
    type: "number",
    title: t("PT_PLOT_SIZE_ERROR_MESSAGE")
  })));
};

var GroundFloorDetails = function GroundFloorDetails(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var validation = {};

  var onSkip = function onSkip() {
    return onSelect();
  };

  var plotSize, builtUpArea, setplotSize, setbuiltUpArea;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].plotSize);

    plotSize = _useState[0];
    setplotSize = _useState[1];

    var _useState2 = useState(formData.units && formData.units[index] && formData.units[index].builtUpArea);

    builtUpArea = _useState2[0];
    setbuiltUpArea = _useState2[1];
  } else {
    var _formData$floordetail, _formData$floordetail2;

    var _useState3 = useState((_formData$floordetail = formData.floordetails) === null || _formData$floordetail === void 0 ? void 0 : _formData$floordetail.plotSize);

    plotSize = _useState3[0];
    setplotSize = _useState3[1];

    var _useState4 = useState((_formData$floordetail2 = formData.floordetails) === null || _formData$floordetail2 === void 0 ? void 0 : _formData$floordetail2.builtUpArea);

    builtUpArea = _useState4[0];
    setbuiltUpArea = _useState4[1];
  }

  var _useState5 = useState(null),
      builtupplotsizeeroor = _useState5[0],
      setbuiltupplotsizeeroor = _useState5[1];

  var _useState6 = useState(null),
      areanotzeroerror = _useState6[0],
      setareanotzeroerror = _useState6[1];

  function setPropertyplotSize(e) {
    setplotSize(e.target.value);
    setbuiltupplotsizeeroor(null);
    setareanotzeroerror(null);

    if (e.target.value && parseInt(builtUpArea) > parseInt(e.target.value)) {
      setbuiltupplotsizeeroor("PT_BUILTUPAREA_PLOTSIZE_ERROR_MSG");
    }

    if (parseInt(e.target.value) == 0) {
      setareanotzeroerror("PT_AREA_NOT_0_MSG");
    }
  }

  function setPropertybuiltUpArea(e) {
    var _formData$PropertyTyp;

    setbuiltUpArea(e.target.value);
    setbuiltupplotsizeeroor(null);
    setareanotzeroerror(null);

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp = formData.PropertyType) === null || _formData$PropertyTyp === void 0 ? void 0 : _formData$PropertyTyp.i18nKey) === "COMMON_PROPTYPE_BUILTUP_INDEPENDENTPROPERTY" && index != "0") {
      var _formData$units$, _formData$units$2;

      if (formData !== null && formData !== void 0 && (_formData$units$ = formData.units[0]) !== null && _formData$units$ !== void 0 && _formData$units$.plotSize && parseInt(e.target.value) > parseInt(formData === null || formData === void 0 ? void 0 : (_formData$units$2 = formData.units[0]) === null || _formData$units$2 === void 0 ? void 0 : _formData$units$2.plotSize)) {
        setbuiltupplotsizeeroor("PT_BUILTUPAREA_PLOTSIZE_ERROR_MSG");
      }
    } else {
      if (plotSize && parseInt(e.target.value) > parseInt(plotSize)) {
        setbuiltupplotsizeeroor("PT_BUILTUPAREA_PLOTSIZE_ERROR_MSG");
      }
    }

    if (parseInt(e.target.value) == 0) {
      setareanotzeroerror("PT_AREA_NOT_0_MSG");
    }
  }

  var getheader = function getheader() {
    var _formData$PropertyTyp2;

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp2 = formData.PropertyType) === null || _formData$PropertyTyp2 === void 0 ? void 0 : _formData$PropertyTyp2.i18nKey) === "COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY") {
      return "PT_FLOOR_DETAILS_HEADER";
    } else {
      return "PROPERTYTAX_FLOOR_" + index + "_DETAILS";
    }
  };

  var goNext = function goNext() {
    if (!isNaN(index)) {
      var unit = formData.units && formData.units[index] || null;

      if (unit !== null) {
        unit["builtUpArea"] = builtUpArea;
        unit["plotSize"] = plotSize;
        onSelect(config.key, unit, "", index);
      } else {
        var floordet = {
          plotSize: plotSize,
          builtUpArea: builtUpArea
        };
        sessionStorage.setItem("propertyArea", "multiple");
        onSelect(config.key, floordet, "", index);
      }
    } else {
      sessionStorage.setItem("propertyArea", "multiple");
      onSelect("floordetails", {
        plotSize: plotSize,
        builtUpArea: builtUpArea
      });
    }
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    config: (config.texts.header = getheader(), config),
    header: "ground",
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    forcedError: t(builtupplotsizeeroor) || t(areanotzeroerror),
    isDisabled: builtupplotsizeeroor || areanotzeroerror || !builtUpArea && (!plotSize || !builtUpArea),
    showErrorBelowChildren: true
  }, (index === "0" || isNaN(index)) && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FLOOR_DETAILS_PLOT_SIZE_LABEL")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    type: "number",
    isMandatory: false,
    optionKey: "i18nKey",
    name: "PlotSize",
    value: plotSize,
    onChange: setPropertyplotSize
  }, validation = {
    pattern: "^([0-9]){0,8}$",
    type: "number",
    title: t("PT_PLOT_SIZE_ERROR_MESSAGE")
  }))), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FLOOR_DETAILS_BUILT_UP_AREA_LABEL")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    type: "number",
    isMandatory: false,
    optionKey: "i18nKey",
    name: "BuiltUpArea",
    value: builtUpArea,
    onChange: setPropertybuiltUpArea
  }, validation = {
    pattern: "^([0-9]){0,8}$",
    type: "number",
    title: t("PT_BUILT_AREA_ERROR_MESSAGE")
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_FLOOR_AREA_INFO_MSG")
  }));
};

var IsAnyPartOfThisFloorUnOccupied = function IsAnyPartOfThisFloorUnOccupied(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var IsAnyPartOfThisFloorUnOccupied, setSelfOccupied;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].IsAnyPartOfThisFloorUnOccupied);

    IsAnyPartOfThisFloorUnOccupied = _useState[0];
    setSelfOccupied = _useState[1];
  } else {
    var _useState2 = useState(formData === null || formData === void 0 ? void 0 : formData.IsAnyPartOfThisFloorUnOccupied);

    IsAnyPartOfThisFloorUnOccupied = _useState2[0];
    setSelfOccupied = _useState2[1];
  }

  var data = [{
    i18nKey: "PT_COMMON_YES",
    code: "UNOCCUPIED"
  }, {
    i18nKey: "PT_COMMON_NO",
    code: "UNOCCUPIED"
  }];

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectSelfOccupied(value) {
    setSelfOccupied(value);
  }

  var getheaderCaption = function getheaderCaption() {
    var _formData$PropertyTyp;

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp = formData.PropertyType) === null || _formData$PropertyTyp === void 0 ? void 0 : _formData$PropertyTyp.i18nKey) === "COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY") {
      return "PT_FLOOR_DETAILS_HEADER";
    } else {
      return "PROPERTYTAX_FLOOR_" + index + "_DETAILS";
    }
  };

  function goNext() {
    var index = window.location.href.split("/").pop();

    if (!isNaN(index)) {
      sessionStorage.setItem("IsAnyPartOfThisFloorUnOccupied", IsAnyPartOfThisFloorUnOccupied.i18nKey);
      var unit = formData.units && formData.units[index];

      var floordet = _extends({}, unit, {
        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied
      });

      onSelect(config.key, floordet, false, index);

      if (IsAnyPartOfThisFloorUnOccupied.i18nKey === "PT_COMMON_NO") {
        var _formData$noOfFloors, _formData$noOfFloors2, _formData$noOofBaseme, _formData$noOofBaseme2, _formData$noOofBaseme3;

        if ((formData === null || formData === void 0 ? void 0 : (_formData$noOfFloors = formData.noOfFloors) === null || _formData$noOfFloors === void 0 ? void 0 : _formData$noOfFloors.i18nKey) === "PT_GROUND_PLUS_ONE_OPTION" && index < 1 && index > -1) {
          var newIndex1 = parseInt(index) + 1;
          onSelect("floordetails", {}, true, newIndex1, true);
        } else if ((formData === null || formData === void 0 ? void 0 : (_formData$noOfFloors2 = formData.noOfFloors) === null || _formData$noOfFloors2 === void 0 ? void 0 : _formData$noOfFloors2.i18nKey) === "PT_GROUND_PLUS_TWO_OPTION" && index < 2 && index > -1) {
          var newIndex2 = parseInt(index) + 1;
          onSelect("floordetails", {}, true, newIndex2, true);
        } else if (((formData === null || formData === void 0 ? void 0 : (_formData$noOofBaseme = formData.noOofBasements) === null || _formData$noOofBaseme === void 0 ? void 0 : _formData$noOofBaseme.i18nKey) === "PT_ONE_BASEMENT_OPTION" || (formData === null || formData === void 0 ? void 0 : (_formData$noOofBaseme2 = formData.noOofBasements) === null || _formData$noOofBaseme2 === void 0 ? void 0 : _formData$noOofBaseme2.i18nKey) === "PT_TWO_BASEMENT_OPTION") && index > -1) {
          onSelect("floordetails", {}, true, "-1", true);
        } else if ((formData === null || formData === void 0 ? void 0 : (_formData$noOofBaseme3 = formData.noOofBasements) === null || _formData$noOofBaseme3 === void 0 ? void 0 : _formData$noOofBaseme3.i18nKey) === "PT_TWO_BASEMENT_OPTION" && index != -2) {
          onSelect("floordetails", {}, true, "-2", true);
        }
      }
    } else {
      sessionStorage.setItem("IsAnyPartOfThisFloorUnOccupied", IsAnyPartOfThisFloorUnOccupied.i18nKey);
      onSelect("IsAnyPartOfThisFloorUnOccupied", IsAnyPartOfThisFloorUnOccupied);
    }
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: (config.texts.headerCaption = getheaderCaption(), config),
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !IsAnyPartOfThisFloorUnOccupied
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: data,
    selectedOption: IsAnyPartOfThisFloorUnOccupied,
    onSelect: selectSelfOccupied
  }));
};

var IsResidential = function IsResidential(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : formData.isResdential),
      isResdential = _useState[0],
      setisResdential = _useState[1];

  var menu = [{
    i18nKey: "PT_COMMON_YES",
    code: "RESIDENTIAL"
  }, {
    i18nKey: "PT_COMMON_NO",
    code: "NONRESIDENTIAL"
  }];

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectisResdential(value) {
    setisResdential(value);
  }

  function goNext() {
    if (isResdential.i18nKey === "PT_COMMON_NO") {
      sessionStorage.setItem("isResdential", isResdential.i18nKey);
      onSelect(config.key, isResdential);
    } else {
      sessionStorage.setItem("isResdential", isResdential.i18nKey);
      onSelect(config.key, isResdential);
    }
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !isResdential
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: isResdential,
    onSelect: selectisResdential
  }));
};

var IsThisFloorSelfOccupied = function IsThisFloorSelfOccupied(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var selfOccupied, setSelfOccupied;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].selfOccupied);

    selfOccupied = _useState[0];
    setSelfOccupied = _useState[1];
  } else {
    var _useState2 = useState(formData === null || formData === void 0 ? void 0 : formData.selfOccupied);

    selfOccupied = _useState2[0];
    setSelfOccupied = _useState2[1];
  }

  var data = [{
    i18nKey: "PT_FULLY_RENTED_OUT",
    code: "RENTED"
  }, {
    i18nKey: "PT_PARTIALLY_RENTED_OUT",
    code: "RENTED"
  }, {
    i18nKey: "PT_YES_IT_IS_SELFOCCUPIED",
    code: "SELFOCCUPIED"
  }];

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectSelfOccupied(value) {
    setSelfOccupied(value);
  }

  function goNext() {
    var _formData$isResdentia, _formData$usageCatego;

    var index = window.location.href.split("/").pop();

    if ((formData === null || formData === void 0 ? void 0 : (_formData$isResdentia = formData.isResdential) === null || _formData$isResdentia === void 0 ? void 0 : _formData$isResdentia.i18nKey) === "PT_COMMON_YES" || (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego = formData.usageCategoryMajor) === null || _formData$usageCatego === void 0 ? void 0 : _formData$usageCatego.i18nKey) == "PROPERTYTAX_BILLING_SLAB_NONRESIDENTIAL") {
      var temp = selfOccupied.i18nKey + "1";
      sessionStorage.setItem("IsThisFloorSelfOccupied", temp);
    } else {
      sessionStorage.setItem("IsThisFloorSelfOccupied", selfOccupied.i18nKey);
    }

    if (!isNaN(index)) {
      var unit = formData.units && formData.units[index];

      var floordet = _extends({}, unit, {
        selfOccupied: selfOccupied
      });

      onSelect(config.key, floordet, false, index);
    } else {
      onSelect("selfOccupied", selfOccupied);
    }
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !selfOccupied
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: data,
    selectedOption: selfOccupied,
    onSelect: selectSelfOccupied
  }));
};

var _iteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator")) : "@@iterator";
var _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")) : "@@asyncIterator";
function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }

  if (result && result.then) {
    return result.then(void 0, recover);
  }

  return result;
}

var checkForNotNull = function checkForNotNull(value) {
  if (value === void 0) {
    value = "";
  }

  return value && value != null && value != undefined && value != "" ? true : false;
};
var convertDotValues = function convertDotValues(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && (value.replaceAll && value.replaceAll(".", "_") || value.replace && stringReplaceAll(value, ".", "_")) || "NA";
};
var convertToLocale = function convertToLocale(value, key) {
  if (value === void 0) {
    value = "";
  }

  if (key === void 0) {
    key = "";
  }

  var convertedValue = convertDotValues(value);

  if (convertedValue == "NA") {
    return "PT_NA";
  }

  return key + "_" + convertedValue;
};
var getPropertyTypeLocale = function getPropertyTypeLocale(value) {
  if (value === void 0) {
    value = "";
  }

  return convertToLocale(value, "COMMON_PROPTYPE");
};
var getPropertyUsageTypeLocale = function getPropertyUsageTypeLocale(value) {
  if (value === void 0) {
    value = "";
  }

  return convertToLocale(value, "COMMON_PROPUSGTYPE");
};
var getPropertySubUsageTypeLocale = function getPropertySubUsageTypeLocale(value) {
  if (value === void 0) {
    value = "";
  }

  return convertToLocale(value, "COMMON_PROPSUBUSGTYPE");
};
var getPropertyOccupancyTypeLocale = function getPropertyOccupancyTypeLocale(value) {
  if (value === void 0) {
    value = "";
  }

  return convertToLocale(value, "PROPERTYTAX_OCCUPANCYTYPE");
};
var getMohallaLocale = function getMohallaLocale(value, tenantId) {
  if (value === void 0) {
    value = "";
  }

  if (tenantId === void 0) {
    tenantId = "";
  }

  var convertedValue = convertDotValues(tenantId);

  if (convertedValue == "NA" || !checkForNotNull(value)) {
    return "PT_NA";
  }

  convertedValue = convertedValue.toUpperCase();
  return convertToLocale(value, convertedValue + "_REVENUE");
};
var getCityLocale = function getCityLocale(value) {
  if (value === void 0) {
    value = "";
  }

  var convertedValue = convertDotValues(value);

  if (convertedValue == "NA" || !checkForNotNull(value)) {
    return "PT_NA";
  }

  convertedValue = convertedValue.toUpperCase();
  return convertToLocale(convertedValue, "TENANT_TENANTS");
};
var getPropertyOwnerTypeLocale = function getPropertyOwnerTypeLocale(value) {
  if (value === void 0) {
    value = "";
  }

  return convertToLocale(value, "PROPERTYTAX_OWNERTYPE");
};
var getFixedFilename = function getFixedFilename(filename, size) {
  if (filename === void 0) {
    filename = "";
  }

  if (size === void 0) {
    size = 5;
  }

  if (filename.length <= size) {
    return filename;
  }

  return filename.substr(0, size) + "...";
};
var shouldHideBackButton = function shouldHideBackButton(config) {
  if (config === void 0) {
    config = [];
  }

  return config.filter(function (key) {
    return window.location.href.includes(key.screenPath);
  }).length > 0 ? true : false;
};
var cardBodyStyle = {};
var setAddressDetails = function setAddressDetails(data) {
  var _address$city, _address$locality, _address$locality2;

  var address = data.address;

  var propAddress = _extends({}, address, {
    pincode: address === null || address === void 0 ? void 0 : address.pincode,
    landmark: address === null || address === void 0 ? void 0 : address.landmark,
    city: address === null || address === void 0 ? void 0 : (_address$city = address.city) === null || _address$city === void 0 ? void 0 : _address$city.name,
    doorNo: address === null || address === void 0 ? void 0 : address.doorNo,
    street: address === null || address === void 0 ? void 0 : address.street,
    locality: {
      code: (address === null || address === void 0 ? void 0 : (_address$locality = address.locality) === null || _address$locality === void 0 ? void 0 : _address$locality.code) || "NA",
      area: address === null || address === void 0 ? void 0 : (_address$locality2 = address.locality) === null || _address$locality2 === void 0 ? void 0 : _address$locality2.name
    }
  });

  data.address = propAddress;
  return data;
};
var setOwnerDetails = function setOwnerDetails(data) {
  var address = data.address,
      owners = data.owners;
  var institution = {},
      owner = [];

  if (owners && owners.length > 0) {
    var _data$ownershipCatego, _data$ownershipCatego2;

    if ((data === null || data === void 0 ? void 0 : (_data$ownershipCatego = data.ownershipCategory) === null || _data$ownershipCatego === void 0 ? void 0 : _data$ownershipCatego.value) === "INSTITUTIONALPRIVATE" || (data === null || data === void 0 ? void 0 : (_data$ownershipCatego2 = data.ownershipCategory) === null || _data$ownershipCatego2 === void 0 ? void 0 : _data$ownershipCatego2.value) === "INSTITUTIONALGOVERNMENT") {
      var _owners$, _owners$2, _owners$3, _address$city2, _owners$4, _owners$4$inistitutet, _owners$5, _owners$5$documents$p, _owners$8, _owners$9, _owners$10, _owners$11, _owners$12, _owners$13, _owners$14, _owners$15, _owners$15$ownerType;

      institution.designation = (_owners$ = owners[0]) === null || _owners$ === void 0 ? void 0 : _owners$.designation;
      institution.name = (_owners$2 = owners[0]) === null || _owners$2 === void 0 ? void 0 : _owners$2.inistitutionName;
      institution.nameOfAuthorizedPerson = (_owners$3 = owners[0]) === null || _owners$3 === void 0 ? void 0 : _owners$3.name;
      institution.tenantId = address === null || address === void 0 ? void 0 : (_address$city2 = address.city) === null || _address$city2 === void 0 ? void 0 : _address$city2.code;
      institution.type = (_owners$4 = owners[0]) === null || _owners$4 === void 0 ? void 0 : (_owners$4$inistitutet = _owners$4.inistitutetype) === null || _owners$4$inistitutet === void 0 ? void 0 : _owners$4$inistitutet.value;
      var document = [];

      if ((_owners$5 = owners[0]) !== null && _owners$5 !== void 0 && (_owners$5$documents$p = _owners$5.documents["proofIdentity"]) !== null && _owners$5$documents$p !== void 0 && _owners$5$documents$p.fileStoreId) {
        var _owners$6, _owners$6$documents$p, _owners$7, _owners$7$documents$p, _owners$7$documents$p2;

        document.push({
          fileStoreId: ((_owners$6 = owners[0]) === null || _owners$6 === void 0 ? void 0 : (_owners$6$documents$p = _owners$6.documents["proofIdentity"]) === null || _owners$6$documents$p === void 0 ? void 0 : _owners$6$documents$p.fileStoreId) || "",
          documentType: ((_owners$7 = owners[0]) === null || _owners$7 === void 0 ? void 0 : (_owners$7$documents$p = _owners$7.documents["proofIdentity"]) === null || _owners$7$documents$p === void 0 ? void 0 : (_owners$7$documents$p2 = _owners$7$documents$p.documentType) === null || _owners$7$documents$p2 === void 0 ? void 0 : _owners$7$documents$p2.code) || ""
        });
      }

      owner.push({
        altContactNumber: (_owners$8 = owners[0]) === null || _owners$8 === void 0 ? void 0 : _owners$8.altContactNumber,
        correspondenceAddress: (_owners$9 = owners[0]) === null || _owners$9 === void 0 ? void 0 : _owners$9.permanentAddress,
        designation: (_owners$10 = owners[0]) === null || _owners$10 === void 0 ? void 0 : _owners$10.designation,
        emailId: (_owners$11 = owners[0]) === null || _owners$11 === void 0 ? void 0 : _owners$11.emailId,
        isCorrespondenceAddress: (_owners$12 = owners[0]) === null || _owners$12 === void 0 ? void 0 : _owners$12.isCorrespondenceAddress,
        mobileNumber: (_owners$13 = owners[0]) === null || _owners$13 === void 0 ? void 0 : _owners$13.mobileNumber,
        name: (_owners$14 = owners[0]) === null || _owners$14 === void 0 ? void 0 : _owners$14.name,
        ownerType: ((_owners$15 = owners[0]) === null || _owners$15 === void 0 ? void 0 : (_owners$15$ownerType = _owners$15.ownerType) === null || _owners$15$ownerType === void 0 ? void 0 : _owners$15$ownerType.code) || "NONE",
        documents: document
      });
      data.institution = institution;
      data.owners = owner;
    } else {
      owners.map(function (ownr) {
        var _ownr$ownerType, _ownr$documents$proof, _ownr$gender, _ownr$ownerType2, _ownr$relationship;

        var document = [];

        if ((ownr === null || ownr === void 0 ? void 0 : (_ownr$ownerType = ownr.ownerType) === null || _ownr$ownerType === void 0 ? void 0 : _ownr$ownerType.code) != "NONE") {
          var _ownr$documents$speci, _ownr$documents$speci2, _ownr$documents$speci3;

          document.push({
            fileStoreId: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$speci = ownr.documents["specialProofIdentity"]) === null || _ownr$documents$speci === void 0 ? void 0 : _ownr$documents$speci.fileStoreId) || "",
            documentType: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$speci2 = ownr.documents["specialProofIdentity"]) === null || _ownr$documents$speci2 === void 0 ? void 0 : (_ownr$documents$speci3 = _ownr$documents$speci2.documentType) === null || _ownr$documents$speci3 === void 0 ? void 0 : _ownr$documents$speci3.code) || ""
          });
        }

        if (ownr !== null && ownr !== void 0 && (_ownr$documents$proof = ownr.documents["proofIdentity"]) !== null && _ownr$documents$proof !== void 0 && _ownr$documents$proof.fileStoreId) {
          var _ownr$documents$proof2, _ownr$documents$proof3, _ownr$documents$proof4;

          document.push({
            fileStoreId: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$proof2 = ownr.documents["proofIdentity"]) === null || _ownr$documents$proof2 === void 0 ? void 0 : _ownr$documents$proof2.fileStoreId) || "",
            documentType: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$proof3 = ownr.documents["proofIdentity"]) === null || _ownr$documents$proof3 === void 0 ? void 0 : (_ownr$documents$proof4 = _ownr$documents$proof3.documentType) === null || _ownr$documents$proof4 === void 0 ? void 0 : _ownr$documents$proof4.code) || ""
          });
        }

        owner.push({
          emailId: ownr === null || ownr === void 0 ? void 0 : ownr.emailId,
          fatherOrHusbandName: ownr === null || ownr === void 0 ? void 0 : ownr.fatherOrHusbandName,
          gender: ownr === null || ownr === void 0 ? void 0 : (_ownr$gender = ownr.gender) === null || _ownr$gender === void 0 ? void 0 : _ownr$gender.value,
          isCorrespondenceAddress: ownr === null || ownr === void 0 ? void 0 : ownr.isCorrespondenceAddress,
          mobileNumber: ownr === null || ownr === void 0 ? void 0 : ownr.mobileNumber,
          name: ownr === null || ownr === void 0 ? void 0 : ownr.name,
          ownerType: (ownr === null || ownr === void 0 ? void 0 : (_ownr$ownerType2 = ownr.ownerType) === null || _ownr$ownerType2 === void 0 ? void 0 : _ownr$ownerType2.code) || "NONE",
          permanentAddress: ownr === null || ownr === void 0 ? void 0 : ownr.permanentAddress,
          relationship: ownr === null || ownr === void 0 ? void 0 : (_ownr$relationship = ownr.relationship) === null || _ownr$relationship === void 0 ? void 0 : _ownr$relationship.code,
          documents: document
        });
      });
      data.owners = owner;
    }
  }

  return data;
};
var setDocumentDetails = function setDocumentDetails(data) {
  var _address$documents$Pr;

  var address = data.address,
      owners = data.owners;
  var documents = [];

  if (address !== null && address !== void 0 && (_address$documents$Pr = address.documents["ProofOfAddress"]) !== null && _address$documents$Pr !== void 0 && _address$documents$Pr.id) {
    var _address$documents$Pr2, _address$documents$Pr3, _address$documents$Pr4, _address$documents$Pr5, _address$documents$Pr6;

    documents.push({
      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr2 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr2 === void 0 ? void 0 : _address$documents$Pr2.fileStoreId) || "",
      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr3 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr3 === void 0 ? void 0 : (_address$documents$Pr4 = _address$documents$Pr3.documentType) === null || _address$documents$Pr4 === void 0 ? void 0 : _address$documents$Pr4.code) || "",
      id: (address === null || address === void 0 ? void 0 : (_address$documents$Pr5 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr5 === void 0 ? void 0 : _address$documents$Pr5.id) || "",
      status: (address === null || address === void 0 ? void 0 : (_address$documents$Pr6 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr6 === void 0 ? void 0 : _address$documents$Pr6.status) || ""
    });
  } else {
    var _address$documents$Pr7, _address$documents$Pr8, _address$documents$Pr9;

    documents.push({
      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr7 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr7 === void 0 ? void 0 : _address$documents$Pr7.fileStoreId) || "",
      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr8 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr8 === void 0 ? void 0 : (_address$documents$Pr9 = _address$documents$Pr8.documentType) === null || _address$documents$Pr9 === void 0 ? void 0 : _address$documents$Pr9.code) || ""
    });
  }

  owners && owners.length > 0 && owners.map(function (owner) {
    if (owner.documents && owner.documents["proofIdentity"]) {
      var _owner$documents$proo;

      if (owner !== null && owner !== void 0 && (_owner$documents$proo = owner.documents["proofIdentity"]) !== null && _owner$documents$proo !== void 0 && _owner$documents$proo.id) {
        var _owner$documents$proo2, _owner$documents$proo3, _owner$documents$proo4;

        documents.push({
          fileStoreId: (owner === null || owner === void 0 ? void 0 : owner.documents["proofIdentity"].fileStoreId) || "",
          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo2 = owner.documents["proofIdentity"].documentType) === null || _owner$documents$proo2 === void 0 ? void 0 : _owner$documents$proo2.code) || "",
          id: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo3 = owner.documents["proofIdentity"]) === null || _owner$documents$proo3 === void 0 ? void 0 : _owner$documents$proo3.id) || "",
          status: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo4 = owner.documents["proofIdentity"]) === null || _owner$documents$proo4 === void 0 ? void 0 : _owner$documents$proo4.status) || ""
        });
      } else {
        var _owner$documents$proo5;

        documents.push({
          fileStoreId: (owner === null || owner === void 0 ? void 0 : owner.documents["proofIdentity"].fileStoreId) || "",
          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo5 = owner.documents["proofIdentity"].documentType) === null || _owner$documents$proo5 === void 0 ? void 0 : _owner$documents$proo5.code) || ""
        });
      }
    }

    if (owner.documents && owner.documents["specialProofIdentity"]) {
      var _owner$documents$spec;

      if (owner !== null && owner !== void 0 && (_owner$documents$spec = owner.documents["specialProofIdentity"]) !== null && _owner$documents$spec !== void 0 && _owner$documents$spec.id) {
        var _owner$documents$spec2, _owner$documents$spec3, _owner$documents$spec4, _owner$documents$spec5, _owner$documents$spec6;

        documents.push({
          fileStoreId: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec2 = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec2 === void 0 ? void 0 : _owner$documents$spec2.fileStoreId) || "",
          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec3 = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec3 === void 0 ? void 0 : (_owner$documents$spec4 = _owner$documents$spec3.documentType) === null || _owner$documents$spec4 === void 0 ? void 0 : _owner$documents$spec4.code) || "",
          id: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec5 = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec5 === void 0 ? void 0 : _owner$documents$spec5.id) || "",
          status: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec6 = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec6 === void 0 ? void 0 : _owner$documents$spec6.status) || ""
        });
      } else {
        var _owner$documents$spec7, _owner$documents$spec8, _owner$documents$spec9;

        documents.push({
          fileStoreId: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec7 = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec7 === void 0 ? void 0 : _owner$documents$spec7.fileStoreId) || "",
          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec8 = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec8 === void 0 ? void 0 : (_owner$documents$spec9 = _owner$documents$spec8.documentType) === null || _owner$documents$spec9 === void 0 ? void 0 : _owner$documents$spec9.code) || ""
        });
      }
    }
  });
  data.documents = documents;
  return data;
};

var getUsageType = function getUsageType(data) {
  var _data$isResdential;

  if ((data === null || data === void 0 ? void 0 : (_data$isResdential = data.isResdential) === null || _data$isResdential === void 0 ? void 0 : _data$isResdential.code) == "RESIDENTIAL") {
    var _data$isResdential2;

    return data === null || data === void 0 ? void 0 : (_data$isResdential2 = data.isResdential) === null || _data$isResdential2 === void 0 ? void 0 : _data$isResdential2.code;
  } else {
    var _data$usageCategoryMa;

    return data === null || data === void 0 ? void 0 : (_data$usageCategoryMa = data.usageCategoryMajor) === null || _data$usageCategoryMa === void 0 ? void 0 : _data$usageCategoryMa.code;
  }
};

var getFloorNumber = function getFloorNumber(data) {
  var _data$Floorno;

  var floorcode = data === null || data === void 0 ? void 0 : (_data$Floorno = data.Floorno) === null || _data$Floorno === void 0 ? void 0 : _data$Floorno.i18nKey;

  if (floorcode.charAt(floorcode.length - 3) === "_" && floorcode.charAt(floorcode.length - 2) === "_") {
    return "-" + floorcode.charAt(floorcode.length - 1);
  } else {
    if (floorcode.charAt(floorcode.length - 2) !== "_") {
      return floorcode.charAt(floorcode.length - 2) + floorcode.charAt(floorcode.length - 1);
    } else {
      return floorcode.charAt(floorcode.length - 1);
    }
  }
};

var getSuperBuiltUparea = function getSuperBuiltUparea(data) {
  var _data$selfOccupied;

  var builtUpArea;

  if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied = data.selfOccupied) === null || _data$selfOccupied === void 0 ? void 0 : _data$selfOccupied.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED") {
    var _data$floordetails;

    builtUpArea = parseInt(data === null || data === void 0 ? void 0 : (_data$floordetails = data.floordetails) === null || _data$floordetails === void 0 ? void 0 : _data$floordetails.builtUpArea);
  } else {
    var _data$selfOccupied2;

    if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied2 = data.selfOccupied) === null || _data$selfOccupied2 === void 0 ? void 0 : _data$selfOccupied2.i18nKey) === "PT_PARTIALLY_RENTED_OUT") {
      var _data$landarea, _data$Constructiondet;

      builtUpArea = parseInt(data === null || data === void 0 ? void 0 : (_data$landarea = data.landarea) === null || _data$landarea === void 0 ? void 0 : _data$landarea.floorarea) + parseInt(data === null || data === void 0 ? void 0 : (_data$Constructiondet = data.Constructiondetails) === null || _data$Constructiondet === void 0 ? void 0 : _data$Constructiondet.RentArea);
    } else {
      var _data$Constructiondet2;

      builtUpArea = parseInt(data === null || data === void 0 ? void 0 : (_data$Constructiondet2 = data.Constructiondetails) === null || _data$Constructiondet2 === void 0 ? void 0 : _data$Constructiondet2.RentArea);
    }

    if ((data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) === "PT_COMMON_YES") {
      var _data$UnOccupiedArea;

      builtUpArea = builtUpArea + parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea = data.UnOccupiedArea) === null || _data$UnOccupiedArea === void 0 ? void 0 : _data$UnOccupiedArea.UnOccupiedArea);
    }
  }

  return builtUpArea;
};
var getSuperBuiltUpareafromob = function getSuperBuiltUpareafromob(data) {
  var builtuparea = 0;
  data === null || data === void 0 ? void 0 : data.units.map(function (unit) {
    var _unit$constructionDet;

    builtuparea = builtuparea + (unit === null || unit === void 0 ? void 0 : (_unit$constructionDet = unit.constructionDetail) === null || _unit$constructionDet === void 0 ? void 0 : _unit$constructionDet.builtUpArea);
  });
  return builtuparea;
};
var getnumberoffloors = function getnumberoffloors(data) {
  var _data$units, _data$noOofBasements, _data$noOofBasements2;

  var unitlenght = data === null || data === void 0 ? void 0 : (_data$units = data.units) === null || _data$units === void 0 ? void 0 : _data$units.length;

  if ((data === null || data === void 0 ? void 0 : (_data$noOofBasements = data.noOofBasements) === null || _data$noOofBasements === void 0 ? void 0 : _data$noOofBasements.i18nKey) === "PT_ONE_BASEMENT_OPTION") {
    return parseInt(unitlenght) + 1;
  } else if ((data === null || data === void 0 ? void 0 : (_data$noOofBasements2 = data.noOofBasements) === null || _data$noOofBasements2 === void 0 ? void 0 : _data$noOofBasements2.i18nKey) === "PT_TWO_BASEMENT_OPTION") {
    return parseInt(unitlenght) + 2;
  }

  return parseInt(unitlenght);
};
var getusageCategory = function getusageCategory(data, i) {
  var _data$isResdential3, _data$usageCategoryMa2;

  if ((data === null || data === void 0 ? void 0 : (_data$isResdential3 = data.isResdential) === null || _data$isResdential3 === void 0 ? void 0 : _data$isResdential3.i18nKey) === "PT_COMMON_YES") {
    var _data$isResdential4;

    return data === null || data === void 0 ? void 0 : (_data$isResdential4 = data.isResdential) === null || _data$isResdential4 === void 0 ? void 0 : _data$isResdential4.code;
  } else if ((data === null || data === void 0 ? void 0 : (_data$usageCategoryMa2 = data.usageCategoryMajor) === null || _data$usageCategoryMa2 === void 0 ? void 0 : _data$usageCategoryMa2.code) === "NONRESIDENTIAL.OTHERS") {
    var _data$isResdential5;

    return data === null || data === void 0 ? void 0 : (_data$isResdential5 = data.isResdential) === null || _data$isResdential5 === void 0 ? void 0 : _data$isResdential5.code;
  } else {
    var _data$PropertyType, _data$PropertyType$co;

    if (data !== null && data !== void 0 && (_data$PropertyType = data.PropertyType) !== null && _data$PropertyType !== void 0 && (_data$PropertyType$co = _data$PropertyType.code) !== null && _data$PropertyType$co !== void 0 && _data$PropertyType$co.includes("INDEPENDENTPROPERTY")) {
      var _data$units$i, _data$units$i$selfOcc;

      if ((data === null || data === void 0 ? void 0 : (_data$units$i = data.units[i]) === null || _data$units$i === void 0 ? void 0 : (_data$units$i$selfOcc = _data$units$i.selfOccupied) === null || _data$units$i$selfOcc === void 0 ? void 0 : _data$units$i$selfOcc.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED") {
        var _data$units$i2;

        return data === null || data === void 0 ? void 0 : (_data$units$i2 = data.units[i]) === null || _data$units$i2 === void 0 ? void 0 : _data$units$i2.subuagecode;
      } else {
        var _data$units$i3;

        return data === null || data === void 0 ? void 0 : (_data$units$i3 = data.units[i]) === null || _data$units$i3 === void 0 ? void 0 : _data$units$i3.Subusagetypeofrentedareacode;
      }
    } else {
      var _data$selfOccupied3;

      if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied3 = data.selfOccupied) === null || _data$selfOccupied3 === void 0 ? void 0 : _data$selfOccupied3.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED") {
        var _data$subusagetype;

        return data === null || data === void 0 ? void 0 : (_data$subusagetype = data.subusagetype) === null || _data$subusagetype === void 0 ? void 0 : _data$subusagetype.subuagecode;
      } else {
        var _data$Subusagetypeofr;

        return data === null || data === void 0 ? void 0 : (_data$Subusagetypeofr = data.Subusagetypeofrentedarea) === null || _data$Subusagetypeofr === void 0 ? void 0 : _data$Subusagetypeofr.Subusagetypeofrentedareacode;
      }
    }
  }
};
var getunits = function getunits(data) {
  var _data$selfOccupied4, _data$selfOccupied6;

  var unit = [];

  if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied4 = data.selfOccupied) === null || _data$selfOccupied4 === void 0 ? void 0 : _data$selfOccupied4.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED" && (data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) === "PT_COMMON_YES") {
    var _data$selfOccupied5, _data$floordetails2, _data$UnOccupiedArea2, _data$IsAnyPartOfThis, _data$UnOccupiedArea3;

    unit.push({
      occupancyType: data === null || data === void 0 ? void 0 : (_data$selfOccupied5 = data.selfOccupied) === null || _data$selfOccupied5 === void 0 ? void 0 : _data$selfOccupied5.code,
      floorNo: getFloorNumber(data),
      constructionDetail: {
        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$floordetails2 = data.floordetails) === null || _data$floordetails2 === void 0 ? void 0 : _data$floordetails2.builtUpArea) - parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea2 = data.UnOccupiedArea) === null || _data$UnOccupiedArea2 === void 0 ? void 0 : _data$UnOccupiedArea2.UnOccupiedArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data)
    });
    unit.push({
      occupancyType: data === null || data === void 0 ? void 0 : (_data$IsAnyPartOfThis = data.IsAnyPartOfThisFloorUnOccupied) === null || _data$IsAnyPartOfThis === void 0 ? void 0 : _data$IsAnyPartOfThis.code,
      floorNo: getFloorNumber(data),
      constructionDetail: {
        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea3 = data.UnOccupiedArea) === null || _data$UnOccupiedArea3 === void 0 ? void 0 : _data$UnOccupiedArea3.UnOccupiedArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data)
    });
  } else if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied6 = data.selfOccupied) === null || _data$selfOccupied6 === void 0 ? void 0 : _data$selfOccupied6.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED" && (data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) !== "PT_COMMON_YES") {
    var _data$selfOccupied7, _data$floordetails3;

    unit.push({
      occupancyType: data === null || data === void 0 ? void 0 : (_data$selfOccupied7 = data.selfOccupied) === null || _data$selfOccupied7 === void 0 ? void 0 : _data$selfOccupied7.code,
      floorNo: getFloorNumber(data),
      constructionDetail: {
        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$floordetails3 = data.floordetails) === null || _data$floordetails3 === void 0 ? void 0 : _data$floordetails3.builtUpArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data)
    });
  } else {
    var _data$selfOccupied8, _data$selfOccupied9, _data$Constructiondet3, _data$Constructiondet4;

    if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied8 = data.selfOccupied) === null || _data$selfOccupied8 === void 0 ? void 0 : _data$selfOccupied8.i18nKey) === "PT_PARTIALLY_RENTED_OUT") {
      var _data$landarea2, _data$isResdential6, _data$usageCategoryMa3, _data$isResdential7, _data$subusagetype2;

      unit.push({
        occupancyType: "SELFOCCUPIED",
        floorNo: getFloorNumber(data),
        constructionDetail: {
          builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$landarea2 = data.landarea) === null || _data$landarea2 === void 0 ? void 0 : _data$landarea2.floorarea)
        },
        tenantId: data.tenantId,
        usageCategory: (data === null || data === void 0 ? void 0 : (_data$isResdential6 = data.isResdential) === null || _data$isResdential6 === void 0 ? void 0 : _data$isResdential6.i18nKey) === "PT_COMMON_YES" || (data === null || data === void 0 ? void 0 : (_data$usageCategoryMa3 = data.usageCategoryMajor) === null || _data$usageCategoryMa3 === void 0 ? void 0 : _data$usageCategoryMa3.code) === "NONRESIDENTIAL.OTHERS" ? data === null || data === void 0 ? void 0 : (_data$isResdential7 = data.isResdential) === null || _data$isResdential7 === void 0 ? void 0 : _data$isResdential7.code : data === null || data === void 0 ? void 0 : (_data$subusagetype2 = data.subusagetype) === null || _data$subusagetype2 === void 0 ? void 0 : _data$subusagetype2.subuagecode
      });
    }

    unit.push({
      occupancyType: data === null || data === void 0 ? void 0 : (_data$selfOccupied9 = data.selfOccupied) === null || _data$selfOccupied9 === void 0 ? void 0 : _data$selfOccupied9.code,
      arv: data === null || data === void 0 ? void 0 : (_data$Constructiondet3 = data.Constructiondetails) === null || _data$Constructiondet3 === void 0 ? void 0 : _data$Constructiondet3.AnnualRent,
      floorNo: getFloorNumber(data),
      constructionDetail: {
        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$Constructiondet4 = data.Constructiondetails) === null || _data$Constructiondet4 === void 0 ? void 0 : _data$Constructiondet4.RentArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data)
    });

    if ((data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) === "PT_COMMON_YES") {
      var _data$IsAnyPartOfThis2, _data$UnOccupiedArea4;

      unit.push({
        occupancyType: data === null || data === void 0 ? void 0 : (_data$IsAnyPartOfThis2 = data.IsAnyPartOfThisFloorUnOccupied) === null || _data$IsAnyPartOfThis2 === void 0 ? void 0 : _data$IsAnyPartOfThis2.code,
        floorNo: getFloorNumber(data),
        constructionDetail: {
          builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea4 = data.UnOccupiedArea) === null || _data$UnOccupiedArea4 === void 0 ? void 0 : _data$UnOccupiedArea4.UnOccupiedArea)
        },
        tenantId: data.tenantId,
        usageCategory: getusageCategory(data)
      });
    }
  }

  data !== null && data !== void 0 && data.extraunitFPB ? unit = unit.concat(data === null || data === void 0 ? void 0 : data.extraunitFPB) : "";
  return unit;
};
var getunitarray = function getunitarray(i, unitsdata, unit, data) {
  var _unitsdata$i$selfOccu, _unitsdata$i$IsAnyPar, _unitsdata$i3, _unitsdata$i3$selfOcc, _unitsdata$i4;

  if (unitsdata[i].active === true) {
    unit.push(unitsdata[i]);
  } else if (((_unitsdata$i$selfOccu = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu === void 0 ? void 0 : _unitsdata$i$selfOccu.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED" && ((_unitsdata$i$IsAnyPar = unitsdata[i].IsAnyPartOfThisFloorUnOccupied) === null || _unitsdata$i$IsAnyPar === void 0 ? void 0 : _unitsdata$i$IsAnyPar.i18nKey) === "PT_COMMON_YES") {
    var _unitsdata$i$selfOccu2, _unitsdata$i, _unitsdata$i$IsAnyPar2, _unitsdata$i2;

    unit.push({
      occupancyType: (_unitsdata$i$selfOccu2 = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu2 === void 0 ? void 0 : _unitsdata$i$selfOccu2.code,
      floorNo: i === "-1" ? "-1" : i === "-2" ? "-2" : i,
      constructionDetail: {
        builtUpArea: parseInt(unitsdata[i].builtUpArea) - parseInt(unitsdata[i].UnOccupiedArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data, i)
    });
    unit.push({
      occupancyType: (_unitsdata$i = unitsdata[i]) === null || _unitsdata$i === void 0 ? void 0 : (_unitsdata$i$IsAnyPar2 = _unitsdata$i.IsAnyPartOfThisFloorUnOccupied) === null || _unitsdata$i$IsAnyPar2 === void 0 ? void 0 : _unitsdata$i$IsAnyPar2.code,
      floorNo: i === "-1" ? "-1" : i === "-2" ? "-2" : i,
      constructionDetail: {
        builtUpArea: parseInt((_unitsdata$i2 = unitsdata[i]) === null || _unitsdata$i2 === void 0 ? void 0 : _unitsdata$i2.UnOccupiedArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data, i)
    });
  } else if (((_unitsdata$i3 = unitsdata[i]) === null || _unitsdata$i3 === void 0 ? void 0 : (_unitsdata$i3$selfOcc = _unitsdata$i3.selfOccupied) === null || _unitsdata$i3$selfOcc === void 0 ? void 0 : _unitsdata$i3$selfOcc.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED" && ((_unitsdata$i4 = unitsdata[i]) === null || _unitsdata$i4 === void 0 ? void 0 : _unitsdata$i4.IsAnyPartOfThisFloorUnOccupied.i18nKey) !== "PT_COMMON_YES") {
    var _unitsdata$i$selfOccu3, _unitsdata$i5;

    unit.push({
      occupancyType: (_unitsdata$i$selfOccu3 = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu3 === void 0 ? void 0 : _unitsdata$i$selfOccu3.code,
      floorNo: i === "-1" ? "-1" : i === "-2" ? "-2" : i,
      constructionDetail: {
        builtUpArea: parseInt((_unitsdata$i5 = unitsdata[i]) === null || _unitsdata$i5 === void 0 ? void 0 : _unitsdata$i5.builtUpArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data, i)
    });
  } else {
    var _unitsdata$i6, _unitsdata$i6$selfOcc, _unitsdata$i$selfOccu4, _unitsdata$i8, _unitsdata$i9;

    if (((_unitsdata$i6 = unitsdata[i]) === null || _unitsdata$i6 === void 0 ? void 0 : (_unitsdata$i6$selfOcc = _unitsdata$i6.selfOccupied) === null || _unitsdata$i6$selfOcc === void 0 ? void 0 : _unitsdata$i6$selfOcc.i18nKey) === "PT_PARTIALLY_RENTED_OUT") {
      var _unitsdata$i7, _data$isResdential8, _data$usageCategoryMa4, _data$isResdential9;

      unit.push({
        occupancyType: "SELFOCCUPIED",
        floorNo: i === "-1" ? "-1" : i === "-2" ? "-2" : i,
        constructionDetail: {
          builtUpArea: parseInt((_unitsdata$i7 = unitsdata[i]) === null || _unitsdata$i7 === void 0 ? void 0 : _unitsdata$i7.floorarea)
        },
        tenantId: data.tenantId,
        usageCategory: (data === null || data === void 0 ? void 0 : (_data$isResdential8 = data.isResdential) === null || _data$isResdential8 === void 0 ? void 0 : _data$isResdential8.i18nKey) === "PT_COMMON_YES" || (data === null || data === void 0 ? void 0 : (_data$usageCategoryMa4 = data.usageCategoryMajor) === null || _data$usageCategoryMa4 === void 0 ? void 0 : _data$usageCategoryMa4.code) === "NONRESIDENTIAL.OTHERS" ? data === null || data === void 0 ? void 0 : (_data$isResdential9 = data.isResdential) === null || _data$isResdential9 === void 0 ? void 0 : _data$isResdential9.code : unitsdata[i].subuagecode
      });
    }

    unit.push({
      occupancyType: (_unitsdata$i$selfOccu4 = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu4 === void 0 ? void 0 : _unitsdata$i$selfOccu4.code,
      arv: unitsdata[i].AnnualRent,
      floorNo: i === "-1" ? "-1" : i === "-2" ? "-2" : i,
      constructionDetail: {
        builtUpArea: parseInt((_unitsdata$i8 = unitsdata[i]) === null || _unitsdata$i8 === void 0 ? void 0 : _unitsdata$i8.RentArea)
      },
      tenantId: data.tenantId,
      usageCategory: getusageCategory(data, i)
    });

    if (((_unitsdata$i9 = unitsdata[i]) === null || _unitsdata$i9 === void 0 ? void 0 : _unitsdata$i9.IsAnyPartOfThisFloorUnOccupied.i18nKey) === "PT_COMMON_YES") {
      var _unitsdata$i10, _unitsdata$i10$IsAnyP, _unitsdata$i11;

      unit.push({
        occupancyType: (_unitsdata$i10 = unitsdata[i]) === null || _unitsdata$i10 === void 0 ? void 0 : (_unitsdata$i10$IsAnyP = _unitsdata$i10.IsAnyPartOfThisFloorUnOccupied) === null || _unitsdata$i10$IsAnyP === void 0 ? void 0 : _unitsdata$i10$IsAnyP.code,
        floorNo: i === "-1" ? "-1" : i === "-2" ? "-2" : i,
        constructionDetail: {
          builtUpArea: parseInt((_unitsdata$i11 = unitsdata[i]) === null || _unitsdata$i11 === void 0 ? void 0 : _unitsdata$i11.UnOccupiedArea)
        },
        tenantId: data.tenantId,
        usageCategory: getusageCategory(data, i)
      });
    }
  }

  return unit;
};
var getunitsindependent = function getunitsindependent(data) {
  var _data$noOofBasements3, _data$noOofBasements4, _data$noOofBasements5;

  var unit = [];
  var unitsdata = [];
  unitsdata = data === null || data === void 0 ? void 0 : data.units;
  var i;

  for (i = 0; i < unitsdata.length && unitsdata.length > 0; i++) {
    unit = getunitarray(i, unitsdata, unit, data);
  }

  if (isthere1Basement(data === null || data === void 0 ? void 0 : (_data$noOofBasements3 = data.noOofBasements) === null || _data$noOofBasements3 === void 0 ? void 0 : _data$noOofBasements3.i18nKey) || isthere2Basement(data === null || data === void 0 ? void 0 : (_data$noOofBasements4 = data.noOofBasements) === null || _data$noOofBasements4 === void 0 ? void 0 : _data$noOofBasements4.i18nKey)) {
    unit = getunitarray("-1", unitsdata, unit, data);
  }

  if (isthere2Basement(data === null || data === void 0 ? void 0 : (_data$noOofBasements5 = data.noOofBasements) === null || _data$noOofBasements5 === void 0 ? void 0 : _data$noOofBasements5.i18nKey)) {
    unit = getunitarray("-2", unitsdata, unit, data);
  }

  return unit;
};
var setPropertyDetails = function setPropertyDetails(data) {
  var _data$PropertyType2, _data$PropertyType2$c, _data$PropertyType4, _data$PropertyType4$c, _data$PropertyType6, _data$PropertyType6$c;

  var unitleghtvalue = getnumberoffloors(data);
  var propertyDetails = {};

  if (data !== null && data !== void 0 && (_data$PropertyType2 = data.PropertyType) !== null && _data$PropertyType2 !== void 0 && (_data$PropertyType2$c = _data$PropertyType2.code) !== null && _data$PropertyType2$c !== void 0 && _data$PropertyType2$c.includes("VACANT")) {
    var _data$landarea3, _data$PropertyType3;

    propertyDetails = {
      units: [],
      landArea: parseInt(data === null || data === void 0 ? void 0 : (_data$landarea3 = data.landarea) === null || _data$landarea3 === void 0 ? void 0 : _data$landarea3.floorarea),
      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType3 = data.PropertyType) === null || _data$PropertyType3 === void 0 ? void 0 : _data$PropertyType3.code,
      noOfFloors: 0,
      usageCategory: getUsageType(data)
    };
  } else if (data !== null && data !== void 0 && (_data$PropertyType4 = data.PropertyType) !== null && _data$PropertyType4 !== void 0 && (_data$PropertyType4$c = _data$PropertyType4.code) !== null && _data$PropertyType4$c !== void 0 && _data$PropertyType4$c.includes("SHAREDPROPERTY")) {
    var _data$floordetails4, _data$PropertyType5;

    propertyDetails = {
      units: getunits(data),
      landArea: data === null || data === void 0 ? void 0 : (_data$floordetails4 = data.floordetails) === null || _data$floordetails4 === void 0 ? void 0 : _data$floordetails4.plotSize,
      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType5 = data.PropertyType) === null || _data$PropertyType5 === void 0 ? void 0 : _data$PropertyType5.code,
      noOfFloors: 1,
      superBuiltUpArea: getSuperBuiltUparea(data),
      usageCategory: getUsageType(data)
    };
  } else if (data !== null && data !== void 0 && (_data$PropertyType6 = data.PropertyType) !== null && _data$PropertyType6 !== void 0 && (_data$PropertyType6$c = _data$PropertyType6.code) !== null && _data$PropertyType6$c !== void 0 && _data$PropertyType6$c.includes("INDEPENDENTPROPERTY")) {
    var _data$units$, _data$PropertyType7;

    var _unitleghtvalue = getnumberoffloors(data);

    propertyDetails = {
      units: getunitsindependent(data),
      landArea: data === null || data === void 0 ? void 0 : (_data$units$ = data.units[0]) === null || _data$units$ === void 0 ? void 0 : _data$units$.plotSize,
      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType7 = data.PropertyType) === null || _data$PropertyType7 === void 0 ? void 0 : _data$PropertyType7.code,
      noOfFloors: _unitleghtvalue,
      superBuiltUpArea: null,
      usageCategory: getUsageType(data)
    };
  } else {
    var _data$PropertyType8;

    propertyDetails = {
      units: [{
        occupancyType: "SELFOCCUPIED",
        floorNo: "0",
        constructionDetail: {
          builtUpArea: 16.67
        },
        tenantId: data.tenantId,
        usageCategory: "RESIDENTIAL"
      }],
      landArea: "2000",
      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType8 = data.PropertyType) === null || _data$PropertyType8 === void 0 ? void 0 : _data$PropertyType8.code,
      noOfFloors: 1,
      superBuiltUpArea: 16.67,
      usageCategory: getUsageType(data)
    };
  }

  data.propertyDetails = propertyDetails;
  return data;
};
var convertToProperty = function convertToProperty(data) {
  var _data, _data$floordetails5, _data2, _data3, _data4, _data5, _data6, _data7, _data8, _data9, _data10, _data11, _data11$ownershipCate;

  if (data === void 0) {
    data = {};
  }

  console.info("propertyFormData", data);
  var isResdential = data.isResdential;
  var propertyType = data.PropertyType;
  var selfOccupied = data.selfOccupied;
  var Subusagetypeofrentedarea = data.Subusagetypeofrentedarea || null;
  var subusagetype = data.subusagetype || null;
  var IsAnyPartOfThisFloorUnOccupied = data.IsAnyPartOfThisFloorUnOccupied || null;
  var builtUpArea = ((_data = data) === null || _data === void 0 ? void 0 : (_data$floordetails5 = _data.floordetails) === null || _data$floordetails5 === void 0 ? void 0 : _data$floordetails5.builtUpArea) || null;
  var noOfFloors = (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.noOfFloors;
  var noOofBasements = (_data3 = data) === null || _data3 === void 0 ? void 0 : _data3.noOofBasements;
  var unit = (_data4 = data) === null || _data4 === void 0 ? void 0 : _data4.units;
  var basement1 = Array.isArray((_data5 = data) === null || _data5 === void 0 ? void 0 : _data5.units) && (_data6 = data) !== null && _data6 !== void 0 && _data6.units["-1"] ? (_data7 = data) === null || _data7 === void 0 ? void 0 : _data7.units["-1"] : null;
  var basement2 = Array.isArray((_data8 = data) === null || _data8 === void 0 ? void 0 : _data8.units) && (_data9 = data) !== null && _data9 !== void 0 && _data9.units["-2"] ? (_data10 = data) === null || _data10 === void 0 ? void 0 : _data10.units["-2"] : null;
  data = setDocumentDetails(data);
  data = setOwnerDetails(data);
  data = setAddressDetails(data);
  data = setPropertyDetails(data);
  var formdata = {
    Property: _extends({
      tenantId: data.tenantId,
      address: data.address,
      ownershipCategory: (_data11 = data) === null || _data11 === void 0 ? void 0 : (_data11$ownershipCate = _data11.ownershipCategory) === null || _data11$ownershipCate === void 0 ? void 0 : _data11$ownershipCate.value,
      owners: data.owners,
      institution: data.institution || null,
      documents: data.documents || []
    }, data.propertyDetails, {
      additionalDetails: {
        inflammable: false,
        heightAbove36Feet: false,
        isResdential: isResdential,
        propertyType: propertyType,
        selfOccupied: selfOccupied,
        Subusagetypeofrentedarea: Subusagetypeofrentedarea,
        subusagetype: subusagetype,
        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,
        builtUpArea: builtUpArea,
        noOfFloors: noOfFloors,
        noOofBasements: noOofBasements,
        unit: unit,
        basement1: basement1,
        basement2: basement2
      },
      creationReason: "CREATE",
      source: "MUNICIPAL_RECORDS",
      channel: "CITIZEN"
    })
  };
  console.info("propertyCreated", formdata);
  return formdata;
};
var setUpdateOwnerDetails = function setUpdateOwnerDetails(data) {
  var _data13, _data13$ownershipCate, _data14, _data14$ownershipCate;

  if (data === void 0) {
    data = [];
  }

  var _data12 = data,
      institution = _data12.institution,
      owners = _data12.owners;

  if (((_data13 = data) === null || _data13 === void 0 ? void 0 : (_data13$ownershipCate = _data13.ownershipCategory) === null || _data13$ownershipCate === void 0 ? void 0 : _data13$ownershipCate.value) === "INSTITUTIONALPRIVATE" || ((_data14 = data) === null || _data14 === void 0 ? void 0 : (_data14$ownershipCate = _data14.ownershipCategory) === null || _data14$ownershipCate === void 0 ? void 0 : _data14$ownershipCate.value) === "INSTITUTIONALGOVERNMENT") {
    var _data15, _data15$ownershipCate, _data16, _data16$ownershipCate;

    if (((_data15 = data) === null || _data15 === void 0 ? void 0 : (_data15$ownershipCate = _data15.ownershipCategory) === null || _data15$ownershipCate === void 0 ? void 0 : _data15$ownershipCate.value) === "INSTITUTIONALPRIVATE" || ((_data16 = data) === null || _data16 === void 0 ? void 0 : (_data16$ownershipCate = _data16.ownershipCategory) === null || _data16$ownershipCate === void 0 ? void 0 : _data16$ownershipCate.value) === "INSTITUTIONALGOVERNMENT") {
      var _owners$16, _owners$17, _owners$18, _data17, _data17$address, _data17$address$city, _owners$19, _owners$19$inistitute, _owners$20, _owners$20$documents$;

      institution.designation = (_owners$16 = owners[0]) === null || _owners$16 === void 0 ? void 0 : _owners$16.designation;
      institution.name = (_owners$17 = owners[0]) === null || _owners$17 === void 0 ? void 0 : _owners$17.inistitutionName;
      institution.nameOfAuthorizedPerson = (_owners$18 = owners[0]) === null || _owners$18 === void 0 ? void 0 : _owners$18.name;
      institution.tenantId = (_data17 = data) === null || _data17 === void 0 ? void 0 : (_data17$address = _data17.address) === null || _data17$address === void 0 ? void 0 : (_data17$address$city = _data17$address.city) === null || _data17$address$city === void 0 ? void 0 : _data17$address$city.code;
      institution.type = (_owners$19 = owners[0]) === null || _owners$19 === void 0 ? void 0 : (_owners$19$inistitute = _owners$19.inistitutetype) === null || _owners$19$inistitute === void 0 ? void 0 : _owners$19$inistitute.value;
      var document = [];

      if ((_owners$20 = owners[0]) !== null && _owners$20 !== void 0 && (_owners$20$documents$ = _owners$20.documents["proofIdentity"]) !== null && _owners$20$documents$ !== void 0 && _owners$20$documents$.fileStoreId && owners[0].documents["proofIdentity"].id) {
        var _owners$0$documents$p;

        document.push({
          fileStoreId: owners[0].documents["proofIdentity"].fileStoreId || "",
          documentType: ((_owners$0$documents$p = owners[0].documents["proofIdentity"].documentType) === null || _owners$0$documents$p === void 0 ? void 0 : _owners$0$documents$p.code) || "",
          id: owners[0].documents["proofIdentity"].id || "",
          status: owners[0].documents["proofIdentity"].status || ""
        });
      } else {
        var _owners$0$documents$p2;

        document.push({
          fileStoreId: owners[0].documents["proofIdentity"].fileStoreId || "",
          documentType: ((_owners$0$documents$p2 = owners[0].documents["proofIdentity"].documentType) === null || _owners$0$documents$p2 === void 0 ? void 0 : _owners$0$documents$p2.code) || ""
        });
      }

      data.owners.forEach(function (owner) {
        var _owners$21, _owners$22, _owners$23, _owners$24, _owners$25, _owners$26, _owners$27, _owners$28, _owners$28$ownerType;

        owner.altContactNumber = (_owners$21 = owners[0]) === null || _owners$21 === void 0 ? void 0 : _owners$21.altContactNumber;
        owner.correspondenceAddress = (_owners$22 = owners[0]) === null || _owners$22 === void 0 ? void 0 : _owners$22.permanentAddress;
        owner.designation = (_owners$23 = owners[0]) === null || _owners$23 === void 0 ? void 0 : _owners$23.designation;
        owner.emailId = (_owners$24 = owners[0]) === null || _owners$24 === void 0 ? void 0 : _owners$24.emailId;
        owner.isCorrespondenceAddress = (_owners$25 = owners[0]) === null || _owners$25 === void 0 ? void 0 : _owners$25.isCorrespondenceAddress;
        owner.mobileNumber = (_owners$26 = owners[0]) === null || _owners$26 === void 0 ? void 0 : _owners$26.mobileNumber;
        owner.name = (_owners$27 = owners[0]) === null || _owners$27 === void 0 ? void 0 : _owners$27.name;
        owner.ownerType = ((_owners$28 = owners[0]) === null || _owners$28 === void 0 ? void 0 : (_owners$28$ownerType = _owners$28.ownerType) === null || _owners$28$ownerType === void 0 ? void 0 : _owners$28$ownerType.code) || "NONE";
        owner.documents = document;
      });
      data.institution = institution;
    }
  } else {
    data.owners.forEach(function (owner) {
      var _owner$ownerType, _owner$documents$proo6, _owner$gender, _owner$ownerType2, _owner$relationship;

      var document = [];

      if ((owner === null || owner === void 0 ? void 0 : (_owner$ownerType = owner.ownerType) === null || _owner$ownerType === void 0 ? void 0 : _owner$ownerType.code) != "NONE") {
        if (owner.documents["specialProofIdentity"].id) {
          var _owner$documents$spec10;

          document.push({
            fileStoreId: owner.documents["specialProofIdentity"].fileStoreId || "",
            documentType: ((_owner$documents$spec10 = owner.documents["specialProofIdentity"].documentType) === null || _owner$documents$spec10 === void 0 ? void 0 : _owner$documents$spec10.code) || "",
            id: owner.documents["specialProofIdentity"].id || "",
            status: owner.documents["specialProofIdentity"].status || ""
          });
        } else {
          var _owner$documents$spec11;

          document.push({
            fileStoreId: owner.documents["specialProofIdentity"].fileStoreId || "",
            documentType: ((_owner$documents$spec11 = owner.documents["specialProofIdentity"].documentType) === null || _owner$documents$spec11 === void 0 ? void 0 : _owner$documents$spec11.code) || ""
          });
        }
      }

      if (owner !== null && owner !== void 0 && (_owner$documents$proo6 = owner.documents["proofIdentity"]) !== null && _owner$documents$proo6 !== void 0 && _owner$documents$proo6.fileStoreId) {
        if (owner.documents["proofIdentity"].id) {
          var _owner$documents$proo7;

          document.push({
            fileStoreId: owner.documents["proofIdentity"].fileStoreId || "",
            documentType: ((_owner$documents$proo7 = owner.documents["proofIdentity"].documentType) === null || _owner$documents$proo7 === void 0 ? void 0 : _owner$documents$proo7.code) || "",
            id: owner.documents["proofIdentity"].id || "",
            status: owner.documents["proofIdentity"].status || ""
          });
        } else {
          var _owner$documents$proo8;

          document.push({
            fileStoreId: owner.documents["proofIdentity"].fileStoreId || "",
            documentType: ((_owner$documents$proo8 = owner.documents["proofIdentity"].documentType) === null || _owner$documents$proo8 === void 0 ? void 0 : _owner$documents$proo8.code) || ""
          });
        }
      }

      owner.gender = owner === null || owner === void 0 ? void 0 : (_owner$gender = owner.gender) === null || _owner$gender === void 0 ? void 0 : _owner$gender.code;
      owner.ownerType = owner === null || owner === void 0 ? void 0 : (_owner$ownerType2 = owner.ownerType) === null || _owner$ownerType2 === void 0 ? void 0 : _owner$ownerType2.code;
      owner.relationship = owner === null || owner === void 0 ? void 0 : (_owner$relationship = owner.relationship) === null || _owner$relationship === void 0 ? void 0 : _owner$relationship.code;
      owner.documents = document;
    });
  }

  return data;
};
var setUpdatedDocumentDetails = function setUpdatedDocumentDetails(data) {
  var _address$documents$Pr10;

  var address = data.address,
      owners = data.owners;
  var documents = [];

  if (address !== null && address !== void 0 && (_address$documents$Pr10 = address.documents["ProofOfAddress"]) !== null && _address$documents$Pr10 !== void 0 && _address$documents$Pr10.id) {
    var _address$documents$Pr11, _address$documents$Pr12, _address$documents$Pr13, _address$documents$Pr14, _address$documents$Pr15;

    documents.push({
      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr11 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr11 === void 0 ? void 0 : _address$documents$Pr11.fileStoreId) || "",
      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr12 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr12 === void 0 ? void 0 : (_address$documents$Pr13 = _address$documents$Pr12.documentType) === null || _address$documents$Pr13 === void 0 ? void 0 : _address$documents$Pr13.code) || "",
      id: (address === null || address === void 0 ? void 0 : (_address$documents$Pr14 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr14 === void 0 ? void 0 : _address$documents$Pr14.id) || "",
      status: (address === null || address === void 0 ? void 0 : (_address$documents$Pr15 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr15 === void 0 ? void 0 : _address$documents$Pr15.status) || ""
    });
  } else {
    var _address$documents$Pr16, _address$documents$Pr17, _address$documents$Pr18;

    documents.push({
      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr16 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr16 === void 0 ? void 0 : _address$documents$Pr16.fileStoreId) || "",
      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr17 = address.documents["ProofOfAddress"]) === null || _address$documents$Pr17 === void 0 ? void 0 : (_address$documents$Pr18 = _address$documents$Pr17.documentType) === null || _address$documents$Pr18 === void 0 ? void 0 : _address$documents$Pr18.code) || ""
    });
  }

  owners && owners.length > 0 && owners.map(function (owner) {
    owner.documents.map(function (document) {
      documents.push(document);
    });
  });
  data.documents = documents;
  return data;
};
var convertToUpdateProperty = function convertToUpdateProperty(data) {
  var _data18, _data18$floordetails, _data19, _data20, _data21, _data22, _data23, _data24, _data25, _data26, _data27, _data28, _data28$ownershipCate, _formdata$Property, _data29, _formdata$Property3;

  if (data === void 0) {
    data = {};
  }

  console.info("propertyFormData", data);
  var isResdential = data.isResdential;
  var propertyType = data.PropertyType;
  var selfOccupied = data.selfOccupied;
  var Subusagetypeofrentedarea = data.Subusagetypeofrentedarea || null;
  var subusagetype = data.subusagetype || null;
  var IsAnyPartOfThisFloorUnOccupied = data.IsAnyPartOfThisFloorUnOccupied || null;
  var builtUpArea = ((_data18 = data) === null || _data18 === void 0 ? void 0 : (_data18$floordetails = _data18.floordetails) === null || _data18$floordetails === void 0 ? void 0 : _data18$floordetails.builtUpArea) || null;
  var noOfFloors = (_data19 = data) === null || _data19 === void 0 ? void 0 : _data19.noOfFloors;
  var noOofBasements = (_data20 = data) === null || _data20 === void 0 ? void 0 : _data20.noOofBasements;
  var unit = (_data21 = data) === null || _data21 === void 0 ? void 0 : _data21.units;
  var basement1 = Array.isArray((_data22 = data) === null || _data22 === void 0 ? void 0 : _data22.units) && (_data23 = data) !== null && _data23 !== void 0 && _data23.units["-1"] ? (_data24 = data) === null || _data24 === void 0 ? void 0 : _data24.units["-1"] : null;
  var basement2 = Array.isArray((_data25 = data) === null || _data25 === void 0 ? void 0 : _data25.units) && (_data26 = data) !== null && _data26 !== void 0 && _data26.units["-2"] ? (_data27 = data) === null || _data27 === void 0 ? void 0 : _data27.units["-2"] : null;
  data = setAddressDetails(data);
  data = setUpdateOwnerDetails(data);
  data = setUpdatedDocumentDetails(data);
  data = setPropertyDetails(data);
  var formdata = {
    Property: _extends({
      id: data.id,
      accountId: data.accountId,
      acknowldgementNumber: data.acknowldgementNumber,
      propertyId: data.propertyId,
      status: data.status || "INWORKFLOW",
      tenantId: data.tenantId,
      address: data.address,
      ownershipCategory: (_data28 = data) === null || _data28 === void 0 ? void 0 : (_data28$ownershipCate = _data28.ownershipCategory) === null || _data28$ownershipCate === void 0 ? void 0 : _data28$ownershipCate.value,
      owners: data.owners,
      institution: data.institution || null,
      documents: data.documents || []
    }, data.propertyDetails, {
      additionalDetails: {
        inflammable: false,
        heightAbove36Feet: false,
        isResdential: isResdential,
        propertyType: propertyType,
        selfOccupied: selfOccupied,
        Subusagetypeofrentedarea: Subusagetypeofrentedarea,
        subusagetype: subusagetype,
        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,
        builtUpArea: builtUpArea,
        noOfFloors: noOfFloors,
        noOofBasements: noOofBasements,
        unit: unit,
        basement1: basement1,
        basement2: basement2
      },
      creationReason: getCreationReason(data),
      source: "MUNICIPAL_RECORDS",
      channel: "CITIZEN",
      workflow: getWorkflow(data)
    })
  };
  var propertyInitialObject = JSON.parse(sessionStorage.getItem("propertyInitialObject"));

  if (checkArrayLength(propertyInitialObject === null || propertyInitialObject === void 0 ? void 0 : propertyInitialObject.units) && checkIsAnArray((_formdata$Property = formdata.Property) === null || _formdata$Property === void 0 ? void 0 : _formdata$Property.units) && (_data29 = data) !== null && _data29 !== void 0 && _data29.isEditProperty) {
    var _formdata$Property2, _formdata$Property2$u;

    propertyInitialObject.units = propertyInitialObject.units.filter(function (unit) {
      return unit.active;
    });
    var oldUnits = propertyInitialObject.units.map(function (unit) {
      return _extends({}, unit, {
        active: false
      });
    });
    (_formdata$Property2 = formdata.Property) === null || _formdata$Property2 === void 0 ? void 0 : (_formdata$Property2$u = _formdata$Property2.units).push.apply(_formdata$Property2$u, oldUnits);
  }

  if (checkArrayLength(propertyInitialObject === null || propertyInitialObject === void 0 ? void 0 : propertyInitialObject.owners) && checkIsAnArray((_formdata$Property3 = formdata.Property) === null || _formdata$Property3 === void 0 ? void 0 : _formdata$Property3.owners)) {
    formdata.Property.owners = [].concat(propertyInitialObject.owners);
  }

  if (propertyInitialObject !== null && propertyInitialObject !== void 0 && propertyInitialObject.auditDetails) {
    formdata.Property["auditDetails"] = _extends({}, propertyInitialObject.auditDetails);
  }

  console.info("propertyUpdated", formdata);
  return formdata;
};
var checkForNA = function checkForNA(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) ? value : "PT_NA";
};
var isPropertyVacant = function isPropertyVacant(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("VACANT") ? true : false;
};
var isPropertyFlatorPartofBuilding = function isPropertyFlatorPartofBuilding(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("SHAREDPROPERTY") ? true : false;
};
var isPropertyIndependent = function isPropertyIndependent(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("INDEPENDENT") ? true : false;
};
var isthere1Basement = function isthere1Basement(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("ONE") ? true : false;
};
var isthere2Basement = function isthere2Basement(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("TWO") ? true : false;
};
var isPropertyselfoccupied = function isPropertyselfoccupied(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("SELFOCCUPIED") ? true : false;
};
var isPropertyPartiallyrented = function isPropertyPartiallyrented(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("PARTIALLY") ? true : false;
};
var ispropertyunoccupied = function ispropertyunoccupied(value) {
  if (value === void 0) {
    value = "";
  }

  return checkForNotNull(value) && value.includes("YES") ? true : false;
};
var pdfDownloadLink = function pdfDownloadLink(documents, fileStoreId, format) {
  if (documents === void 0) {
    documents = {};
  }

  if (fileStoreId === void 0) {
    fileStoreId = "";
  }

  var downloadLink = documents[fileStoreId] || "";
  var differentFormats = (downloadLink === null || downloadLink === void 0 ? void 0 : downloadLink.split(",")) || [];
  var fileURL = "";
  differentFormats.length > 0 && differentFormats.map(function (link) {
    if (!link.includes("large") && !link.includes("medium") && !link.includes("small")) {
      fileURL = link;
    }
  });
  return fileURL;
};
var pdfDocumentName = function pdfDocumentName(documentLink, index) {
  if (documentLink === void 0) {
    documentLink = "";
  }

  if (index === void 0) {
    index = 0;
  }

  var documentName = decodeURIComponent(documentLink.split("?")[0].split("/").pop().slice(13)) || "Document - " + (index + 1);
  return documentName;
};
var convertEpochToDate = function convertEpochToDate(dateEpoch) {
  if (dateEpoch) {
    var dateFromApi = new Date(dateEpoch);
    var month = dateFromApi.getMonth() + 1;
    var day = dateFromApi.getDate();
    var year = dateFromApi.getFullYear();
    month = (month > 9 ? "" : "0") + month;
    day = (day > 9 ? "" : "0") + day;
    return day + "/" + month + "/" + year;
  } else {
    return null;
  }
};
var stringReplaceAll = function stringReplaceAll(str, searcher, replaceWith) {
  if (str === void 0) {
    str = "";
  }

  if (searcher === void 0) {
    searcher = "";
  }

  if (replaceWith === void 0) {
    replaceWith = "";
  }

  if (searcher == "") return str;

  while (str.includes(searcher)) {
    str = str.replace(searcher, replaceWith);
  }

  return str;
};
var checkIsAnArray = function checkIsAnArray(obj) {
  if (obj === void 0) {
    obj = [];
  }

  return obj && Array.isArray(obj) ? true : false;
};
var checkArrayLength = function checkArrayLength(obj, length) {
  if (obj === void 0) {
    obj = [];
  }

  if (length === void 0) {
    length = 0;
  }

  return checkIsAnArray(obj) && obj.length > length ? true : false;
};
var getWorkflow = function getWorkflow(data) {
  var _data30;

  if (data === void 0) {
    data = {};
  }

  return {
    action: (_data30 = data) !== null && _data30 !== void 0 && _data30.isEditProperty ? "REOPEN" : "OPEN",
    businessService: "PT." + getCreationReason(data),
    moduleName: "PT"
  };
};
var getCreationReason = function getCreationReason(data) {
  var _data31;

  if (data === void 0) {
    data = {};
  }

  return (_data31 = data) !== null && _data31 !== void 0 && _data31.isUpdateProperty ? "UPDATE" : "CREATE";
};

var Proof = function Proof(_ref) {
  var _formData$address, _formData$address$doc, _formData$address$doc2, _formData$config$key, _formData$address2, _formData$address2$do, _formData$address3, _formData$address3$do, _formData$address3$do2, _formData$config$key2, _Documentsob$Property;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var isMutation = url.includes("property-mutation");
  var index = window.location.href.split("/").pop();

  var _useState = useState(!isMutation ? (formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : (_formData$address$doc = _formData$address.documents) === null || _formData$address$doc === void 0 ? void 0 : (_formData$address$doc2 = _formData$address$doc.ProofOfAddress) === null || _formData$address$doc2 === void 0 ? void 0 : _formData$address$doc2.fileStoreId) || null : formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.fileStoreId),
      uploadedFile = _useState[0],
      setUploadedFile = _useState[1];

  var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$address2 = formData.address) === null || _formData$address2 === void 0 ? void 0 : (_formData$address2$do = _formData$address2.documents) === null || _formData$address2$do === void 0 ? void 0 : _formData$address2$do.ProofOfAddress),
      file = _useState2[0],
      setFile = _useState2[1];

  var _useState3 = useState(null),
      error = _useState3[0],
      setError = _useState3[1];

  var cityDetails = Digit.ULBService.getCurrentUlb();

  var _useState4 = useState(!isMutation ? (formData === null || formData === void 0 ? void 0 : (_formData$address3 = formData.address) === null || _formData$address3 === void 0 ? void 0 : (_formData$address3$do = _formData$address3.documents) === null || _formData$address3$do === void 0 ? void 0 : (_formData$address3$do2 = _formData$address3$do.ProofOfAddress) === null || _formData$address3$do2 === void 0 ? void 0 : _formData$address3$do2.documentType) || null : formData === null || formData === void 0 ? void 0 : (_formData$config$key2 = formData[config.key]) === null || _formData$config$key2 === void 0 ? void 0 : _formData$config$key2.documentType),
      dropdownValue = _useState4[0],
      setDropdownValue = _useState4[1];

  var dropdownData = [];
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Documents"),
      _Digit$Hooks$pt$usePr2 = _Digit$Hooks$pt$usePr.data,
      Documentsob = _Digit$Hooks$pt$usePr2 === void 0 ? {} : _Digit$Hooks$pt$usePr2;

  var docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.Documents;
  var proofOfAddress = Array.isArray(docs) && docs.filter(function (doc) {
    return doc.code.includes("ADDRESSPROOF");
  });

  if (proofOfAddress.length > 0) {
    var _proofOfAddress$;

    dropdownData = (_proofOfAddress$ = proofOfAddress[0]) === null || _proofOfAddress$ === void 0 ? void 0 : _proofOfAddress$.dropdownData;
    dropdownData.forEach(function (data) {
      data.i18nKey = stringReplaceAll(data.code, ".", "_");
    });
  }

  function setTypeOfDropdownValue(dropdownValue) {
    setDropdownValue(dropdownValue);
  }

  var handleSubmit = function handleSubmit() {
    var fileStoreId = uploadedFile;
    var fileDetails = file;
    if (fileDetails) fileDetails.documentType = dropdownValue;
    if (fileDetails) fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
    var address = !isMutation ? formData === null || formData === void 0 ? void 0 : formData.address : {};

    if (address && address.documents) {
      address.documents["ProofOfAddress"] = fileDetails;
    } else {
      address["documents"] = [];
      address.documents["ProofOfAddress"] = fileDetails;
    }

    if (!isMutation) onSelect(config.key, address, "", index);else onSelect(config.key, {
      documentType: dropdownValue,
      fileStoreId: fileStoreId
    }, "", index);
  };

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectfile(e) {
    setFile(e.target.files[0]);
  }

  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 2000000) {
                setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId())).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("PT_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    t: t,
    isDisabled: !uploadedFile || !dropdownValue || error
  }, /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_TYPES")), /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_SIZE")), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_CATEGORY_DOCUMENT_TYPE")), /*#__PURE__*/React.createElement(Dropdown, {
    t: t,
    isMandatory: false,
    option: dropdownData,
    selected: dropdownValue,
    optionKey: "i18nKey",
    select: setTypeOfDropdownValue,
    placeholder: t("PT_MUTATION_SELECT_DOC_LABEL")
  }), /*#__PURE__*/React.createElement(UploadFile, {
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf",
    onUpload: selectfile,
    onDelete: function onDelete() {
      setUploadedFile(null);
    },
    message: uploadedFile ? "1 " + t("PT_ACTION_FILEUPLOADED") : t("PT_ACTION_NO_FILEUPLOADED"),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  }));
};

var PropertyBasementsDetails = function PropertyBasementsDetails(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : formData.noOofBasements),
      BasementDetails = _useState[0],
      setBasementDetails = _useState[1];

  var menu = [{
    i18nKey: "PT_NO_BASEMENT_OPTION"
  }, {
    i18nKey: "PT_ONE_BASEMENT_OPTION"
  }, {
    i18nKey: "PT_TWO_BASEMENT_OPTION"
  }];

  var onSkip = function onSkip() {
    return onSelect();
  };

  function goNext() {
    var index = window.location.href.charAt(window.location.href.length - 1);
    sessionStorage.setItem("noOofBasements", BasementDetails.i18nKey);
    onSelect(config.key, BasementDetails, "", index);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !BasementDetails,
    isMultipleAllow: true
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: BasementDetails,
    onSelect: setBasementDetails
  })), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_BASEMENT_NUMBER_INFO_MSG", BasementDetails)
  }));
};

var PropertyFloorsDetails = function PropertyFloorsDetails(_ref) {
  var _Menu$PropertyTax, _Menu$PropertyTax$Flo;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData,
      userType = _ref.userType;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : formData.noOfFloors),
      FloorDetails = _useState[0],
      setFloorDetails = _useState[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Floor") || {},
      _ref2$data = _ref2.data,
      Menu = _ref2$data === void 0 ? {} : _ref2$data;

  var menu = [{
    i18nKey: "PT_GROUND_FLOOR_OPTION",
    code: 0
  }, {
    i18nKey: "PT_GROUND_PLUS_ONE_OPTION",
    code: 1
  }, {
    i18nKey: "PT_GROUND_PLUS_TWO_OPTION",
    code: 2
  }];
  var employeeMenu = (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : (_Menu$PropertyTax$Flo = _Menu$PropertyTax.Floor) === null || _Menu$PropertyTax$Flo === void 0 ? void 0 : _Menu$PropertyTax$Flo.filter(function (floor) {
    return (floor === null || floor === void 0 ? void 0 : floor.code) > 0;
  })) || [];

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectFloorDetails(value) {
    setFloorDetails(value);
  }

  function goNext() {
    onSelect(config.key, FloorDetails);
  }

  useEffect(function () {
    if (userType === "employee") {
      goNext();
    }
  }, [FloorDetails]);

  if (userType === "employee") {
    return null;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !FloorDetails,
    isMultipleAllow: true
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: FloorDetails,
    onSelect: selectFloorDetails
  })));
};

var PropertyTax = function PropertyTax(_ref) {
  var _Documentsob$Property, _docs;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var docType = config !== null && config !== void 0 && config.isMutation ? ["MutationDocuments"] : "Documents";

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", docType),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      _Digit$Hooks$pt$usePr2 = _Digit$Hooks$pt$usePr.data,
      Documentsob = _Digit$Hooks$pt$usePr2 === void 0 ? {} : _Digit$Hooks$pt$usePr2;

  var docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property[config !== null && config !== void 0 && config.isMutation ? docType[0] : docType];
  if (!(config !== null && config !== void 0 && config.isMutation)) docs = (_docs = docs) === null || _docs === void 0 ? void 0 : _docs.filter(function (doc) {
    return doc["digit-citizen"];
  });

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, !config.isMutation ? t("PT_DOC_REQ_SCREEN_HEADER") : t("PT_REQIURED_DOC_TRANSFER_OWNERSHIP")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardText, {
    className: "primaryColor"
  }, t("PT_DOC_REQ_SCREEN_SUB_HEADER")), /*#__PURE__*/React.createElement(CardText, {
    className: "primaryColor"
  }, t("PT_DOC_REQ_SCREEN_TEXT")), /*#__PURE__*/React.createElement(CardText, {
    className: "primaryColor"
  }, t("PT_DOC_REQ_SCREEN_SUB_TEXT")), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_DOC_REQ_SCREEN_LABEL")), /*#__PURE__*/React.createElement(CardText, {
    className: "primaryColor"
  }, t("PT_DOC_REQ_SCREEN_LABEL_TEXT")), /*#__PURE__*/React.createElement("div", null, isLoading && /*#__PURE__*/React.createElement(Loader, null), Array.isArray(docs) ? config !== null && config !== void 0 && config.isMutation ? docs.map(function (_ref2, index) {
    var code = _ref2.code,
        dropdownData = _ref2.dropdownData;
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, index + 1, ". ", t(code)), /*#__PURE__*/React.createElement(CardText, {
      className: "primaryColor"
    }, dropdownData.map(function (dropdownData) {
      return t(dropdownData === null || dropdownData === void 0 ? void 0 : dropdownData.code);
    }).join(', ')));
  }) : docs.map(function (_ref3, index) {
    var code = _ref3.code,
        dropdownData = _ref3.dropdownData;
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, index + 1, ". ", t("PROPERTYTAX_" + stringReplaceAll(code, ".", "_") + "_HEADING")), dropdownData.map(function (dropdownData) {
      return /*#__PURE__*/React.createElement(CardText, {
        className: "primaryColor"
      }, t("PROPERTYTAX_" + stringReplaceAll(dropdownData === null || dropdownData === void 0 ? void 0 : dropdownData.code, ".", "_") + "_LABEL"));
    }));
  }) : console.log("error"))), /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_COMMON_NEXT"),
    onSubmit: onSelect
  }))));
};

var PropertyType = function PropertyType(_ref) {
  var _Menu$PropertyTax;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      setError = _ref.setError,
      clearErrors = _ref.clearErrors,
      formState = _ref.formState,
      onBlur = _ref.onBlur;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : formData.PropertyType),
      BuildingType = _useState[0],
      setBuildingType = _useState[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "PTPropertyType") || {},
      _ref2$data = _ref2.data,
      Menu = _ref2$data === void 0 ? {} : _ref2$data,
      isLoading = _ref2.isLoading;

  var proptype = [];
  proptype = Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : _Menu$PropertyTax.PropertyType;
  var i;
  var menu = [];

  function getPropertyTypeMenu(proptype) {
    if (userType === "employee") {
      var _proptype$filter, _proptype$filter$map;

      return proptype === null || proptype === void 0 ? void 0 : (_proptype$filter = proptype.filter(function (e) {
        return e.code === "VACANT" || e.code.split(".").length > 1;
      })) === null || _proptype$filter === void 0 ? void 0 : (_proptype$filter$map = _proptype$filter.map(function (item) {
        return {
          i18nKey: "COMMON_PROPTYPE_" + stringReplaceAll(item === null || item === void 0 ? void 0 : item.code, ".", "_"),
          code: item === null || item === void 0 ? void 0 : item.code
        };
      })) === null || _proptype$filter$map === void 0 ? void 0 : _proptype$filter$map.sort(function (a, b) {
        return a.i18nKey.split("_").pop().localeCompare(b.i18nKey.split("_").pop());
      });
    } else {
      if (Array.isArray(proptype) && proptype.length > 0) {
        for (i = 0; i < proptype.length; i++) {
          if (i != 1 && i != 4 && Array.isArray(proptype) && proptype.length > 0) menu.push({
            i18nKey: "COMMON_PROPTYPE_" + stringReplaceAll(proptype[i].code, ".", "_"),
            code: proptype[i].code
          });
        }
      }

      menu.sort(function (a, b) {
        return a.i18nKey.split("_").pop().localeCompare(b.i18nKey.split("_").pop());
      });
      return menu;
    }
  }

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var presentInModifyApplication = pathname.includes("modify");

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectBuildingType(value) {
    setBuildingType(value);
  }

  function goNext() {
    sessionStorage.setItem("PropertyType", BuildingType === null || BuildingType === void 0 ? void 0 : BuildingType.i18nKey);
    onSelect(config.key, BuildingType);
  }

  useEffect(function () {
    if (presentInModifyApplication && userType === "employee" && Menu) {
      var _formData$originalDat, _getPropertyTypeMenu;

      var original = formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : _formData$originalDat.propertyType;
      var defaultVal = (_getPropertyTypeMenu = getPropertyTypeMenu(proptype)) === null || _getPropertyTypeMenu === void 0 ? void 0 : _getPropertyTypeMenu.filter(function (e) {
        return e.code === original;
      })[0];
      setBuildingType(defaultVal);
    }
  }, [isLoading]);
  useEffect(function () {
    if (userType === "employee") {
      goNext();
      if (!BuildingType) setError(config.key, {
        type: "required",
        message: t("CORE_COMMON_REQUIRED_ERRMSG")
      });else clearErrors(config.key);
    }
  }, [BuildingType]);
  var inputs = [{
    label: "PT_ASSESMENT_INFO_TYPE_OF_BUILDING",
    type: "text",
    name: "propertyType",
    validation: {}
  }];

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  if (userType === "employee") {
    return inputs === null || inputs === void 0 ? void 0 : inputs.map(function (input, index) {
      var _getPropertyTypeMenu2, _getPropertyTypeMenu3, _formState$errors, _formState$errors$con;

      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, t(input.label) + " *"), /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: ((_getPropertyTypeMenu2 = getPropertyTypeMenu(proptype)) === null || _getPropertyTypeMenu2 === void 0 ? void 0 : _getPropertyTypeMenu2.length) === 1 ? getPropertyTypeMenu(proptype)[0] : BuildingType,
        disable: ((_getPropertyTypeMenu3 = getPropertyTypeMenu(proptype)) === null || _getPropertyTypeMenu3 === void 0 ? void 0 : _getPropertyTypeMenu3.length) === 1,
        option: getPropertyTypeMenu(proptype),
        select: selectBuildingType,
        optionKey: "i18nKey",
        onBlur: onBlur,
        t: t
      })), formState.touched[config.key] ? /*#__PURE__*/React.createElement(CardLabelError, {
        style: {
          width: "70%",
          marginLeft: "30%",
          fontSize: "12px",
          marginTop: "-21px"
        }
      }, (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$con = _formState$errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.message) : null);
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !BuildingType
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: getPropertyTypeMenu(proptype) || {},
    selectedOption: BuildingType,
    onSelect: selectBuildingType
  })), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_PROPERTY_TYPE_INFO_MSG")
  }));
};

var PropertyUsageType = function PropertyUsageType(_ref) {
  var _formData$usageCatego, _formData$usageCatego2, _Menu$PropertyTax;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      formState = _ref.formState,
      setError = _ref.setError,
      clearErrors = _ref.clearErrors,
      onBlur = _ref.onBlur;

  var _useState = useState(formData !== null && formData !== void 0 && formData.usageCategoryMajor && (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego = formData.usageCategoryMajor) === null || _formData$usageCatego === void 0 ? void 0 : _formData$usageCatego.code) === "NONRESIDENTIAL.OTHERS" ? {
    code: "" + (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego2 = formData.usageCategoryMajor) === null || _formData$usageCatego2 === void 0 ? void 0 : _formData$usageCatego2.code),
    i18nKey: "PROPERTYTAX_BILLING_SLAB_OTHERS"
  } : formData === null || formData === void 0 ? void 0 : formData.usageCategoryMajor),
      usageCategoryMajor = _useState[0],
      setPropertyPurpose = _useState[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "UsageCategory") || {},
      _ref2$data = _ref2.data,
      Menu = _ref2$data === void 0 ? {} : _ref2$data,
      menuLoading = _ref2.isLoading;

  var usagecat = [];
  usagecat = (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : _Menu$PropertyTax.UsageCategory) || [];
  var i;
  var menu = [];

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var presentInModifyApplication = pathname.includes("modify");

  function usageCategoryMajorMenu(usagecat) {
    if (userType === "employee") {
      var _usagecat$filter;

      var catMenu = usagecat === null || usagecat === void 0 ? void 0 : (_usagecat$filter = usagecat.filter(function (e) {
        return (e === null || e === void 0 ? void 0 : e.code.split(".").length) <= 2 && e.code !== "NONRESIDENTIAL";
      })) === null || _usagecat$filter === void 0 ? void 0 : _usagecat$filter.map(function (item) {
        var arr = item === null || item === void 0 ? void 0 : item.code.split(".");
        if (arr.length == 2) return {
          i18nKey: "PROPERTYTAX_BILLING_SLAB_" + arr[1],
          code: item === null || item === void 0 ? void 0 : item.code
        };else return {
          i18nKey: "PROPERTYTAX_BILLING_SLAB_" + (item === null || item === void 0 ? void 0 : item.code),
          code: item === null || item === void 0 ? void 0 : item.code
        };
      });
      return catMenu;
    } else {
      for (i = 0; i < 10; i++) {
        if (Array.isArray(usagecat) && usagecat.length > 0 && usagecat[i].code.split(".")[0] == "NONRESIDENTIAL" && usagecat[i].code.split(".").length == 2) {
          menu.push({
            i18nKey: "PROPERTYTAX_BILLING_SLAB_" + usagecat[i].code.split(".")[1],
            code: usagecat[i].code
          });
        }
      }

      return menu;
    }
  }

  useEffect(function () {
    if (!menuLoading && presentInModifyApplication && userType === "employee") {
      var _formData$originalDat;

      var original = formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : _formData$originalDat.usageCategory;
      var selectedOption = usageCategoryMajorMenu(usagecat).filter(function (e) {
        return e.code === original;
      })[0];
      setPropertyPurpose(selectedOption);
    }
  }, [menuLoading]);

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectPropertyPurpose(value) {
    setPropertyPurpose(value);
  }

  function goNext() {
    if ((usageCategoryMajor === null || usageCategoryMajor === void 0 ? void 0 : usageCategoryMajor.i18nKey) === "PROPERTYTAX_BILLING_SLAB_OTHERS") {
      usageCategoryMajor.i18nKey = "PROPERTYTAX_BILLING_SLAB_NONRESIDENTIAL";
      onSelect(config.key, usageCategoryMajor);
    } else {
      onSelect(config.key, usageCategoryMajor);
    }
  }

  useEffect(function () {
    if (userType === "employee") {
      if (!usageCategoryMajor) {
        setError(config.key, {
          type: "required",
          message: t("CORE_COMMON_REQUIRED_ERRMSG")
        });
      } else {
        clearErrors(config.key);
      }

      goNext();
    }
  }, [usageCategoryMajor]);

  if (userType === "employee") {
    var _usageCategoryMajorMe, _formState$errors, _formState$errors$con;

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller"
    }, t("PT_ASSESMENT_INFO_USAGE_TYPE") + " *"), /*#__PURE__*/React.createElement(Dropdown, {
      className: "form-field",
      selected: usageCategoryMajor,
      disable: ((_usageCategoryMajorMe = usageCategoryMajorMenu(usagecat)) === null || _usageCategoryMajorMe === void 0 ? void 0 : _usageCategoryMajorMe.length) === 1,
      option: usageCategoryMajorMenu(usagecat),
      select: function select(e) {
        selectPropertyPurpose(e);
      },
      optionKey: "i18nKey",
      onBlur: onBlur,
      t: t
    })), formState.touched[config.key] ? /*#__PURE__*/React.createElement(CardLabelError, {
      style: {
        width: "70%",
        marginLeft: "30%",
        fontSize: "12px",
        marginTop: "-21px"
      }
    }, (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$con = _formState$errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.message) : null);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !usageCategoryMajor
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: usageCategoryMajorMenu(usagecat) || {},
    selectedOption: usageCategoryMajor,
    onSelect: selectPropertyPurpose
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_USAGE_TYPE_INFO_MSG", usageCategoryMajor)
  }));
};

var ProvideSubUsageType = function ProvideSubUsageType(_ref) {
  var _Menu$PropertyTax, _formData$usageCatego4;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var SubUsageType, setSelfOccupied;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].SubUsageType);

    SubUsageType = _useState[0];
    setSelfOccupied = _useState[1];
  } else {
    var _formData$subusagetyp;

    var _useState2 = useState((_formData$subusagetyp = formData.subusagetype) === null || _formData$subusagetyp === void 0 ? void 0 : _formData$subusagetyp.SubUsageType);

    SubUsageType = _useState2[0];
    setSelfOccupied = _useState2[1];
  }

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "UsageCategory") || {},
      _ref2$data = _ref2.data,
      Menu = _ref2$data === void 0 ? {} : _ref2$data;

  var subusageoption = [];
  subusageoption = (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : _Menu$PropertyTax.UsageCategory) || [];
  var i;
  var data = [];

  function getSubUsagedata(subusageoption) {
    if (userType === "employee") {
      var _subusageoption$map, _subusageoption$map$f;

      return subusageoption === null || subusageoption === void 0 ? void 0 : (_subusageoption$map = subusageoption.map(function (item) {
        var _formData$usageCatego;

        var codeArr = item === null || item === void 0 ? void 0 : item.code.split(".");

        if (codeArr[1] == (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego = formData.usageCategoryMajor) === null || _formData$usageCatego === void 0 ? void 0 : _formData$usageCatego.i18nKey.split("_")[3]) && codeArr.length == 4) {
          return {
            i18nKey: "COMMON_PROPSUBUSGTYPE_NONRESIDENTIAL_" + codeArr[1] + "_" + codeArr[codeArr.length - 1]
          };
        }

        return {
          filter: true
        };
      })) === null || _subusageoption$map === void 0 ? void 0 : (_subusageoption$map$f = _subusageoption$map.filter(function (item) {
        return !(item !== null && item !== void 0 && item.filter);
      })) === null || _subusageoption$map$f === void 0 ? void 0 : _subusageoption$map$f.sort(function (a, b) {
        return t(a.i18nKey).localeCompare(t(b.i18nKey));
      });
    } else {
      for (i = 0; i < subusageoption.length; i++) {
        var _formData$usageCatego2;

        if (Array.isArray(subusageoption) && subusageoption.length > 0 && subusageoption[i].code.split(".")[1] == (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego2 = formData.usageCategoryMajor) === null || _formData$usageCatego2 === void 0 ? void 0 : _formData$usageCatego2.i18nKey.split("_")[3]) && subusageoption[i].code.split(".").length == 4) {
          data.push({
            i18nKey: "COMMON_PROPSUBUSGTYPE_NONRESIDENTIAL_" + subusageoption[i].code.split(".")[1] + "_" + subusageoption[i].code.split(".")[subusageoption[i].code.split(".").length - 1]
          });
        }
      }

      data.sort(function (a, b) {
        return t(a.i18nKey).localeCompare(t(b.i18nKey));
      });
      return data;
    }
  }

  var getCode = function getCode() {
    for (i = 0; i < subusageoption.length; i++) {
      var _subusageoption$i, _SubUsageType;

      if (((_subusageoption$i = subusageoption[i]) === null || _subusageoption$i === void 0 ? void 0 : _subusageoption$i.code.split(".").pop()) === ((_SubUsageType = SubUsageType) === null || _SubUsageType === void 0 ? void 0 : _SubUsageType.i18nKey.split("_").pop())) {
        var _subusageoption$i2;

        return (_subusageoption$i2 = subusageoption[i]) === null || _subusageoption$i2 === void 0 ? void 0 : _subusageoption$i2.code;
      }
    }
  };

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectSelfOccupied(value) {
    setSelfOccupied(value);
  }

  function goNext() {
    var subuagecode = getCode();

    if (!isNaN(index)) {
      var _unit$selfOccupied;

      var unit = formData.units && formData.units[index];

      var floordet = _extends({}, unit, {
        SubUsageType: SubUsageType,
        subuagecode: subuagecode
      });

      if ((unit === null || unit === void 0 ? void 0 : (_unit$selfOccupied = unit.selfOccupied) === null || _unit$selfOccupied === void 0 ? void 0 : _unit$selfOccupied.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED") {
        sessionStorage.setItem("subusagetypevar", "yes");
      } else {
        sessionStorage.setItem("subusagetypevar", "no");
      }

      onSelect(config.key, floordet, false, index);
    } else {
      if (userType === "employee") {
        onSelect(config.key, {
          SubUsageType: SubUsageType,
          subuagecode: subuagecode
        });
      } else {
        var _formData$selfOccupie;

        if ((formData === null || formData === void 0 ? void 0 : (_formData$selfOccupie = formData.selfOccupied) === null || _formData$selfOccupie === void 0 ? void 0 : _formData$selfOccupie.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED") {
          sessionStorage.setItem("subusagetypevar", "yes");
        } else {
          sessionStorage.setItem("subusagetypevar", "no");
        }

        onSelect("subusagetype", {
          SubUsageType: SubUsageType,
          subuagecode: subuagecode
        });
      }
    }
  }

  var _useState3 = useState([]),
      setInputs = _useState3[1];

  useEffect(function () {
    if (userType === "employee") {
      var _formData$usageCatego3;

      var arr = ["RESIDENTIAL", "NONRESIDENTIAL.OTHERS", "MIXED"];
      if (!arr.includes(formData === null || formData === void 0 ? void 0 : (_formData$usageCatego3 = formData.usageCategoryMajor) === null || _formData$usageCatego3 === void 0 ? void 0 : _formData$usageCatego3.code)) setInputs([{
        label: "PT_ASSESSMENT_FLOW_SUBUSAGE_HEADER",
        type: "dropdown",
        name: "subusagetype",
        validation: {}
      }]);else setInputs([]);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$usageCatego4 = formData.usageCategoryMajor) === null || _formData$usageCatego4 === void 0 ? void 0 : _formData$usageCatego4.code]);
  useEffect(function () {
    if (userType === "employee") {
      goNext();
    }
  }, [SubUsageType]);

  if (userType === "employee") {
    return null;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !SubUsageType
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("PT_SUB_USAGE_TYPE_LABEL")), /*#__PURE__*/React.createElement("div", {
    className: "form-pt-dropdown-only"
  }, getSubUsagedata(subusageoption) && /*#__PURE__*/React.createElement(RadioOrSelect, {
    isMandatory: config.isMandatory,
    selectedOption: SubUsageType,
    options: data || {},
    t: t,
    optionKey: "i18nKey",
    onSelect: selectSelfOccupied
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_SUB_USAGE_TYPE_INFO_MSG")
  }));
};

var ProvideSubUsageTypeOfRentedArea = function ProvideSubUsageTypeOfRentedArea(_ref) {
  var _Menu$PropertyTax;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var SubUsageTypeOfRentedArea, setSelfOccupied;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].SubUsageTypeOfRentedArea || "");

    SubUsageTypeOfRentedArea = _useState[0];
    setSelfOccupied = _useState[1];
  } else {
    var _formData$Subusagetyp;

    var _useState2 = useState(((_formData$Subusagetyp = formData.Subusagetypeofrentedarea) === null || _formData$Subusagetyp === void 0 ? void 0 : _formData$Subusagetyp.SubUsageTypeOfRentedArea) || "");

    SubUsageTypeOfRentedArea = _useState2[0];
    setSelfOccupied = _useState2[1];
  }

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "UsageCategory") || {},
      _ref2$data = _ref2.data,
      Menu = _ref2$data === void 0 ? {} : _ref2$data;

  var subusageoption = [];
  subusageoption = (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : _Menu$PropertyTax.UsageCategory) || [];
  var i;
  var data = [];

  function getSubUsagedata(subusageoption) {
    for (i = 0; i < subusageoption.length; i++) {
      if (Array.isArray(subusageoption) && subusageoption.length > 0 && subusageoption[i].code.split(".")[1] == (formData === null || formData === void 0 ? void 0 : formData.usageCategoryMajor.i18nKey.split("_")[3]) && subusageoption[i].code.split(".").length == 4) {
        data.push({
          i18nKey: "COMMON_PROPSUBUSGTYPE_NONRESIDENTIAL_" + subusageoption[i].code.split(".")[1] + "_" + subusageoption[i].code.split(".")[subusageoption[i].code.split(".").length - 1]
        });
      }
    }

    data.sort(function (a, b) {
      return t(a.i18nKey).localeCompare(t(b.i18nKey));
    });
    return data;
  }

  var getCode = function getCode() {
    for (i = 0; i < subusageoption.length; i++) {
      var _subusageoption$i;

      if (((_subusageoption$i = subusageoption[i]) === null || _subusageoption$i === void 0 ? void 0 : _subusageoption$i.code.split(".").pop()) === SubUsageTypeOfRentedArea.i18nKey.split("_").pop()) {
        var _subusageoption$i2;

        return (_subusageoption$i2 = subusageoption[i]) === null || _subusageoption$i2 === void 0 ? void 0 : _subusageoption$i2.code;
      }
    }
  };

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectSelfOccupied(value) {
    setSelfOccupied(value);
  }

  function goNext() {
    var Subusagetypeofrentedareacode = getCode();

    if (!isNaN(index)) {
      var unit = formData.units && formData.units[index];

      var floordet = _extends({}, unit, {
        SubUsageTypeOfRentedArea: SubUsageTypeOfRentedArea,
        Subusagetypeofrentedareacode: Subusagetypeofrentedareacode
      });

      onSelect(config.key, floordet, false, index);
    } else {
      onSelect("Subusagetypeofrentedarea", {
        SubUsageTypeOfRentedArea: SubUsageTypeOfRentedArea,
        Subusagetypeofrentedareacode: Subusagetypeofrentedareacode
      });
    }
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !SubUsageTypeOfRentedArea
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("PT_SUB_USAGE_TYPE_LABEL")), /*#__PURE__*/React.createElement("div", {
    className: "form-pt-dropdown-only"
  }, getSubUsagedata(subusageoption) && /*#__PURE__*/React.createElement(RadioOrSelect, {
    t: t,
    optionKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: data || [],
    selectedOption: SubUsageTypeOfRentedArea,
    onSelect: selectSelfOccupied
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_SUB_USAGE_TYPE_INFO_MSG")
  }));
};

var PTWFReason = function PTWFReason(_ref) {
  var headComment = _ref.headComment,
      otherComment = _ref.otherComment;
  return /*#__PURE__*/React.createElement("div", {
    className: "checkpoint-comments-wrap"
  }, /*#__PURE__*/React.createElement("h4", null, headComment), /*#__PURE__*/React.createElement("p", null, otherComment));
};

var PTWFCaption = function PTWFCaption(_ref) {
  var data = _ref.data;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement("div", null, data.date && /*#__PURE__*/React.createElement("p", null, data.date), /*#__PURE__*/React.createElement("p", null, data.name), data.mobileNumber && /*#__PURE__*/React.createElement(TelePhone, {
    mobile: data.mobileNumber
  }), data.source && /*#__PURE__*/React.createElement("p", null, t("ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + data.source.toUpperCase())), data.comment && /*#__PURE__*/React.createElement(PTWFReason, {
    otherComment: data === null || data === void 0 ? void 0 : data.otherComment,
    headComment: data === null || data === void 0 ? void 0 : data.comment
  }));
};

var PTWFApplicationTimeline = function PTWFApplicationTimeline(props) {
  var _props$application, _props$application2, _data$timeline, _data$timeline2, _data$timeline$;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var businessService = ((_props$application = props.application) === null || _props$application === void 0 ? void 0 : _props$application.creationReason) && "PT." + props.application.creationReason || "PT.CREATE";

  var _Digit$Hooks$useWorkf = Digit.Hooks.useWorkflowDetails({
    tenantId: (_props$application2 = props.application) === null || _props$application2 === void 0 ? void 0 : _props$application2.tenantId,
    id: props.id,
    moduleCode: businessService
  }),
      isLoading = _Digit$Hooks$useWorkf.isLoading,
      data = _Digit$Hooks$useWorkf.data;

  var getTimelineCaptions = function getTimelineCaptions(checkpoint) {
    if (checkpoint.state === "OPEN") {
      var _props$application3, _props$application3$a, _props$application4;

      var caption = {
        date: Digit.DateUtils.ConvertTimestampToDate((_props$application3 = props.application) === null || _props$application3 === void 0 ? void 0 : (_props$application3$a = _props$application3.auditDetails) === null || _props$application3$a === void 0 ? void 0 : _props$application3$a.createdTime),
        source: ((_props$application4 = props.application) === null || _props$application4 === void 0 ? void 0 : _props$application4.channel) || ""
      };
      return /*#__PURE__*/React.createElement(PTWFCaption, {
        data: caption
      });
    } else if (checkpoint.status === "ACTIVE") {
      var _props$application5;

      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Link, {
        to: "/digit-ui/citizen/pt/property/properties/" + (props === null || props === void 0 ? void 0 : (_props$application5 = props.application) === null || _props$application5 === void 0 ? void 0 : _props$application5.propertyId)
      }, /*#__PURE__*/React.createElement(ActionLinks, null, t("PT_VIEW_PROPERTY_DETAILS"))));
    } else {
        var _props$application6, _checkpoint$assigner;

        var _caption = {
          date: Digit.DateUtils.ConvertTimestampToDate((_props$application6 = props.application) === null || _props$application6 === void 0 ? void 0 : _props$application6.auditDetails.lastModified),
          name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assigner = checkpoint.assigner) === null || _checkpoint$assigner === void 0 ? void 0 : _checkpoint$assigner.name,
          comment: t(checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.comment)
        };
        return /*#__PURE__*/React.createElement(PTWFCaption, {
          data: _caption
        });
      }
  };

  var showNextActions = function showNextActions(nextActions) {
    var _nextAction;

    var nextAction = nextActions[0];
    var next = nextActions.map(function (action) {
      return action.action;
    });

    if (next.includes("PAY") || next.includes("EDIT")) {
      var currentIndex = next.indexOf("EDIT") || next.indexOf("PAY");
      currentIndex = currentIndex != -1 ? currentIndex : next.indexOf("PAY");
      nextAction = nextActions[currentIndex];
    }

    switch ((_nextAction = nextAction) === null || _nextAction === void 0 ? void 0 : _nextAction.action) {
      case "PAY":
        return /*#__PURE__*/React.createElement("div", {
          style: {
            marginTop: "1em",
            bottom: "0px",
            width: "100%",
            marginBottom: "1.2em"
          }
        }, /*#__PURE__*/React.createElement(Link, {
          to: {
            pathname: "/digit-ui/citizen/payment/collect/" + businessService + "/" + props.id,
            state: {
              tenantId: props.application.tenantId
            }
          }
        }, /*#__PURE__*/React.createElement(SubmitBar, {
          label: t("CS_APPLICATION_DETAILS_MAKE_PAYMENT")
        })));

      case "EDIT":
        return /*#__PURE__*/React.createElement("div", {
          style: {
            marginTop: "1em",
            bottom: "0px",
            width: "100%",
            marginBottom: "1.2em"
          }
        }, businessService != "PT.MUTATION" && /*#__PURE__*/React.createElement(Link, {
          to: {
            pathname: "/digit-ui/citizen/pt/property/edit-application/action=edit-" + businessService + "/" + props.id,
            state: {
              tenantId: props.application.tenantId
            }
          }
        }, /*#__PURE__*/React.createElement(SubmitBar, {
          label: t("CS_APPLICATION_DETAILS_EDIT")
        })));

      case "SUBMIT_FEEDBACK":
        return /*#__PURE__*/React.createElement("div", {
          style: {
            marginTop: "24px"
          }
        }, /*#__PURE__*/React.createElement(Link, {
          to: "/digit-ui/citizen/fsm/rate/" + props.id
        }, /*#__PURE__*/React.createElement(SubmitBar, {
          label: t("CS_APPLICATION_DETAILS_RATE")
        })));
    }
  };

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, !isLoading && /*#__PURE__*/React.createElement(Fragment$1, null, (data === null || data === void 0 ? void 0 : (_data$timeline = data.timeline) === null || _data$timeline === void 0 ? void 0 : _data$timeline.length) > 0 && /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      marginBottom: "16px",
      marginTop: "32px"
    }
  }, t("CS_APPLICATION_DETAILS_APPLICATION_TIMELINE")), data !== null && data !== void 0 && data.timeline && (data === null || data === void 0 ? void 0 : (_data$timeline2 = data.timeline) === null || _data$timeline2 === void 0 ? void 0 : _data$timeline2.length) === 1 ? /*#__PURE__*/React.createElement(CheckPoint, {
    isCompleted: true,
    label: t((data === null || data === void 0 ? void 0 : (_data$timeline$ = data.timeline[0]) === null || _data$timeline$ === void 0 ? void 0 : _data$timeline$.state) && "WF_" + businessService + "_" + data.timeline[0].state || "NA"),
    customChild: getTimelineCaptions(data === null || data === void 0 ? void 0 : data.timeline[0])
  }) : /*#__PURE__*/React.createElement(ConnectingCheckPoints, null, (data === null || data === void 0 ? void 0 : data.timeline) && (data === null || data === void 0 ? void 0 : data.timeline.map(function (checkpoint, index, arr) {
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(CheckPoint, {
      keyValue: index,
      isCompleted: index === 0,
      label: checkpoint.state ? t("WF_" + businessService + "_" + checkpoint.state) : "NA",
      customChild: getTimelineCaptions(checkpoint)
    }));
  })))), data && showNextActions(data === null || data === void 0 ? void 0 : data.nextActions));
};

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var lodash = createCommonjsModule(function (module, exports) {
  (function () {
    var undefined$1;
    var VERSION = '4.17.20';
    var LARGE_ARRAY_SIZE = 200;
    var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
        FUNC_ERROR_TEXT = 'Expected a function';
    var HASH_UNDEFINED = '__lodash_hash_undefined__';
    var MAX_MEMOIZE_SIZE = 500;
    var PLACEHOLDER = '__lodash_placeholder__';
    var CLONE_DEEP_FLAG = 1,
        CLONE_FLAT_FLAG = 2,
        CLONE_SYMBOLS_FLAG = 4;
    var COMPARE_PARTIAL_FLAG = 1,
        COMPARE_UNORDERED_FLAG = 2;
    var WRAP_BIND_FLAG = 1,
        WRAP_BIND_KEY_FLAG = 2,
        WRAP_CURRY_BOUND_FLAG = 4,
        WRAP_CURRY_FLAG = 8,
        WRAP_CURRY_RIGHT_FLAG = 16,
        WRAP_PARTIAL_FLAG = 32,
        WRAP_PARTIAL_RIGHT_FLAG = 64,
        WRAP_ARY_FLAG = 128,
        WRAP_REARG_FLAG = 256,
        WRAP_FLIP_FLAG = 512;
    var DEFAULT_TRUNC_LENGTH = 30,
        DEFAULT_TRUNC_OMISSION = '...';
    var HOT_COUNT = 800,
        HOT_SPAN = 16;
    var LAZY_FILTER_FLAG = 1,
        LAZY_MAP_FLAG = 2,
        LAZY_WHILE_FLAG = 3;
    var INFINITY = 1 / 0,
        MAX_SAFE_INTEGER = 9007199254740991,
        MAX_INTEGER = 1.7976931348623157e+308,
        NAN = 0 / 0;
    var MAX_ARRAY_LENGTH = 4294967295,
        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
    var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
    var argsTag = '[object Arguments]',
        arrayTag = '[object Array]',
        asyncTag = '[object AsyncFunction]',
        boolTag = '[object Boolean]',
        dateTag = '[object Date]',
        domExcTag = '[object DOMException]',
        errorTag = '[object Error]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        mapTag = '[object Map]',
        numberTag = '[object Number]',
        nullTag = '[object Null]',
        objectTag = '[object Object]',
        promiseTag = '[object Promise]',
        proxyTag = '[object Proxy]',
        regexpTag = '[object RegExp]',
        setTag = '[object Set]',
        stringTag = '[object String]',
        symbolTag = '[object Symbol]',
        undefinedTag = '[object Undefined]',
        weakMapTag = '[object WeakMap]',
        weakSetTag = '[object WeakSet]';
    var arrayBufferTag = '[object ArrayBuffer]',
        dataViewTag = '[object DataView]',
        float32Tag = '[object Float32Array]',
        float64Tag = '[object Float64Array]',
        int8Tag = '[object Int8Array]',
        int16Tag = '[object Int16Array]',
        int32Tag = '[object Int32Array]',
        uint8Tag = '[object Uint8Array]',
        uint8ClampedTag = '[object Uint8ClampedArray]',
        uint16Tag = '[object Uint16Array]',
        uint32Tag = '[object Uint32Array]';
    var reEmptyStringLeading = /\b__p \+= '';/g,
        reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
        reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
    var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
        reUnescapedHtml = /[&<>"']/g,
        reHasEscapedHtml = RegExp(reEscapedHtml.source),
        reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
    var reEscape = /<%-([\s\S]+?)%>/g,
        reEvaluate = /<%([\s\S]+?)%>/g,
        reInterpolate = /<%=([\s\S]+?)%>/g;
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        reIsPlainProp = /^\w*$/,
        rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
        reHasRegExpChar = RegExp(reRegExpChar.source);
    var reTrim = /^\s+|\s+$/g,
        reTrimStart = /^\s+/,
        reTrimEnd = /\s+$/;
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
        reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
        reSplitDetails = /,? & /;
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var reEscapeChar = /\\(\\)?/g;
    var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
    var reFlags = /\w*$/;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsOctal = /^0o[0-7]+$/i;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    var reNoMatch = /($^)/;
    var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
    var rsAstralRange = "\\ud800-\\udfff",
        rsComboMarksRange = "\\u0300-\\u036f",
        reComboHalfMarksRange = "\\ufe20-\\ufe2f",
        rsComboSymbolsRange = "\\u20d0-\\u20ff",
        rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
        rsDingbatRange = "\\u2700-\\u27bf",
        rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
        rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
        rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
        rsPunctuationRange = "\\u2000-\\u206f",
        rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
        rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
        rsVarRange = "\\ufe0e\\ufe0f",
        rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
    var rsApos = "['\u2019]",
        rsAstral = '[' + rsAstralRange + ']',
        rsBreak = '[' + rsBreakRange + ']',
        rsCombo = '[' + rsComboRange + ']',
        rsDigits = '\\d+',
        rsDingbat = '[' + rsDingbatRange + ']',
        rsLower = '[' + rsLowerRange + ']',
        rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
        rsFitz = "\\ud83c[\\udffb-\\udfff]",
        rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
        rsNonAstral = '[^' + rsAstralRange + ']',
        rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}",
        rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]",
        rsUpper = '[' + rsUpperRange + ']',
        rsZWJ = "\\u200d";
    var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
        rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
        rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
        rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
        reOptMod = rsModifier + '?',
        rsOptVar = '[' + rsVarRange + ']?',
        rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
        rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
        rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
        rsSeq = rsOptVar + reOptMod + rsOptJoin,
        rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
        rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
    var reApos = RegExp(rsApos, 'g');
    var reComboMark = RegExp(rsCombo, 'g');
    var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
    var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
    var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var contextProps = ['Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array', 'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object', 'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'];
    var templateCounter = -1;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var cloneableTags = {};
    cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
    cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
    var deburredLetters = {
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      "\u0100": 'A',
      "\u0102": 'A',
      "\u0104": 'A',
      "\u0101": 'a',
      "\u0103": 'a',
      "\u0105": 'a',
      "\u0106": 'C',
      "\u0108": 'C',
      "\u010A": 'C',
      "\u010C": 'C',
      "\u0107": 'c',
      "\u0109": 'c',
      "\u010B": 'c',
      "\u010D": 'c',
      "\u010E": 'D',
      "\u0110": 'D',
      "\u010F": 'd',
      "\u0111": 'd',
      "\u0112": 'E',
      "\u0114": 'E',
      "\u0116": 'E',
      "\u0118": 'E',
      "\u011A": 'E',
      "\u0113": 'e',
      "\u0115": 'e',
      "\u0117": 'e',
      "\u0119": 'e',
      "\u011B": 'e',
      "\u011C": 'G',
      "\u011E": 'G',
      "\u0120": 'G',
      "\u0122": 'G',
      "\u011D": 'g',
      "\u011F": 'g',
      "\u0121": 'g',
      "\u0123": 'g',
      "\u0124": 'H',
      "\u0126": 'H',
      "\u0125": 'h',
      "\u0127": 'h',
      "\u0128": 'I',
      "\u012A": 'I',
      "\u012C": 'I',
      "\u012E": 'I',
      "\u0130": 'I',
      "\u0129": 'i',
      "\u012B": 'i',
      "\u012D": 'i',
      "\u012F": 'i',
      "\u0131": 'i',
      "\u0134": 'J',
      "\u0135": 'j',
      "\u0136": 'K',
      "\u0137": 'k',
      "\u0138": 'k',
      "\u0139": 'L',
      "\u013B": 'L',
      "\u013D": 'L',
      "\u013F": 'L',
      "\u0141": 'L',
      "\u013A": 'l',
      "\u013C": 'l',
      "\u013E": 'l',
      "\u0140": 'l',
      "\u0142": 'l',
      "\u0143": 'N',
      "\u0145": 'N',
      "\u0147": 'N',
      "\u014A": 'N',
      "\u0144": 'n',
      "\u0146": 'n',
      "\u0148": 'n',
      "\u014B": 'n',
      "\u014C": 'O',
      "\u014E": 'O',
      "\u0150": 'O',
      "\u014D": 'o',
      "\u014F": 'o',
      "\u0151": 'o',
      "\u0154": 'R',
      "\u0156": 'R',
      "\u0158": 'R',
      "\u0155": 'r',
      "\u0157": 'r',
      "\u0159": 'r',
      "\u015A": 'S',
      "\u015C": 'S',
      "\u015E": 'S',
      "\u0160": 'S',
      "\u015B": 's',
      "\u015D": 's',
      "\u015F": 's',
      "\u0161": 's',
      "\u0162": 'T',
      "\u0164": 'T',
      "\u0166": 'T',
      "\u0163": 't',
      "\u0165": 't',
      "\u0167": 't',
      "\u0168": 'U',
      "\u016A": 'U',
      "\u016C": 'U',
      "\u016E": 'U',
      "\u0170": 'U',
      "\u0172": 'U',
      "\u0169": 'u',
      "\u016B": 'u',
      "\u016D": 'u',
      "\u016F": 'u',
      "\u0171": 'u',
      "\u0173": 'u',
      "\u0174": 'W',
      "\u0175": 'w',
      "\u0176": 'Y',
      "\u0177": 'y',
      "\u0178": 'Y',
      "\u0179": 'Z',
      "\u017B": 'Z',
      "\u017D": 'Z',
      "\u017A": 'z',
      "\u017C": 'z',
      "\u017E": 'z',
      "\u0132": 'IJ',
      "\u0133": 'ij',
      "\u0152": 'Oe',
      "\u0153": 'oe',
      "\u0149": "'n",
      "\u017F": 's'
    };
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    var htmlUnescapes = {
      '&amp;': '&',
      '&lt;': '<',
      '&gt;': '>',
      '&quot;': '"',
      '&#39;': "'"
    };
    var stringEscapes = {
      '\\': '\\',
      "'": "'",
      '\n': 'n',
      '\r': 'r',
      "\u2028": 'u2028',
      "\u2029": 'u2029'
    };
    var freeParseFloat = parseFloat,
        freeParseInt = parseInt;
    var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function('return this')();
    var freeExports =  exports && !exports.nodeType && exports;
    var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;

    var nodeUtil = function () {
      try {
        var types = freeModule && freeModule.require && freeModule.require('util').types;

        if (types) {
          return types;
        }

        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();

    var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
        nodeIsDate = nodeUtil && nodeUtil.isDate,
        nodeIsMap = nodeUtil && nodeUtil.isMap,
        nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
        nodeIsSet = nodeUtil && nodeUtil.isSet,
        nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);

        case 1:
          return func.call(thisArg, args[0]);

        case 2:
          return func.call(thisArg, args[0], args[1]);

        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }

      return func.apply(thisArg, args);
    }

    function arrayAggregator(array, setter, iteratee, accumulator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        var value = array[index];
        setter(accumulator, value, iteratee(value), array);
      }

      return accumulator;
    }

    function arrayEach(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }

      return array;
    }

    function arrayEachRight(array, iteratee) {
      var length = array == null ? 0 : array.length;

      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }

      return array;
    }

    function arrayEvery(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }

      return true;
    }

    function arrayFilter(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }

      return result;
    }

    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }

    function arrayIncludesWith(array, value, comparator) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }

      return false;
    }

    function arrayMap(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }

      return result;
    }

    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;

      while (++index < length) {
        array[offset + index] = values[index];
      }

      return array;
    }

    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
          length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[++index];
      }

      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }

      return accumulator;
    }

    function arrayReduceRight(array, iteratee, accumulator, initAccum) {
      var length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[--length];
      }

      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }

      return accumulator;
    }

    function arraySome(array, predicate) {
      var index = -1,
          length = array == null ? 0 : array.length;

      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }

      return false;
    }

    var asciiSize = baseProperty('length');

    function asciiToArray(string) {
      return string.split('');
    }

    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }

    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function (value, key, collection) {
        if (predicate(value, key, collection)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
          index = fromIndex + (fromRight ? 1 : -1);

      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }

      return -1;
    }

    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }

    function baseIndexOfWith(array, value, fromIndex, comparator) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (comparator(array[index], value)) {
          return index;
        }
      }

      return -1;
    }

    function baseIsNaN(value) {
      return value !== value;
    }

    function baseMean(array, iteratee) {
      var length = array == null ? 0 : array.length;
      return length ? baseSum(array, iteratee) / length : NAN;
    }

    function baseProperty(key) {
      return function (object) {
        return object == null ? undefined$1 : object[key];
      };
    }

    function basePropertyOf(object) {
      return function (key) {
        return object == null ? undefined$1 : object[key];
      };
    }

    function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
      eachFunc(collection, function (value, index, collection) {
        accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }

    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);

      while (length--) {
        array[length] = array[length].value;
      }

      return array;
    }

    function baseSum(array, iteratee) {
      var result,
          index = -1,
          length = array.length;

      while (++index < length) {
        var current = iteratee(array[index]);

        if (current !== undefined$1) {
          result = result === undefined$1 ? current : result + current;
        }
      }

      return result;
    }

    function baseTimes(n, iteratee) {
      var index = -1,
          result = Array(n);

      while (++index < n) {
        result[index] = iteratee(index);
      }

      return result;
    }

    function baseToPairs(object, props) {
      return arrayMap(props, function (key) {
        return [key, object[key]];
      });
    }

    function baseUnary(func) {
      return function (value) {
        return func(value);
      };
    }

    function baseValues(object, props) {
      return arrayMap(props, function (key) {
        return object[key];
      });
    }

    function cacheHas(cache, key) {
      return cache.has(key);
    }

    function charsStartIndex(strSymbols, chrSymbols) {
      var index = -1,
          length = strSymbols.length;

      while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

      return index;
    }

    function charsEndIndex(strSymbols, chrSymbols) {
      var index = strSymbols.length;

      while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}

      return index;
    }

    function countHolders(array, placeholder) {
      var length = array.length,
          result = 0;

      while (length--) {
        if (array[length] === placeholder) {
          ++result;
        }
      }

      return result;
    }

    var deburrLetter = basePropertyOf(deburredLetters);
    var escapeHtmlChar = basePropertyOf(htmlEscapes);

    function escapeStringChar(chr) {
      return '\\' + stringEscapes[chr];
    }

    function getValue(object, key) {
      return object == null ? undefined$1 : object[key];
    }

    function hasUnicode(string) {
      return reHasUnicode.test(string);
    }

    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }

    function iteratorToArray(iterator) {
      var data,
          result = [];

      while (!(data = iterator.next()).done) {
        result.push(data.value);
      }

      return result;
    }

    function mapToArray(map) {
      var index = -1,
          result = Array(map.size);
      map.forEach(function (value, key) {
        result[++index] = [key, value];
      });
      return result;
    }

    function overArg(func, transform) {
      return function (arg) {
        return func(transform(arg));
      };
    }

    function replaceHolders(array, placeholder) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }

      return result;
    }

    function setToArray(set) {
      var index = -1,
          result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = value;
      });
      return result;
    }

    function setToPairs(set) {
      var index = -1,
          result = Array(set.size);
      set.forEach(function (value) {
        result[++index] = [value, value];
      });
      return result;
    }

    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }

      return -1;
    }

    function strictLastIndexOf(array, value, fromIndex) {
      var index = fromIndex + 1;

      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }

      return index;
    }

    function stringSize(string) {
      return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
    }

    function stringToArray(string) {
      return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
    }

    var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

    function unicodeSize(string) {
      var result = reUnicode.lastIndex = 0;

      while (reUnicode.test(string)) {
        ++result;
      }

      return result;
    }

    function unicodeToArray(string) {
      return string.match(reUnicode) || [];
    }

    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }

    var runInContext = function runInContext(context) {
      context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
      var Array = context.Array,
          Date = context.Date,
          Error = context.Error,
          Function = context.Function,
          Math = context.Math,
          Object = context.Object,
          RegExp = context.RegExp,
          String = context.String,
          TypeError = context.TypeError;
      var arrayProto = Array.prototype,
          funcProto = Function.prototype,
          objectProto = Object.prototype;
      var coreJsData = context['__core-js_shared__'];
      var funcToString = funcProto.toString;
      var hasOwnProperty = objectProto.hasOwnProperty;
      var idCounter = 0;

      var maskSrcKey = function () {
        var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
        return uid ? 'Symbol(src)_1.' + uid : '';
      }();

      var nativeObjectToString = objectProto.toString;
      var objectCtorString = funcToString.call(Object);
      var oldDash = root._;
      var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
      var Buffer = moduleExports ? context.Buffer : undefined$1,
          Symbol = context.Symbol,
          Uint8Array = context.Uint8Array,
          allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined$1,
          getPrototype = overArg(Object.getPrototypeOf, Object),
          objectCreate = Object.create,
          propertyIsEnumerable = objectProto.propertyIsEnumerable,
          splice = arrayProto.splice,
          spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined$1,
          symIterator = Symbol ? Symbol.iterator : undefined$1,
          symToStringTag = Symbol ? Symbol.toStringTag : undefined$1;

      var defineProperty = function () {
        try {
          var func = getNative(Object, 'defineProperty');
          func({}, '', {});
          return func;
        } catch (e) {}
      }();

      var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
          ctxNow = Date && Date.now !== root.Date.now && Date.now,
          ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
      var nativeCeil = Math.ceil,
          nativeFloor = Math.floor,
          nativeGetSymbols = Object.getOwnPropertySymbols,
          nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined$1,
          nativeIsFinite = context.isFinite,
          nativeJoin = arrayProto.join,
          nativeKeys = overArg(Object.keys, Object),
          nativeMax = Math.max,
          nativeMin = Math.min,
          nativeNow = Date.now,
          nativeParseInt = context.parseInt,
          nativeRandom = Math.random,
          nativeReverse = arrayProto.reverse;
      var DataView = getNative(context, 'DataView'),
          Map = getNative(context, 'Map'),
          Promise = getNative(context, 'Promise'),
          Set = getNative(context, 'Set'),
          WeakMap = getNative(context, 'WeakMap'),
          nativeCreate = getNative(Object, 'create');
      var metaMap = WeakMap && new WeakMap();
      var realNames = {};
      var dataViewCtorString = toSource(DataView),
          mapCtorString = toSource(Map),
          promiseCtorString = toSource(Promise),
          setCtorString = toSource(Set),
          weakMapCtorString = toSource(WeakMap);
      var symbolProto = Symbol ? Symbol.prototype : undefined$1,
          symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$1,
          symbolToString = symbolProto ? symbolProto.toString : undefined$1;

      function lodash(value) {
        if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
          if (value instanceof LodashWrapper) {
            return value;
          }

          if (hasOwnProperty.call(value, '__wrapped__')) {
            return wrapperClone(value);
          }
        }

        return new LodashWrapper(value);
      }

      var baseCreate = function () {
        function object() {}

        return function (proto) {
          if (!isObject(proto)) {
            return {};
          }

          if (objectCreate) {
            return objectCreate(proto);
          }

          object.prototype = proto;
          var result = new object();
          object.prototype = undefined$1;
          return result;
        };
      }();

      function baseLodash() {}

      function LodashWrapper(value, chainAll) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__chain__ = !!chainAll;
        this.__index__ = 0;
        this.__values__ = undefined$1;
      }

      lodash.templateSettings = {
        'escape': reEscape,
        'evaluate': reEvaluate,
        'interpolate': reInterpolate,
        'variable': '',
        'imports': {
          '_': lodash
        }
      };
      lodash.prototype = baseLodash.prototype;
      lodash.prototype.constructor = lodash;
      LodashWrapper.prototype = baseCreate(baseLodash.prototype);
      LodashWrapper.prototype.constructor = LodashWrapper;

      function LazyWrapper(value) {
        this.__wrapped__ = value;
        this.__actions__ = [];
        this.__dir__ = 1;
        this.__filtered__ = false;
        this.__iteratees__ = [];
        this.__takeCount__ = MAX_ARRAY_LENGTH;
        this.__views__ = [];
      }

      function lazyClone() {
        var result = new LazyWrapper(this.__wrapped__);
        result.__actions__ = copyArray(this.__actions__);
        result.__dir__ = this.__dir__;
        result.__filtered__ = this.__filtered__;
        result.__iteratees__ = copyArray(this.__iteratees__);
        result.__takeCount__ = this.__takeCount__;
        result.__views__ = copyArray(this.__views__);
        return result;
      }

      function lazyReverse() {
        if (this.__filtered__) {
          var result = new LazyWrapper(this);
          result.__dir__ = -1;
          result.__filtered__ = true;
        } else {
          result = this.clone();
          result.__dir__ *= -1;
        }

        return result;
      }

      function lazyValue() {
        var array = this.__wrapped__.value(),
            dir = this.__dir__,
            isArr = isArray(array),
            isRight = dir < 0,
            arrLength = isArr ? array.length : 0,
            view = getView(0, arrLength, this.__views__),
            start = view.start,
            end = view.end,
            length = end - start,
            index = isRight ? end : start - 1,
            iteratees = this.__iteratees__,
            iterLength = iteratees.length,
            resIndex = 0,
            takeCount = nativeMin(length, this.__takeCount__);

        if (!isArr || !isRight && arrLength == length && takeCount == length) {
          return baseWrapperValue(array, this.__actions__);
        }

        var result = [];

        outer: while (length-- && resIndex < takeCount) {
          index += dir;
          var iterIndex = -1,
              value = array[index];

          while (++iterIndex < iterLength) {
            var data = iteratees[iterIndex],
                iteratee = data.iteratee,
                type = data.type,
                computed = iteratee(value);

            if (type == LAZY_MAP_FLAG) {
              value = computed;
            } else if (!computed) {
              if (type == LAZY_FILTER_FLAG) {
                continue outer;
              } else {
                break outer;
              }
            }
          }

          result[resIndex++] = value;
        }

        return result;
      }

      LazyWrapper.prototype = baseCreate(baseLodash.prototype);
      LazyWrapper.prototype.constructor = LazyWrapper;

      function Hash(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function hashClear() {
        this.__data__ = nativeCreate ? nativeCreate(null) : {};
        this.size = 0;
      }

      function hashDelete(key) {
        var result = this.has(key) && delete this.__data__[key];
        this.size -= result ? 1 : 0;
        return result;
      }

      function hashGet(key) {
        var data = this.__data__;

        if (nativeCreate) {
          var result = data[key];
          return result === HASH_UNDEFINED ? undefined$1 : result;
        }

        return hasOwnProperty.call(data, key) ? data[key] : undefined$1;
      }

      function hashHas(key) {
        var data = this.__data__;
        return nativeCreate ? data[key] !== undefined$1 : hasOwnProperty.call(data, key);
      }

      function hashSet(key, value) {
        var data = this.__data__;
        this.size += this.has(key) ? 0 : 1;
        data[key] = nativeCreate && value === undefined$1 ? HASH_UNDEFINED : value;
        return this;
      }

      Hash.prototype.clear = hashClear;
      Hash.prototype['delete'] = hashDelete;
      Hash.prototype.get = hashGet;
      Hash.prototype.has = hashHas;
      Hash.prototype.set = hashSet;

      function ListCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function listCacheClear() {
        this.__data__ = [];
        this.size = 0;
      }

      function listCacheDelete(key) {
        var data = this.__data__,
            index = assocIndexOf(data, key);

        if (index < 0) {
          return false;
        }

        var lastIndex = data.length - 1;

        if (index == lastIndex) {
          data.pop();
        } else {
          splice.call(data, index, 1);
        }

        --this.size;
        return true;
      }

      function listCacheGet(key) {
        var data = this.__data__,
            index = assocIndexOf(data, key);
        return index < 0 ? undefined$1 : data[index][1];
      }

      function listCacheHas(key) {
        return assocIndexOf(this.__data__, key) > -1;
      }

      function listCacheSet(key, value) {
        var data = this.__data__,
            index = assocIndexOf(data, key);

        if (index < 0) {
          ++this.size;
          data.push([key, value]);
        } else {
          data[index][1] = value;
        }

        return this;
      }

      ListCache.prototype.clear = listCacheClear;
      ListCache.prototype['delete'] = listCacheDelete;
      ListCache.prototype.get = listCacheGet;
      ListCache.prototype.has = listCacheHas;
      ListCache.prototype.set = listCacheSet;

      function MapCache(entries) {
        var index = -1,
            length = entries == null ? 0 : entries.length;
        this.clear();

        while (++index < length) {
          var entry = entries[index];
          this.set(entry[0], entry[1]);
        }
      }

      function mapCacheClear() {
        this.size = 0;
        this.__data__ = {
          'hash': new Hash(),
          'map': new (Map || ListCache)(),
          'string': new Hash()
        };
      }

      function mapCacheDelete(key) {
        var result = getMapData(this, key)['delete'](key);
        this.size -= result ? 1 : 0;
        return result;
      }

      function mapCacheGet(key) {
        return getMapData(this, key).get(key);
      }

      function mapCacheHas(key) {
        return getMapData(this, key).has(key);
      }

      function mapCacheSet(key, value) {
        var data = getMapData(this, key),
            size = data.size;
        data.set(key, value);
        this.size += data.size == size ? 0 : 1;
        return this;
      }

      MapCache.prototype.clear = mapCacheClear;
      MapCache.prototype['delete'] = mapCacheDelete;
      MapCache.prototype.get = mapCacheGet;
      MapCache.prototype.has = mapCacheHas;
      MapCache.prototype.set = mapCacheSet;

      function SetCache(values) {
        var index = -1,
            length = values == null ? 0 : values.length;
        this.__data__ = new MapCache();

        while (++index < length) {
          this.add(values[index]);
        }
      }

      function setCacheAdd(value) {
        this.__data__.set(value, HASH_UNDEFINED);

        return this;
      }

      function setCacheHas(value) {
        return this.__data__.has(value);
      }

      SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
      SetCache.prototype.has = setCacheHas;

      function Stack(entries) {
        var data = this.__data__ = new ListCache(entries);
        this.size = data.size;
      }

      function stackClear() {
        this.__data__ = new ListCache();
        this.size = 0;
      }

      function stackDelete(key) {
        var data = this.__data__,
            result = data['delete'](key);
        this.size = data.size;
        return result;
      }

      function stackGet(key) {
        return this.__data__.get(key);
      }

      function stackHas(key) {
        return this.__data__.has(key);
      }

      function stackSet(key, value) {
        var data = this.__data__;

        if (data instanceof ListCache) {
          var pairs = data.__data__;

          if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
            pairs.push([key, value]);
            this.size = ++data.size;
            return this;
          }

          data = this.__data__ = new MapCache(pairs);
        }

        data.set(key, value);
        this.size = data.size;
        return this;
      }

      Stack.prototype.clear = stackClear;
      Stack.prototype['delete'] = stackDelete;
      Stack.prototype.get = stackGet;
      Stack.prototype.has = stackHas;
      Stack.prototype.set = stackSet;

      function arrayLikeKeys(value, inherited) {
        var isArr = isArray(value),
            isArg = !isArr && isArguments(value),
            isBuff = !isArr && !isArg && isBuffer(value),
            isType = !isArr && !isArg && !isBuff && isTypedArray(value),
            skipIndexes = isArr || isArg || isBuff || isType,
            result = skipIndexes ? baseTimes(value.length, String) : [],
            length = result.length;

        for (var key in value) {
          if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isBuff && (key == 'offset' || key == 'parent') || isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || isIndex(key, length)))) {
            result.push(key);
          }
        }

        return result;
      }

      function arraySample(array) {
        var length = array.length;
        return length ? array[baseRandom(0, length - 1)] : undefined$1;
      }

      function arraySampleSize(array, n) {
        return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
      }

      function arrayShuffle(array) {
        return shuffleSelf(copyArray(array));
      }

      function assignMergeValue(object, key, value) {
        if (value !== undefined$1 && !eq(object[key], value) || value === undefined$1 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assignValue(object, key, value) {
        var objValue = object[key];

        if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined$1 && !(key in object)) {
          baseAssignValue(object, key, value);
        }
      }

      function assocIndexOf(array, key) {
        var length = array.length;

        while (length--) {
          if (eq(array[length][0], key)) {
            return length;
          }
        }

        return -1;
      }

      function baseAggregator(collection, setter, iteratee, accumulator) {
        baseEach(collection, function (value, key, collection) {
          setter(accumulator, value, iteratee(value), collection);
        });
        return accumulator;
      }

      function baseAssign(object, source) {
        return object && copyObject(source, keys(source), object);
      }

      function baseAssignIn(object, source) {
        return object && copyObject(source, keysIn(source), object);
      }

      function baseAssignValue(object, key, value) {
        if (key == '__proto__' && defineProperty) {
          defineProperty(object, key, {
            'configurable': true,
            'enumerable': true,
            'value': value,
            'writable': true
          });
        } else {
          object[key] = value;
        }
      }

      function baseAt(object, paths) {
        var index = -1,
            length = paths.length,
            result = Array(length),
            skip = object == null;

        while (++index < length) {
          result[index] = skip ? undefined$1 : get(object, paths[index]);
        }

        return result;
      }

      function baseClamp(number, lower, upper) {
        if (number === number) {
          if (upper !== undefined$1) {
            number = number <= upper ? number : upper;
          }

          if (lower !== undefined$1) {
            number = number >= lower ? number : lower;
          }
        }

        return number;
      }

      function baseClone(value, bitmask, customizer, key, object, stack) {
        var result,
            isDeep = bitmask & CLONE_DEEP_FLAG,
            isFlat = bitmask & CLONE_FLAT_FLAG,
            isFull = bitmask & CLONE_SYMBOLS_FLAG;

        if (customizer) {
          result = object ? customizer(value, key, object, stack) : customizer(value);
        }

        if (result !== undefined$1) {
          return result;
        }

        if (!isObject(value)) {
          return value;
        }

        var isArr = isArray(value);

        if (isArr) {
          result = initCloneArray(value);

          if (!isDeep) {
            return copyArray(value, result);
          }
        } else {
          var tag = getTag(value),
              isFunc = tag == funcTag || tag == genTag;

          if (isBuffer(value)) {
            return cloneBuffer(value, isDeep);
          }

          if (tag == objectTag || tag == argsTag || isFunc && !object) {
            result = isFlat || isFunc ? {} : initCloneObject(value);

            if (!isDeep) {
              return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
            }
          } else {
            if (!cloneableTags[tag]) {
              return object ? value : {};
            }

            result = initCloneByTag(value, tag, isDeep);
          }
        }

        stack || (stack = new Stack());
        var stacked = stack.get(value);

        if (stacked) {
          return stacked;
        }

        stack.set(value, result);

        if (isSet(value)) {
          value.forEach(function (subValue) {
            result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
          });
        } else if (isMap(value)) {
          value.forEach(function (subValue, key) {
            result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
          });
        }

        var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
        var props = isArr ? undefined$1 : keysFunc(value);
        arrayEach(props || value, function (subValue, key) {
          if (props) {
            key = subValue;
            subValue = value[key];
          }

          assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
        return result;
      }

      function baseConforms(source) {
        var props = keys(source);
        return function (object) {
          return baseConformsTo(object, source, props);
        };
      }

      function baseConformsTo(object, source, props) {
        var length = props.length;

        if (object == null) {
          return !length;
        }

        object = Object(object);

        while (length--) {
          var key = props[length],
              predicate = source[key],
              value = object[key];

          if (value === undefined$1 && !(key in object) || !predicate(value)) {
            return false;
          }
        }

        return true;
      }

      function baseDelay(func, wait, args) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return setTimeout(function () {
          func.apply(undefined$1, args);
        }, wait);
      }

      function baseDifference(array, values, iteratee, comparator) {
        var index = -1,
            includes = arrayIncludes,
            isCommon = true,
            length = array.length,
            result = [],
            valuesLength = values.length;

        if (!length) {
          return result;
        }

        if (iteratee) {
          values = arrayMap(values, baseUnary(iteratee));
        }

        if (comparator) {
          includes = arrayIncludesWith;
          isCommon = false;
        } else if (values.length >= LARGE_ARRAY_SIZE) {
          includes = cacheHas;
          isCommon = false;
          values = new SetCache(values);
        }

        outer: while (++index < length) {
          var value = array[index],
              computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;

          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;

            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }

            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }

        return result;
      }

      var baseEach = createBaseEach(baseForOwn);
      var baseEachRight = createBaseEach(baseForOwnRight, true);

      function baseEvery(collection, predicate) {
        var result = true;
        baseEach(collection, function (value, index, collection) {
          result = !!predicate(value, index, collection);
          return result;
        });
        return result;
      }

      function baseExtremum(array, iteratee, comparator) {
        var index = -1,
            length = array.length;

        while (++index < length) {
          var value = array[index],
              current = iteratee(value);

          if (current != null && (computed === undefined$1 ? current === current && !isSymbol(current) : comparator(current, computed))) {
            var computed = current,
                result = value;
          }
        }

        return result;
      }

      function baseFill(array, value, start, end) {
        var length = array.length;
        start = toInteger(start);

        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }

        end = end === undefined$1 || end > length ? length : toInteger(end);

        if (end < 0) {
          end += length;
        }

        end = start > end ? 0 : toLength(end);

        while (start < end) {
          array[start++] = value;
        }

        return array;
      }

      function baseFilter(collection, predicate) {
        var result = [];
        baseEach(collection, function (value, index, collection) {
          if (predicate(value, index, collection)) {
            result.push(value);
          }
        });
        return result;
      }

      function baseFlatten(array, depth, predicate, isStrict, result) {
        var index = -1,
            length = array.length;
        predicate || (predicate = isFlattenable);
        result || (result = []);

        while (++index < length) {
          var value = array[index];

          if (depth > 0 && predicate(value)) {
            if (depth > 1) {
              baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
              arrayPush(result, value);
            }
          } else if (!isStrict) {
            result[result.length] = value;
          }
        }

        return result;
      }

      var baseFor = createBaseFor();
      var baseForRight = createBaseFor(true);

      function baseForOwn(object, iteratee) {
        return object && baseFor(object, iteratee, keys);
      }

      function baseForOwnRight(object, iteratee) {
        return object && baseForRight(object, iteratee, keys);
      }

      function baseFunctions(object, props) {
        return arrayFilter(props, function (key) {
          return isFunction(object[key]);
        });
      }

      function baseGet(object, path) {
        path = castPath(path, object);
        var index = 0,
            length = path.length;

        while (object != null && index < length) {
          object = object[toKey(path[index++])];
        }

        return index && index == length ? object : undefined$1;
      }

      function baseGetAllKeys(object, keysFunc, symbolsFunc) {
        var result = keysFunc(object);
        return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
      }

      function baseGetTag(value) {
        if (value == null) {
          return value === undefined$1 ? undefinedTag : nullTag;
        }

        return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
      }

      function baseGt(value, other) {
        return value > other;
      }

      function baseHas(object, key) {
        return object != null && hasOwnProperty.call(object, key);
      }

      function baseHasIn(object, key) {
        return object != null && key in Object(object);
      }

      function baseInRange(number, start, end) {
        return number >= nativeMin(start, end) && number < nativeMax(start, end);
      }

      function baseIntersection(arrays, iteratee, comparator) {
        var includes = comparator ? arrayIncludesWith : arrayIncludes,
            length = arrays[0].length,
            othLength = arrays.length,
            othIndex = othLength,
            caches = Array(othLength),
            maxLength = Infinity,
            result = [];

        while (othIndex--) {
          var array = arrays[othIndex];

          if (othIndex && iteratee) {
            array = arrayMap(array, baseUnary(iteratee));
          }

          maxLength = nativeMin(array.length, maxLength);
          caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$1;
        }

        array = arrays[0];
        var index = -1,
            seen = caches[0];

        outer: while (++index < length && result.length < maxLength) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;

          if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
            othIndex = othLength;

            while (--othIndex) {
              var cache = caches[othIndex];

              if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
                continue outer;
              }
            }

            if (seen) {
              seen.push(computed);
            }

            result.push(value);
          }
        }

        return result;
      }

      function baseInverter(object, setter, iteratee, accumulator) {
        baseForOwn(object, function (value, key, object) {
          setter(accumulator, iteratee(value), key, object);
        });
        return accumulator;
      }

      function baseInvoke(object, path, args) {
        path = castPath(path, object);
        object = parent(object, path);
        var func = object == null ? object : object[toKey(last(path))];
        return func == null ? undefined$1 : apply(func, object, args);
      }

      function baseIsArguments(value) {
        return isObjectLike(value) && baseGetTag(value) == argsTag;
      }

      function baseIsArrayBuffer(value) {
        return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
      }

      function baseIsDate(value) {
        return isObjectLike(value) && baseGetTag(value) == dateTag;
      }

      function baseIsEqual(value, other, bitmask, customizer, stack) {
        if (value === other) {
          return true;
        }

        if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
          return value !== value && other !== other;
        }

        return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
      }

      function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
        var objIsArr = isArray(object),
            othIsArr = isArray(other),
            objTag = objIsArr ? arrayTag : getTag(object),
            othTag = othIsArr ? arrayTag : getTag(other);
        objTag = objTag == argsTag ? objectTag : objTag;
        othTag = othTag == argsTag ? objectTag : othTag;
        var objIsObj = objTag == objectTag,
            othIsObj = othTag == objectTag,
            isSameTag = objTag == othTag;

        if (isSameTag && isBuffer(object)) {
          if (!isBuffer(other)) {
            return false;
          }

          objIsArr = true;
          objIsObj = false;
        }

        if (isSameTag && !objIsObj) {
          stack || (stack = new Stack());
          return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
        }

        if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
          var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
              othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

          if (objIsWrapped || othIsWrapped) {
            var objUnwrapped = objIsWrapped ? object.value() : object,
                othUnwrapped = othIsWrapped ? other.value() : other;
            stack || (stack = new Stack());
            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
          }
        }

        if (!isSameTag) {
          return false;
        }

        stack || (stack = new Stack());
        return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
      }

      function baseIsMap(value) {
        return isObjectLike(value) && getTag(value) == mapTag;
      }

      function baseIsMatch(object, source, matchData, customizer) {
        var index = matchData.length,
            length = index,
            noCustomizer = !customizer;

        if (object == null) {
          return !length;
        }

        object = Object(object);

        while (index--) {
          var data = matchData[index];

          if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
            return false;
          }
        }

        while (++index < length) {
          data = matchData[index];
          var key = data[0],
              objValue = object[key],
              srcValue = data[1];

          if (noCustomizer && data[2]) {
            if (objValue === undefined$1 && !(key in object)) {
              return false;
            }
          } else {
            var stack = new Stack();

            if (customizer) {
              var result = customizer(objValue, srcValue, key, object, source, stack);
            }

            if (!(result === undefined$1 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
              return false;
            }
          }
        }

        return true;
      }

      function baseIsNative(value) {
        if (!isObject(value) || isMasked(value)) {
          return false;
        }

        var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
        return pattern.test(toSource(value));
      }

      function baseIsRegExp(value) {
        return isObjectLike(value) && baseGetTag(value) == regexpTag;
      }

      function baseIsSet(value) {
        return isObjectLike(value) && getTag(value) == setTag;
      }

      function baseIsTypedArray(value) {
        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
      }

      function baseIteratee(value) {
        if (typeof value == 'function') {
          return value;
        }

        if (value == null) {
          return identity;
        }

        if (typeof value == 'object') {
          return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
        }

        return property(value);
      }

      function baseKeys(object) {
        if (!isPrototype(object)) {
          return nativeKeys(object);
        }

        var result = [];

        for (var key in Object(object)) {
          if (hasOwnProperty.call(object, key) && key != 'constructor') {
            result.push(key);
          }
        }

        return result;
      }

      function baseKeysIn(object) {
        if (!isObject(object)) {
          return nativeKeysIn(object);
        }

        var isProto = isPrototype(object),
            result = [];

        for (var key in object) {
          if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
            result.push(key);
          }
        }

        return result;
      }

      function baseLt(value, other) {
        return value < other;
      }

      function baseMap(collection, iteratee) {
        var index = -1,
            result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value, key, collection) {
          result[++index] = iteratee(value, key, collection);
        });
        return result;
      }

      function baseMatches(source) {
        var matchData = getMatchData(source);

        if (matchData.length == 1 && matchData[0][2]) {
          return matchesStrictComparable(matchData[0][0], matchData[0][1]);
        }

        return function (object) {
          return object === source || baseIsMatch(object, source, matchData);
        };
      }

      function baseMatchesProperty(path, srcValue) {
        if (isKey(path) && isStrictComparable(srcValue)) {
          return matchesStrictComparable(toKey(path), srcValue);
        }

        return function (object) {
          var objValue = get(object, path);
          return objValue === undefined$1 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
        };
      }

      function baseMerge(object, source, srcIndex, customizer, stack) {
        if (object === source) {
          return;
        }

        baseFor(source, function (srcValue, key) {
          stack || (stack = new Stack());

          if (isObject(srcValue)) {
            baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
          } else {
            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined$1;

            if (newValue === undefined$1) {
              newValue = srcValue;
            }

            assignMergeValue(object, key, newValue);
          }
        }, keysIn);
      }

      function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
        var objValue = safeGet(object, key),
            srcValue = safeGet(source, key),
            stacked = stack.get(srcValue);

        if (stacked) {
          assignMergeValue(object, key, stacked);
          return;
        }

        var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined$1;
        var isCommon = newValue === undefined$1;

        if (isCommon) {
          var isArr = isArray(srcValue),
              isBuff = !isArr && isBuffer(srcValue),
              isTyped = !isArr && !isBuff && isTypedArray(srcValue);
          newValue = srcValue;

          if (isArr || isBuff || isTyped) {
            if (isArray(objValue)) {
              newValue = objValue;
            } else if (isArrayLikeObject(objValue)) {
              newValue = copyArray(objValue);
            } else if (isBuff) {
              isCommon = false;
              newValue = cloneBuffer(srcValue, true);
            } else if (isTyped) {
              isCommon = false;
              newValue = cloneTypedArray(srcValue, true);
            } else {
              newValue = [];
            }
          } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
            newValue = objValue;

            if (isArguments(objValue)) {
              newValue = toPlainObject(objValue);
            } else if (!isObject(objValue) || isFunction(objValue)) {
              newValue = initCloneObject(srcValue);
            }
          } else {
            isCommon = false;
          }
        }

        if (isCommon) {
          stack.set(srcValue, newValue);
          mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
          stack['delete'](srcValue);
        }

        assignMergeValue(object, key, newValue);
      }

      function baseNth(array, n) {
        var length = array.length;

        if (!length) {
          return;
        }

        n += n < 0 ? length : 0;
        return isIndex(n, length) ? array[n] : undefined$1;
      }

      function baseOrderBy(collection, iteratees, orders) {
        if (iteratees.length) {
          iteratees = arrayMap(iteratees, function (iteratee) {
            if (isArray(iteratee)) {
              return function (value) {
                return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
              };
            }

            return iteratee;
          });
        } else {
          iteratees = [identity];
        }

        var index = -1;
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        var result = baseMap(collection, function (value, key, collection) {
          var criteria = arrayMap(iteratees, function (iteratee) {
            return iteratee(value);
          });
          return {
            'criteria': criteria,
            'index': ++index,
            'value': value
          };
        });
        return baseSortBy(result, function (object, other) {
          return compareMultiple(object, other, orders);
        });
      }

      function basePick(object, paths) {
        return basePickBy(object, paths, function (value, path) {
          return hasIn(object, path);
        });
      }

      function basePickBy(object, paths, predicate) {
        var index = -1,
            length = paths.length,
            result = {};

        while (++index < length) {
          var path = paths[index],
              value = baseGet(object, path);

          if (predicate(value, path)) {
            baseSet(result, castPath(path, object), value);
          }
        }

        return result;
      }

      function basePropertyDeep(path) {
        return function (object) {
          return baseGet(object, path);
        };
      }

      function basePullAll(array, values, iteratee, comparator) {
        var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
            index = -1,
            length = values.length,
            seen = array;

        if (array === values) {
          values = copyArray(values);
        }

        if (iteratee) {
          seen = arrayMap(array, baseUnary(iteratee));
        }

        while (++index < length) {
          var fromIndex = 0,
              value = values[index],
              computed = iteratee ? iteratee(value) : value;

          while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
            if (seen !== array) {
              splice.call(seen, fromIndex, 1);
            }

            splice.call(array, fromIndex, 1);
          }
        }

        return array;
      }

      function basePullAt(array, indexes) {
        var length = array ? indexes.length : 0,
            lastIndex = length - 1;

        while (length--) {
          var index = indexes[length];

          if (length == lastIndex || index !== previous) {
            var previous = index;

            if (isIndex(index)) {
              splice.call(array, index, 1);
            } else {
              baseUnset(array, index);
            }
          }
        }

        return array;
      }

      function baseRandom(lower, upper) {
        return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
      }

      function baseRange(start, end, step, fromRight) {
        var index = -1,
            length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
            result = Array(length);

        while (length--) {
          result[fromRight ? length : ++index] = start;
          start += step;
        }

        return result;
      }

      function baseRepeat(string, n) {
        var result = '';

        if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
          return result;
        }

        do {
          if (n % 2) {
            result += string;
          }

          n = nativeFloor(n / 2);

          if (n) {
            string += string;
          }
        } while (n);

        return result;
      }

      function baseRest(func, start) {
        return setToString(overRest(func, start, identity), func + '');
      }

      function baseSample(collection) {
        return arraySample(values(collection));
      }

      function baseSampleSize(collection, n) {
        var array = values(collection);
        return shuffleSelf(array, baseClamp(n, 0, array.length));
      }

      function baseSet(object, path, value, customizer) {
        if (!isObject(object)) {
          return object;
        }

        path = castPath(path, object);
        var index = -1,
            length = path.length,
            lastIndex = length - 1,
            nested = object;

        while (nested != null && ++index < length) {
          var key = toKey(path[index]),
              newValue = value;

          if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
            return object;
          }

          if (index != lastIndex) {
            var objValue = nested[key];
            newValue = customizer ? customizer(objValue, key, nested) : undefined$1;

            if (newValue === undefined$1) {
              newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
            }
          }

          assignValue(nested, key, newValue);
          nested = nested[key];
        }

        return object;
      }

      var baseSetData = !metaMap ? identity : function (func, data) {
        metaMap.set(func, data);
        return func;
      };
      var baseSetToString = !defineProperty ? identity : function (func, string) {
        return defineProperty(func, 'toString', {
          'configurable': true,
          'enumerable': false,
          'value': constant(string),
          'writable': true
        });
      };

      function baseShuffle(collection) {
        return shuffleSelf(values(collection));
      }

      function baseSlice(array, start, end) {
        var index = -1,
            length = array.length;

        if (start < 0) {
          start = -start > length ? 0 : length + start;
        }

        end = end > length ? length : end;

        if (end < 0) {
          end += length;
        }

        length = start > end ? 0 : end - start >>> 0;
        start >>>= 0;
        var result = Array(length);

        while (++index < length) {
          result[index] = array[index + start];
        }

        return result;
      }

      function baseSome(collection, predicate) {
        var result;
        baseEach(collection, function (value, index, collection) {
          result = predicate(value, index, collection);
          return !result;
        });
        return !!result;
      }

      function baseSortedIndex(array, value, retHighest) {
        var low = 0,
            high = array == null ? low : array.length;

        if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
          while (low < high) {
            var mid = low + high >>> 1,
                computed = array[mid];

            if (computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) {
              low = mid + 1;
            } else {
              high = mid;
            }
          }

          return high;
        }

        return baseSortedIndexBy(array, value, identity, retHighest);
      }

      function baseSortedIndexBy(array, value, iteratee, retHighest) {
        var low = 0,
            high = array == null ? 0 : array.length;

        if (high === 0) {
          return 0;
        }

        value = iteratee(value);
        var valIsNaN = value !== value,
            valIsNull = value === null,
            valIsSymbol = isSymbol(value),
            valIsUndefined = value === undefined$1;

        while (low < high) {
          var mid = nativeFloor((low + high) / 2),
              computed = iteratee(array[mid]),
              othIsDefined = computed !== undefined$1,
              othIsNull = computed === null,
              othIsReflexive = computed === computed,
              othIsSymbol = isSymbol(computed);

          if (valIsNaN) {
            var setLow = retHighest || othIsReflexive;
          } else if (valIsUndefined) {
            setLow = othIsReflexive && (retHighest || othIsDefined);
          } else if (valIsNull) {
            setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
          } else if (valIsSymbol) {
            setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
          } else if (othIsNull || othIsSymbol) {
            setLow = false;
          } else {
            setLow = retHighest ? computed <= value : computed < value;
          }

          if (setLow) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }

        return nativeMin(high, MAX_ARRAY_INDEX);
      }

      function baseSortedUniq(array, iteratee) {
        var index = -1,
            length = array.length,
            resIndex = 0,
            result = [];

        while (++index < length) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;

          if (!index || !eq(computed, seen)) {
            var seen = computed;
            result[resIndex++] = value === 0 ? 0 : value;
          }
        }

        return result;
      }

      function baseToNumber(value) {
        if (typeof value == 'number') {
          return value;
        }

        if (isSymbol(value)) {
          return NAN;
        }

        return +value;
      }

      function baseToString(value) {
        if (typeof value == 'string') {
          return value;
        }

        if (isArray(value)) {
          return arrayMap(value, baseToString) + '';
        }

        if (isSymbol(value)) {
          return symbolToString ? symbolToString.call(value) : '';
        }

        var result = value + '';
        return result == '0' && 1 / value == -INFINITY ? '-0' : result;
      }

      function baseUniq(array, iteratee, comparator) {
        var index = -1,
            includes = arrayIncludes,
            length = array.length,
            isCommon = true,
            result = [],
            seen = result;

        if (comparator) {
          isCommon = false;
          includes = arrayIncludesWith;
        } else if (length >= LARGE_ARRAY_SIZE) {
          var set = iteratee ? null : createSet(array);

          if (set) {
            return setToArray(set);
          }

          isCommon = false;
          includes = cacheHas;
          seen = new SetCache();
        } else {
          seen = iteratee ? [] : result;
        }

        outer: while (++index < length) {
          var value = array[index],
              computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;

          if (isCommon && computed === computed) {
            var seenIndex = seen.length;

            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }

            if (iteratee) {
              seen.push(computed);
            }

            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }

            result.push(value);
          }
        }

        return result;
      }

      function baseUnset(object, path) {
        path = castPath(path, object);
        object = parent(object, path);
        return object == null || delete object[toKey(last(path))];
      }

      function baseUpdate(object, path, updater, customizer) {
        return baseSet(object, path, updater(baseGet(object, path)), customizer);
      }

      function baseWhile(array, predicate, isDrop, fromRight) {
        var length = array.length,
            index = fromRight ? length : -1;

        while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

        return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
      }

      function baseWrapperValue(value, actions) {
        var result = value;

        if (result instanceof LazyWrapper) {
          result = result.value();
        }

        return arrayReduce(actions, function (result, action) {
          return action.func.apply(action.thisArg, arrayPush([result], action.args));
        }, result);
      }

      function baseXor(arrays, iteratee, comparator) {
        var length = arrays.length;

        if (length < 2) {
          return length ? baseUniq(arrays[0]) : [];
        }

        var index = -1,
            result = Array(length);

        while (++index < length) {
          var array = arrays[index],
              othIndex = -1;

          while (++othIndex < length) {
            if (othIndex != index) {
              result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
            }
          }
        }

        return baseUniq(baseFlatten(result, 1), iteratee, comparator);
      }

      function baseZipObject(props, values, assignFunc) {
        var index = -1,
            length = props.length,
            valsLength = values.length,
            result = {};

        while (++index < length) {
          var value = index < valsLength ? values[index] : undefined$1;
          assignFunc(result, props[index], value);
        }

        return result;
      }

      function castArrayLikeObject(value) {
        return isArrayLikeObject(value) ? value : [];
      }

      function castFunction(value) {
        return typeof value == 'function' ? value : identity;
      }

      function castPath(value, object) {
        if (isArray(value)) {
          return value;
        }

        return isKey(value, object) ? [value] : stringToPath(toString(value));
      }

      var castRest = baseRest;

      function castSlice(array, start, end) {
        var length = array.length;
        end = end === undefined$1 ? length : end;
        return !start && end >= length ? array : baseSlice(array, start, end);
      }

      var clearTimeout = ctxClearTimeout || function (id) {
        return root.clearTimeout(id);
      };

      function cloneBuffer(buffer, isDeep) {
        if (isDeep) {
          return buffer.slice();
        }

        var length = buffer.length,
            result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
        buffer.copy(result);
        return result;
      }

      function cloneArrayBuffer(arrayBuffer) {
        var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
        new Uint8Array(result).set(new Uint8Array(arrayBuffer));
        return result;
      }

      function cloneDataView(dataView, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
        return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
      }

      function cloneRegExp(regexp) {
        var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
        result.lastIndex = regexp.lastIndex;
        return result;
      }

      function cloneSymbol(symbol) {
        return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
      }

      function cloneTypedArray(typedArray, isDeep) {
        var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
        return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
      }

      function compareAscending(value, other) {
        if (value !== other) {
          var valIsDefined = value !== undefined$1,
              valIsNull = value === null,
              valIsReflexive = value === value,
              valIsSymbol = isSymbol(value);
          var othIsDefined = other !== undefined$1,
              othIsNull = other === null,
              othIsReflexive = other === other,
              othIsSymbol = isSymbol(other);

          if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
            return 1;
          }

          if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
            return -1;
          }
        }

        return 0;
      }

      function compareMultiple(object, other, orders) {
        var index = -1,
            objCriteria = object.criteria,
            othCriteria = other.criteria,
            length = objCriteria.length,
            ordersLength = orders.length;

        while (++index < length) {
          var result = compareAscending(objCriteria[index], othCriteria[index]);

          if (result) {
            if (index >= ordersLength) {
              return result;
            }

            var order = orders[index];
            return result * (order == 'desc' ? -1 : 1);
          }
        }

        return object.index - other.index;
      }

      function composeArgs(args, partials, holders, isCurried) {
        var argsIndex = -1,
            argsLength = args.length,
            holdersLength = holders.length,
            leftIndex = -1,
            leftLength = partials.length,
            rangeLength = nativeMax(argsLength - holdersLength, 0),
            result = Array(leftLength + rangeLength),
            isUncurried = !isCurried;

        while (++leftIndex < leftLength) {
          result[leftIndex] = partials[leftIndex];
        }

        while (++argsIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[holders[argsIndex]] = args[argsIndex];
          }
        }

        while (rangeLength--) {
          result[leftIndex++] = args[argsIndex++];
        }

        return result;
      }

      function composeArgsRight(args, partials, holders, isCurried) {
        var argsIndex = -1,
            argsLength = args.length,
            holdersIndex = -1,
            holdersLength = holders.length,
            rightIndex = -1,
            rightLength = partials.length,
            rangeLength = nativeMax(argsLength - holdersLength, 0),
            result = Array(rangeLength + rightLength),
            isUncurried = !isCurried;

        while (++argsIndex < rangeLength) {
          result[argsIndex] = args[argsIndex];
        }

        var offset = argsIndex;

        while (++rightIndex < rightLength) {
          result[offset + rightIndex] = partials[rightIndex];
        }

        while (++holdersIndex < holdersLength) {
          if (isUncurried || argsIndex < argsLength) {
            result[offset + holders[holdersIndex]] = args[argsIndex++];
          }
        }

        return result;
      }

      function copyArray(source, array) {
        var index = -1,
            length = source.length;
        array || (array = Array(length));

        while (++index < length) {
          array[index] = source[index];
        }

        return array;
      }

      function copyObject(source, props, object, customizer) {
        var isNew = !object;
        object || (object = {});
        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$1;

          if (newValue === undefined$1) {
            newValue = source[key];
          }

          if (isNew) {
            baseAssignValue(object, key, newValue);
          } else {
            assignValue(object, key, newValue);
          }
        }

        return object;
      }

      function copySymbols(source, object) {
        return copyObject(source, getSymbols(source), object);
      }

      function copySymbolsIn(source, object) {
        return copyObject(source, getSymbolsIn(source), object);
      }

      function createAggregator(setter, initializer) {
        return function (collection, iteratee) {
          var func = isArray(collection) ? arrayAggregator : baseAggregator,
              accumulator = initializer ? initializer() : {};
          return func(collection, setter, getIteratee(iteratee, 2), accumulator);
        };
      }

      function createAssigner(assigner) {
        return baseRest(function (object, sources) {
          var index = -1,
              length = sources.length,
              customizer = length > 1 ? sources[length - 1] : undefined$1,
              guard = length > 2 ? sources[2] : undefined$1;
          customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined$1;

          if (guard && isIterateeCall(sources[0], sources[1], guard)) {
            customizer = length < 3 ? undefined$1 : customizer;
            length = 1;
          }

          object = Object(object);

          while (++index < length) {
            var source = sources[index];

            if (source) {
              assigner(object, source, index, customizer);
            }
          }

          return object;
        });
      }

      function createBaseEach(eachFunc, fromRight) {
        return function (collection, iteratee) {
          if (collection == null) {
            return collection;
          }

          if (!isArrayLike(collection)) {
            return eachFunc(collection, iteratee);
          }

          var length = collection.length,
              index = fromRight ? length : -1,
              iterable = Object(collection);

          while (fromRight ? index-- : ++index < length) {
            if (iteratee(iterable[index], index, iterable) === false) {
              break;
            }
          }

          return collection;
        };
      }

      function createBaseFor(fromRight) {
        return function (object, iteratee, keysFunc) {
          var index = -1,
              iterable = Object(object),
              props = keysFunc(object),
              length = props.length;

          while (length--) {
            var key = props[fromRight ? length : ++index];

            if (iteratee(iterable[key], key, iterable) === false) {
              break;
            }
          }

          return object;
        };
      }

      function createBind(func, bitmask, thisArg) {
        var isBind = bitmask & WRAP_BIND_FLAG,
            Ctor = createCtor(func);

        function wrapper() {
          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return fn.apply(isBind ? thisArg : this, arguments);
        }

        return wrapper;
      }

      function createCaseFirst(methodName) {
        return function (string) {
          string = toString(string);
          var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined$1;
          var chr = strSymbols ? strSymbols[0] : string.charAt(0);
          var trailing = strSymbols ? castSlice(strSymbols, 1).join('') : string.slice(1);
          return chr[methodName]() + trailing;
        };
      }

      function createCompounder(callback) {
        return function (string) {
          return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
        };
      }

      function createCtor(Ctor) {
        return function () {
          var args = arguments;

          switch (args.length) {
            case 0:
              return new Ctor();

            case 1:
              return new Ctor(args[0]);

            case 2:
              return new Ctor(args[0], args[1]);

            case 3:
              return new Ctor(args[0], args[1], args[2]);

            case 4:
              return new Ctor(args[0], args[1], args[2], args[3]);

            case 5:
              return new Ctor(args[0], args[1], args[2], args[3], args[4]);

            case 6:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

            case 7:
              return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
          }

          var thisBinding = baseCreate(Ctor.prototype),
              result = Ctor.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        };
      }

      function createCurry(func, bitmask, arity) {
        var Ctor = createCtor(func);

        function wrapper() {
          var length = arguments.length,
              args = Array(length),
              index = length,
              placeholder = getHolder(wrapper);

          while (index--) {
            args[index] = arguments[index];
          }

          var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
          length -= holders.length;

          if (length < arity) {
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined$1, args, holders, undefined$1, undefined$1, arity - length);
          }

          var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
          return apply(fn, this, args);
        }

        return wrapper;
      }

      function createFind(findIndexFunc) {
        return function (collection, predicate, fromIndex) {
          var iterable = Object(collection);

          if (!isArrayLike(collection)) {
            var iteratee = getIteratee(predicate, 3);
            collection = keys(collection);

            predicate = function predicate(key) {
              return iteratee(iterable[key], key, iterable);
            };
          }

          var index = findIndexFunc(collection, predicate, fromIndex);
          return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined$1;
        };
      }

      function createFlow(fromRight) {
        return flatRest(function (funcs) {
          var length = funcs.length,
              index = length,
              prereq = LodashWrapper.prototype.thru;

          if (fromRight) {
            funcs.reverse();
          }

          while (index--) {
            var func = funcs[index];

            if (typeof func != 'function') {
              throw new TypeError(FUNC_ERROR_TEXT);
            }

            if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
              var wrapper = new LodashWrapper([], true);
            }
          }

          index = wrapper ? index : length;

          while (++index < length) {
            func = funcs[index];
            var funcName = getFuncName(func),
                data = funcName == 'wrapper' ? getData(func) : undefined$1;

            if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
              wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
            } else {
              wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
            }
          }

          return function () {
            var args = arguments,
                value = args[0];

            if (wrapper && args.length == 1 && isArray(value)) {
              return wrapper.plant(value).value();
            }

            var index = 0,
                result = length ? funcs[index].apply(this, args) : value;

            while (++index < length) {
              result = funcs[index].call(this, result);
            }

            return result;
          };
        });
      }

      function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
        var isAry = bitmask & WRAP_ARY_FLAG,
            isBind = bitmask & WRAP_BIND_FLAG,
            isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
            isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
            isFlip = bitmask & WRAP_FLIP_FLAG,
            Ctor = isBindKey ? undefined$1 : createCtor(func);

        function wrapper() {
          var length = arguments.length,
              args = Array(length),
              index = length;

          while (index--) {
            args[index] = arguments[index];
          }

          if (isCurried) {
            var placeholder = getHolder(wrapper),
                holdersCount = countHolders(args, placeholder);
          }

          if (partials) {
            args = composeArgs(args, partials, holders, isCurried);
          }

          if (partialsRight) {
            args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
          }

          length -= holdersCount;

          if (isCurried && length < arity) {
            var newHolders = replaceHolders(args, placeholder);
            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
          }

          var thisBinding = isBind ? thisArg : this,
              fn = isBindKey ? thisBinding[func] : func;
          length = args.length;

          if (argPos) {
            args = reorder(args, argPos);
          } else if (isFlip && length > 1) {
            args.reverse();
          }

          if (isAry && ary < length) {
            args.length = ary;
          }

          if (this && this !== root && this instanceof wrapper) {
            fn = Ctor || createCtor(fn);
          }

          return fn.apply(thisBinding, args);
        }

        return wrapper;
      }

      function createInverter(setter, toIteratee) {
        return function (object, iteratee) {
          return baseInverter(object, setter, toIteratee(iteratee), {});
        };
      }

      function createMathOperation(operator, defaultValue) {
        return function (value, other) {
          var result;

          if (value === undefined$1 && other === undefined$1) {
            return defaultValue;
          }

          if (value !== undefined$1) {
            result = value;
          }

          if (other !== undefined$1) {
            if (result === undefined$1) {
              return other;
            }

            if (typeof value == 'string' || typeof other == 'string') {
              value = baseToString(value);
              other = baseToString(other);
            } else {
              value = baseToNumber(value);
              other = baseToNumber(other);
            }

            result = operator(value, other);
          }

          return result;
        };
      }

      function createOver(arrayFunc) {
        return flatRest(function (iteratees) {
          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
          return baseRest(function (args) {
            var thisArg = this;
            return arrayFunc(iteratees, function (iteratee) {
              return apply(iteratee, thisArg, args);
            });
          });
        });
      }

      function createPadding(length, chars) {
        chars = chars === undefined$1 ? ' ' : baseToString(chars);
        var charsLength = chars.length;

        if (charsLength < 2) {
          return charsLength ? baseRepeat(chars, length) : chars;
        }

        var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
        return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join('') : result.slice(0, length);
      }

      function createPartial(func, bitmask, thisArg, partials) {
        var isBind = bitmask & WRAP_BIND_FLAG,
            Ctor = createCtor(func);

        function wrapper() {
          var argsIndex = -1,
              argsLength = arguments.length,
              leftIndex = -1,
              leftLength = partials.length,
              args = Array(leftLength + argsLength),
              fn = this && this !== root && this instanceof wrapper ? Ctor : func;

          while (++leftIndex < leftLength) {
            args[leftIndex] = partials[leftIndex];
          }

          while (argsLength--) {
            args[leftIndex++] = arguments[++argsIndex];
          }

          return apply(fn, isBind ? thisArg : this, args);
        }

        return wrapper;
      }

      function createRange(fromRight) {
        return function (start, end, step) {
          if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
            end = step = undefined$1;
          }

          start = toFinite(start);

          if (end === undefined$1) {
            end = start;
            start = 0;
          } else {
            end = toFinite(end);
          }

          step = step === undefined$1 ? start < end ? 1 : -1 : toFinite(step);
          return baseRange(start, end, step, fromRight);
        };
      }

      function createRelationalOperation(operator) {
        return function (value, other) {
          if (!(typeof value == 'string' && typeof other == 'string')) {
            value = toNumber(value);
            other = toNumber(other);
          }

          return operator(value, other);
        };
      }

      function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
        var isCurry = bitmask & WRAP_CURRY_FLAG,
            newHolders = isCurry ? holders : undefined$1,
            newHoldersRight = isCurry ? undefined$1 : holders,
            newPartials = isCurry ? partials : undefined$1,
            newPartialsRight = isCurry ? undefined$1 : partials;
        bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
        bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

        if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
          bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
        }

        var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
        var result = wrapFunc.apply(undefined$1, newData);

        if (isLaziable(func)) {
          setData(result, newData);
        }

        result.placeholder = placeholder;
        return setWrapToString(result, func, bitmask);
      }

      function createRound(methodName) {
        var func = Math[methodName];
        return function (number, precision) {
          number = toNumber(number);
          precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);

          if (precision && nativeIsFinite(number)) {
            var pair = (toString(number) + 'e').split('e'),
                value = func(pair[0] + 'e' + (+pair[1] + precision));
            pair = (toString(value) + 'e').split('e');
            return +(pair[0] + 'e' + (+pair[1] - precision));
          }

          return func(number);
        };
      }

      var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
        return new Set(values);
      };

      function createToPairs(keysFunc) {
        return function (object) {
          var tag = getTag(object);

          if (tag == mapTag) {
            return mapToArray(object);
          }

          if (tag == setTag) {
            return setToPairs(object);
          }

          return baseToPairs(object, keysFunc(object));
        };
      }

      function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
        var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;

        if (!isBindKey && typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        var length = partials ? partials.length : 0;

        if (!length) {
          bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
          partials = holders = undefined$1;
        }

        ary = ary === undefined$1 ? ary : nativeMax(toInteger(ary), 0);
        arity = arity === undefined$1 ? arity : toInteger(arity);
        length -= holders ? holders.length : 0;

        if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
          var partialsRight = partials,
              holdersRight = holders;
          partials = holders = undefined$1;
        }

        var data = isBindKey ? undefined$1 : getData(func);
        var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

        if (data) {
          mergeData(newData, data);
        }

        func = newData[0];
        bitmask = newData[1];
        thisArg = newData[2];
        partials = newData[3];
        holders = newData[4];
        arity = newData[9] = newData[9] === undefined$1 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

        if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
          bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
        }

        if (!bitmask || bitmask == WRAP_BIND_FLAG) {
          var result = createBind(func, bitmask, thisArg);
        } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
          result = createCurry(func, bitmask, arity);
        } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
          result = createPartial(func, bitmask, thisArg, partials);
        } else {
          result = createHybrid.apply(undefined$1, newData);
        }

        var setter = data ? baseSetData : setData;
        return setWrapToString(setter(result, newData), func, bitmask);
      }

      function customDefaultsAssignIn(objValue, srcValue, key, object) {
        if (objValue === undefined$1 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
          return srcValue;
        }

        return objValue;
      }

      function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
        if (isObject(objValue) && isObject(srcValue)) {
          stack.set(srcValue, objValue);
          baseMerge(objValue, srcValue, undefined$1, customDefaultsMerge, stack);
          stack['delete'](srcValue);
        }

        return objValue;
      }

      function customOmitClone(value) {
        return isPlainObject(value) ? undefined$1 : value;
      }

      function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
            arrLength = array.length,
            othLength = other.length;

        if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
          return false;
        }

        var arrStacked = stack.get(array);
        var othStacked = stack.get(other);

        if (arrStacked && othStacked) {
          return arrStacked == other && othStacked == array;
        }

        var index = -1,
            result = true,
            seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$1;
        stack.set(array, other);
        stack.set(other, array);

        while (++index < arrLength) {
          var arrValue = array[index],
              othValue = other[index];

          if (customizer) {
            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
          }

          if (compared !== undefined$1) {
            if (compared) {
              continue;
            }

            result = false;
            break;
          }

          if (seen) {
            if (!arraySome(other, function (othValue, othIndex) {
              if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
              result = false;
              break;
            }
          } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            result = false;
            break;
          }
        }

        stack['delete'](array);
        stack['delete'](other);
        return result;
      }

      function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
        switch (tag) {
          case dataViewTag:
            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
              return false;
            }

            object = object.buffer;
            other = other.buffer;

          case arrayBufferTag:
            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
              return false;
            }

            return true;

          case boolTag:
          case dateTag:
          case numberTag:
            return eq(+object, +other);

          case errorTag:
            return object.name == other.name && object.message == other.message;

          case regexpTag:
          case stringTag:
            return object == other + '';

          case mapTag:
            var convert = mapToArray;

          case setTag:
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
            convert || (convert = setToArray);

            if (object.size != other.size && !isPartial) {
              return false;
            }

            var stacked = stack.get(object);

            if (stacked) {
              return stacked == other;
            }

            bitmask |= COMPARE_UNORDERED_FLAG;
            stack.set(object, other);
            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
            stack['delete'](object);
            return result;

          case symbolTag:
            if (symbolValueOf) {
              return symbolValueOf.call(object) == symbolValueOf.call(other);
            }

        }

        return false;
      }

      function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
            objProps = getAllKeys(object),
            objLength = objProps.length,
            othProps = getAllKeys(other),
            othLength = othProps.length;

        if (objLength != othLength && !isPartial) {
          return false;
        }

        var index = objLength;

        while (index--) {
          var key = objProps[index];

          if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
            return false;
          }
        }

        var objStacked = stack.get(object);
        var othStacked = stack.get(other);

        if (objStacked && othStacked) {
          return objStacked == other && othStacked == object;
        }

        var result = true;
        stack.set(object, other);
        stack.set(other, object);
        var skipCtor = isPartial;

        while (++index < objLength) {
          key = objProps[index];
          var objValue = object[key],
              othValue = other[key];

          if (customizer) {
            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
          }

          if (!(compared === undefined$1 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
            result = false;
            break;
          }

          skipCtor || (skipCtor = key == 'constructor');
        }

        if (result && !skipCtor) {
          var objCtor = object.constructor,
              othCtor = other.constructor;

          if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
            result = false;
          }
        }

        stack['delete'](object);
        stack['delete'](other);
        return result;
      }

      function flatRest(func) {
        return setToString(overRest(func, undefined$1, flatten), func + '');
      }

      function getAllKeys(object) {
        return baseGetAllKeys(object, keys, getSymbols);
      }

      function getAllKeysIn(object) {
        return baseGetAllKeys(object, keysIn, getSymbolsIn);
      }

      var getData = !metaMap ? noop : function (func) {
        return metaMap.get(func);
      };

      function getFuncName(func) {
        var result = func.name + '',
            array = realNames[result],
            length = hasOwnProperty.call(realNames, result) ? array.length : 0;

        while (length--) {
          var data = array[length],
              otherFunc = data.func;

          if (otherFunc == null || otherFunc == func) {
            return data.name;
          }
        }

        return result;
      }

      function getHolder(func) {
        var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
        return object.placeholder;
      }

      function getIteratee() {
        var result = lodash.iteratee || iteratee;
        result = result === iteratee ? baseIteratee : result;
        return arguments.length ? result(arguments[0], arguments[1]) : result;
      }

      function getMapData(map, key) {
        var data = map.__data__;
        return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
      }

      function getMatchData(object) {
        var result = keys(object),
            length = result.length;

        while (length--) {
          var key = result[length],
              value = object[key];
          result[length] = [key, value, isStrictComparable(value)];
        }

        return result;
      }

      function getNative(object, key) {
        var value = getValue(object, key);
        return baseIsNative(value) ? value : undefined$1;
      }

      function getRawTag(value) {
        var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

        try {
          value[symToStringTag] = undefined$1;
          var unmasked = true;
        } catch (e) {}

        var result = nativeObjectToString.call(value);

        if (unmasked) {
          if (isOwn) {
            value[symToStringTag] = tag;
          } else {
            delete value[symToStringTag];
          }
        }

        return result;
      }

      var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
        if (object == null) {
          return [];
        }

        object = Object(object);
        return arrayFilter(nativeGetSymbols(object), function (symbol) {
          return propertyIsEnumerable.call(object, symbol);
        });
      };
      var getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {
        var result = [];

        while (object) {
          arrayPush(result, getSymbols(object));
          object = getPrototype(object);
        }

        return result;
      };
      var getTag = baseGetTag;

      if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
        getTag = function getTag(value) {
          var result = baseGetTag(value),
              Ctor = result == objectTag ? value.constructor : undefined$1,
              ctorString = Ctor ? toSource(Ctor) : '';

          if (ctorString) {
            switch (ctorString) {
              case dataViewCtorString:
                return dataViewTag;

              case mapCtorString:
                return mapTag;

              case promiseCtorString:
                return promiseTag;

              case setCtorString:
                return setTag;

              case weakMapCtorString:
                return weakMapTag;
            }
          }

          return result;
        };
      }

      function getView(start, end, transforms) {
        var index = -1,
            length = transforms.length;

        while (++index < length) {
          var data = transforms[index],
              size = data.size;

          switch (data.type) {
            case 'drop':
              start += size;
              break;

            case 'dropRight':
              end -= size;
              break;

            case 'take':
              end = nativeMin(end, start + size);
              break;

            case 'takeRight':
              start = nativeMax(start, end - size);
              break;
          }
        }

        return {
          'start': start,
          'end': end
        };
      }

      function getWrapDetails(source) {
        var match = source.match(reWrapDetails);
        return match ? match[1].split(reSplitDetails) : [];
      }

      function hasPath(object, path, hasFunc) {
        path = castPath(path, object);
        var index = -1,
            length = path.length,
            result = false;

        while (++index < length) {
          var key = toKey(path[index]);

          if (!(result = object != null && hasFunc(object, key))) {
            break;
          }

          object = object[key];
        }

        if (result || ++index != length) {
          return result;
        }

        length = object == null ? 0 : object.length;
        return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
      }

      function initCloneArray(array) {
        var length = array.length,
            result = new array.constructor(length);

        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
          result.index = array.index;
          result.input = array.input;
        }

        return result;
      }

      function initCloneObject(object) {
        return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
      }

      function initCloneByTag(object, tag, isDeep) {
        var Ctor = object.constructor;

        switch (tag) {
          case arrayBufferTag:
            return cloneArrayBuffer(object);

          case boolTag:
          case dateTag:
            return new Ctor(+object);

          case dataViewTag:
            return cloneDataView(object, isDeep);

          case float32Tag:
          case float64Tag:
          case int8Tag:
          case int16Tag:
          case int32Tag:
          case uint8Tag:
          case uint8ClampedTag:
          case uint16Tag:
          case uint32Tag:
            return cloneTypedArray(object, isDeep);

          case mapTag:
            return new Ctor();

          case numberTag:
          case stringTag:
            return new Ctor(object);

          case regexpTag:
            return cloneRegExp(object);

          case setTag:
            return new Ctor();

          case symbolTag:
            return cloneSymbol(object);
        }
      }

      function insertWrapDetails(source, details) {
        var length = details.length;

        if (!length) {
          return source;
        }

        var lastIndex = length - 1;
        details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
        details = details.join(length > 2 ? ', ' : ' ');
        return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
      }

      function isFlattenable(value) {
        return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
      }

      function isIndex(value, length) {
        var type = typeof value;
        length = length == null ? MAX_SAFE_INTEGER : length;
        return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
      }

      function isIterateeCall(value, index, object) {
        if (!isObject(object)) {
          return false;
        }

        var type = typeof index;

        if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {
          return eq(object[index], value);
        }

        return false;
      }

      function isKey(value, object) {
        if (isArray(value)) {
          return false;
        }

        var type = typeof value;

        if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
          return true;
        }

        return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
      }

      function isKeyable(value) {
        var type = typeof value;
        return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
      }

      function isLaziable(func) {
        var funcName = getFuncName(func),
            other = lodash[funcName];

        if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
          return false;
        }

        if (func === other) {
          return true;
        }

        var data = getData(other);
        return !!data && func === data[0];
      }

      function isMasked(func) {
        return !!maskSrcKey && maskSrcKey in func;
      }

      var isMaskable = coreJsData ? isFunction : stubFalse;

      function isPrototype(value) {
        var Ctor = value && value.constructor,
            proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
        return value === proto;
      }

      function isStrictComparable(value) {
        return value === value && !isObject(value);
      }

      function matchesStrictComparable(key, srcValue) {
        return function (object) {
          if (object == null) {
            return false;
          }

          return object[key] === srcValue && (srcValue !== undefined$1 || key in Object(object));
        };
      }

      function memoizeCapped(func) {
        var result = memoize(func, function (key) {
          if (cache.size === MAX_MEMOIZE_SIZE) {
            cache.clear();
          }

          return key;
        });
        var cache = result.cache;
        return result;
      }

      function mergeData(data, source) {
        var bitmask = data[1],
            srcBitmask = source[1],
            newBitmask = bitmask | srcBitmask,
            isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
        var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;

        if (!(isCommon || isCombo)) {
          return data;
        }

        if (srcBitmask & WRAP_BIND_FLAG) {
          data[2] = source[2];
          newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
        }

        var value = source[3];

        if (value) {
          var partials = data[3];
          data[3] = partials ? composeArgs(partials, value, source[4]) : value;
          data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
        }

        value = source[5];

        if (value) {
          partials = data[5];
          data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
          data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
        }

        value = source[7];

        if (value) {
          data[7] = value;
        }

        if (srcBitmask & WRAP_ARY_FLAG) {
          data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
        }

        if (data[9] == null) {
          data[9] = source[9];
        }

        data[0] = source[0];
        data[1] = newBitmask;
        return data;
      }

      function nativeKeysIn(object) {
        var result = [];

        if (object != null) {
          for (var key in Object(object)) {
            result.push(key);
          }
        }

        return result;
      }

      function objectToString(value) {
        return nativeObjectToString.call(value);
      }

      function overRest(func, start, transform) {
        start = nativeMax(start === undefined$1 ? func.length - 1 : start, 0);
        return function () {
          var args = arguments,
              index = -1,
              length = nativeMax(args.length - start, 0),
              array = Array(length);

          while (++index < length) {
            array[index] = args[start + index];
          }

          index = -1;
          var otherArgs = Array(start + 1);

          while (++index < start) {
            otherArgs[index] = args[index];
          }

          otherArgs[start] = transform(array);
          return apply(func, this, otherArgs);
        };
      }

      function parent(object, path) {
        return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
      }

      function reorder(array, indexes) {
        var arrLength = array.length,
            length = nativeMin(indexes.length, arrLength),
            oldArray = copyArray(array);

        while (length--) {
          var index = indexes[length];
          array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$1;
        }

        return array;
      }

      function safeGet(object, key) {
        if (key === 'constructor' && typeof object[key] === 'function') {
          return;
        }

        if (key == '__proto__') {
          return;
        }

        return object[key];
      }

      var setData = shortOut(baseSetData);

      var setTimeout = ctxSetTimeout || function (func, wait) {
        return root.setTimeout(func, wait);
      };

      var setToString = shortOut(baseSetToString);

      function setWrapToString(wrapper, reference, bitmask) {
        var source = reference + '';
        return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
      }

      function shortOut(func) {
        var count = 0,
            lastCalled = 0;
        return function () {
          var stamp = nativeNow(),
              remaining = HOT_SPAN - (stamp - lastCalled);
          lastCalled = stamp;

          if (remaining > 0) {
            if (++count >= HOT_COUNT) {
              return arguments[0];
            }
          } else {
            count = 0;
          }

          return func.apply(undefined$1, arguments);
        };
      }

      function shuffleSelf(array, size) {
        var index = -1,
            length = array.length,
            lastIndex = length - 1;
        size = size === undefined$1 ? length : size;

        while (++index < size) {
          var rand = baseRandom(index, lastIndex),
              value = array[rand];
          array[rand] = array[index];
          array[index] = value;
        }

        array.length = size;
        return array;
      }

      var stringToPath = memoizeCapped(function (string) {
        var result = [];

        if (string.charCodeAt(0) === 46) {
            result.push('');
          }

        string.replace(rePropName, function (match, number, quote, subString) {
          result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
        });
        return result;
      });

      function toKey(value) {
        if (typeof value == 'string' || isSymbol(value)) {
          return value;
        }

        var result = value + '';
        return result == '0' && 1 / value == -INFINITY ? '-0' : result;
      }

      function toSource(func) {
        if (func != null) {
          try {
            return funcToString.call(func);
          } catch (e) {}

          try {
            return func + '';
          } catch (e) {}
        }

        return '';
      }

      function updateWrapDetails(details, bitmask) {
        arrayEach(wrapFlags, function (pair) {
          var value = '_.' + pair[0];

          if (bitmask & pair[1] && !arrayIncludes(details, value)) {
            details.push(value);
          }
        });
        return details.sort();
      }

      function wrapperClone(wrapper) {
        if (wrapper instanceof LazyWrapper) {
          return wrapper.clone();
        }

        var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
        result.__actions__ = copyArray(wrapper.__actions__);
        result.__index__ = wrapper.__index__;
        result.__values__ = wrapper.__values__;
        return result;
      }

      function chunk(array, size, guard) {
        if (guard ? isIterateeCall(array, size, guard) : size === undefined$1) {
          size = 1;
        } else {
          size = nativeMax(toInteger(size), 0);
        }

        var length = array == null ? 0 : array.length;

        if (!length || size < 1) {
          return [];
        }

        var index = 0,
            resIndex = 0,
            result = Array(nativeCeil(length / size));

        while (index < length) {
          result[resIndex++] = baseSlice(array, index, index += size);
        }

        return result;
      }

      function compact(array) {
        var index = -1,
            length = array == null ? 0 : array.length,
            resIndex = 0,
            result = [];

        while (++index < length) {
          var value = array[index];

          if (value) {
            result[resIndex++] = value;
          }
        }

        return result;
      }

      function concat() {
        var length = arguments.length;

        if (!length) {
          return [];
        }

        var args = Array(length - 1),
            array = arguments[0],
            index = length;

        while (index--) {
          args[index - 1] = arguments[index];
        }

        return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
      }

      var difference = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
      });
      var differenceBy = baseRest(function (array, values) {
        var iteratee = last(values);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }

        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
      });
      var differenceWith = baseRest(function (array, values) {
        var comparator = last(values);

        if (isArrayLikeObject(comparator)) {
          comparator = undefined$1;
        }

        return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined$1, comparator) : [];
      });

      function drop(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined$1 ? 1 : toInteger(n);
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function dropRight(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined$1 ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function dropRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
      }

      function dropWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
      }

      function fill(array, value, start, end) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
          start = 0;
          end = length;
        }

        return baseFill(array, value, start, end);
      }

      function findIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = fromIndex == null ? 0 : toInteger(fromIndex);

        if (index < 0) {
          index = nativeMax(length + index, 0);
        }

        return baseFindIndex(array, getIteratee(predicate, 3), index);
      }

      function findLastIndex(array, predicate, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = length - 1;

        if (fromIndex !== undefined$1) {
          index = toInteger(fromIndex);
          index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }

        return baseFindIndex(array, getIteratee(predicate, 3), index, true);
      }

      function flatten(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, 1) : [];
      }

      function flattenDeep(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseFlatten(array, INFINITY) : [];
      }

      function flattenDepth(array, depth) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        depth = depth === undefined$1 ? 1 : toInteger(depth);
        return baseFlatten(array, depth);
      }

      function fromPairs(pairs) {
        var index = -1,
            length = pairs == null ? 0 : pairs.length,
            result = {};

        while (++index < length) {
          var pair = pairs[index];
          result[pair[0]] = pair[1];
        }

        return result;
      }

      function head(array) {
        return array && array.length ? array[0] : undefined$1;
      }

      function indexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = fromIndex == null ? 0 : toInteger(fromIndex);

        if (index < 0) {
          index = nativeMax(length + index, 0);
        }

        return baseIndexOf(array, value, index);
      }

      function initial(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 0, -1) : [];
      }

      var intersection = baseRest(function (arrays) {
        var mapped = arrayMap(arrays, castArrayLikeObject);
        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
      });
      var intersectionBy = baseRest(function (arrays) {
        var iteratee = last(arrays),
            mapped = arrayMap(arrays, castArrayLikeObject);

        if (iteratee === last(mapped)) {
          iteratee = undefined$1;
        } else {
          mapped.pop();
        }

        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
      });
      var intersectionWith = baseRest(function (arrays) {
        var comparator = last(arrays),
            mapped = arrayMap(arrays, castArrayLikeObject);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;

        if (comparator) {
          mapped.pop();
        }

        return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$1, comparator) : [];
      });

      function join(array, separator) {
        return array == null ? '' : nativeJoin.call(array, separator);
      }

      function last(array) {
        var length = array == null ? 0 : array.length;
        return length ? array[length - 1] : undefined$1;
      }

      function lastIndexOf(array, value, fromIndex) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return -1;
        }

        var index = length;

        if (fromIndex !== undefined$1) {
          index = toInteger(fromIndex);
          index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
        }

        return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
      }

      function nth(array, n) {
        return array && array.length ? baseNth(array, toInteger(n)) : undefined$1;
      }

      var pull = baseRest(pullAll);

      function pullAll(array, values) {
        return array && array.length && values && values.length ? basePullAll(array, values) : array;
      }

      function pullAllBy(array, values, iteratee) {
        return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
      }

      function pullAllWith(array, values, comparator) {
        return array && array.length && values && values.length ? basePullAll(array, values, undefined$1, comparator) : array;
      }

      var pullAt = flatRest(function (array, indexes) {
        var length = array == null ? 0 : array.length,
            result = baseAt(array, indexes);
        basePullAt(array, arrayMap(indexes, function (index) {
          return isIndex(index, length) ? +index : index;
        }).sort(compareAscending));
        return result;
      });

      function remove(array, predicate) {
        var result = [];

        if (!(array && array.length)) {
          return result;
        }

        var index = -1,
            indexes = [],
            length = array.length;
        predicate = getIteratee(predicate, 3);

        while (++index < length) {
          var value = array[index];

          if (predicate(value, index, array)) {
            result.push(value);
            indexes.push(index);
          }
        }

        basePullAt(array, indexes);
        return result;
      }

      function reverse(array) {
        return array == null ? array : nativeReverse.call(array);
      }

      function slice(array, start, end) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
          start = 0;
          end = length;
        } else {
          start = start == null ? 0 : toInteger(start);
          end = end === undefined$1 ? length : toInteger(end);
        }

        return baseSlice(array, start, end);
      }

      function sortedIndex(array, value) {
        return baseSortedIndex(array, value);
      }

      function sortedIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
      }

      function sortedIndexOf(array, value) {
        var length = array == null ? 0 : array.length;

        if (length) {
          var index = baseSortedIndex(array, value);

          if (index < length && eq(array[index], value)) {
            return index;
          }
        }

        return -1;
      }

      function sortedLastIndex(array, value) {
        return baseSortedIndex(array, value, true);
      }

      function sortedLastIndexBy(array, value, iteratee) {
        return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
      }

      function sortedLastIndexOf(array, value) {
        var length = array == null ? 0 : array.length;

        if (length) {
          var index = baseSortedIndex(array, value, true) - 1;

          if (eq(array[index], value)) {
            return index;
          }
        }

        return -1;
      }

      function sortedUniq(array) {
        return array && array.length ? baseSortedUniq(array) : [];
      }

      function sortedUniqBy(array, iteratee) {
        return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function tail(array) {
        var length = array == null ? 0 : array.length;
        return length ? baseSlice(array, 1, length) : [];
      }

      function take(array, n, guard) {
        if (!(array && array.length)) {
          return [];
        }

        n = guard || n === undefined$1 ? 1 : toInteger(n);
        return baseSlice(array, 0, n < 0 ? 0 : n);
      }

      function takeRight(array, n, guard) {
        var length = array == null ? 0 : array.length;

        if (!length) {
          return [];
        }

        n = guard || n === undefined$1 ? 1 : toInteger(n);
        n = length - n;
        return baseSlice(array, n < 0 ? 0 : n, length);
      }

      function takeRightWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
      }

      function takeWhile(array, predicate) {
        return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
      }

      var union = baseRest(function (arrays) {
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
      });
      var unionBy = baseRest(function (arrays) {
        var iteratee = last(arrays);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }

        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
      });
      var unionWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined$1, comparator);
      });

      function uniq(array) {
        return array && array.length ? baseUniq(array) : [];
      }

      function uniqBy(array, iteratee) {
        return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
      }

      function uniqWith(array, comparator) {
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return array && array.length ? baseUniq(array, undefined$1, comparator) : [];
      }

      function unzip(array) {
        if (!(array && array.length)) {
          return [];
        }

        var length = 0;
        array = arrayFilter(array, function (group) {
          if (isArrayLikeObject(group)) {
            length = nativeMax(group.length, length);
            return true;
          }
        });
        return baseTimes(length, function (index) {
          return arrayMap(array, baseProperty(index));
        });
      }

      function unzipWith(array, iteratee) {
        if (!(array && array.length)) {
          return [];
        }

        var result = unzip(array);

        if (iteratee == null) {
          return result;
        }

        return arrayMap(result, function (group) {
          return apply(iteratee, undefined$1, group);
        });
      }

      var without = baseRest(function (array, values) {
        return isArrayLikeObject(array) ? baseDifference(array, values) : [];
      });
      var xor = baseRest(function (arrays) {
        return baseXor(arrayFilter(arrays, isArrayLikeObject));
      });
      var xorBy = baseRest(function (arrays) {
        var iteratee = last(arrays);

        if (isArrayLikeObject(iteratee)) {
          iteratee = undefined$1;
        }

        return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
      });
      var xorWith = baseRest(function (arrays) {
        var comparator = last(arrays);
        comparator = typeof comparator == 'function' ? comparator : undefined$1;
        return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$1, comparator);
      });
      var zip = baseRest(unzip);

      function zipObject(props, values) {
        return baseZipObject(props || [], values || [], assignValue);
      }

      function zipObjectDeep(props, values) {
        return baseZipObject(props || [], values || [], baseSet);
      }

      var zipWith = baseRest(function (arrays) {
        var length = arrays.length,
            iteratee = length > 1 ? arrays[length - 1] : undefined$1;
        iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined$1;
        return unzipWith(arrays, iteratee);
      });

      function chain(value) {
        var result = lodash(value);
        result.__chain__ = true;
        return result;
      }

      function tap(value, interceptor) {
        interceptor(value);
        return value;
      }

      function thru(value, interceptor) {
        return interceptor(value);
      }

      var wrapperAt = flatRest(function (paths) {
        var length = paths.length,
            start = length ? paths[0] : 0,
            value = this.__wrapped__,
            interceptor = function interceptor(object) {
          return baseAt(object, paths);
        };

        if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {
          return this.thru(interceptor);
        }

        value = value.slice(start, +start + (length ? 1 : 0));

        value.__actions__.push({
          'func': thru,
          'args': [interceptor],
          'thisArg': undefined$1
        });

        return new LodashWrapper(value, this.__chain__).thru(function (array) {
          if (length && !array.length) {
            array.push(undefined$1);
          }

          return array;
        });
      });

      function wrapperChain() {
        return chain(this);
      }

      function wrapperCommit() {
        return new LodashWrapper(this.value(), this.__chain__);
      }

      function wrapperNext() {
        if (this.__values__ === undefined$1) {
          this.__values__ = toArray(this.value());
        }

        var done = this.__index__ >= this.__values__.length,
            value = done ? undefined$1 : this.__values__[this.__index__++];
        return {
          'done': done,
          'value': value
        };
      }

      function wrapperToIterator() {
        return this;
      }

      function wrapperPlant(value) {
        var result,
            parent = this;

        while (parent instanceof baseLodash) {
          var clone = wrapperClone(parent);
          clone.__index__ = 0;
          clone.__values__ = undefined$1;

          if (result) {
            previous.__wrapped__ = clone;
          } else {
            result = clone;
          }

          var previous = clone;
          parent = parent.__wrapped__;
        }

        previous.__wrapped__ = value;
        return result;
      }

      function wrapperReverse() {
        var value = this.__wrapped__;

        if (value instanceof LazyWrapper) {
          var wrapped = value;

          if (this.__actions__.length) {
            wrapped = new LazyWrapper(this);
          }

          wrapped = wrapped.reverse();

          wrapped.__actions__.push({
            'func': thru,
            'args': [reverse],
            'thisArg': undefined$1
          });

          return new LodashWrapper(wrapped, this.__chain__);
        }

        return this.thru(reverse);
      }

      function wrapperValue() {
        return baseWrapperValue(this.__wrapped__, this.__actions__);
      }

      var countBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          ++result[key];
        } else {
          baseAssignValue(result, key, 1);
        }
      });

      function every(collection, predicate, guard) {
        var func = isArray(collection) ? arrayEvery : baseEvery;

        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$1;
        }

        return func(collection, getIteratee(predicate, 3));
      }

      function filter(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, getIteratee(predicate, 3));
      }

      var find = createFind(findIndex);
      var findLast = createFind(findLastIndex);

      function flatMap(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), 1);
      }

      function flatMapDeep(collection, iteratee) {
        return baseFlatten(map(collection, iteratee), INFINITY);
      }

      function flatMapDepth(collection, iteratee, depth) {
        depth = depth === undefined$1 ? 1 : toInteger(depth);
        return baseFlatten(map(collection, iteratee), depth);
      }

      function forEach(collection, iteratee) {
        var func = isArray(collection) ? arrayEach : baseEach;
        return func(collection, getIteratee(iteratee, 3));
      }

      function forEachRight(collection, iteratee) {
        var func = isArray(collection) ? arrayEachRight : baseEachRight;
        return func(collection, getIteratee(iteratee, 3));
      }

      var groupBy = createAggregator(function (result, value, key) {
        if (hasOwnProperty.call(result, key)) {
          result[key].push(value);
        } else {
          baseAssignValue(result, key, [value]);
        }
      });

      function includes(collection, value, fromIndex, guard) {
        collection = isArrayLike(collection) ? collection : values(collection);
        fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
        var length = collection.length;

        if (fromIndex < 0) {
          fromIndex = nativeMax(length + fromIndex, 0);
        }

        return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
      }

      var invokeMap = baseRest(function (collection, path, args) {
        var index = -1,
            isFunc = typeof path == 'function',
            result = isArrayLike(collection) ? Array(collection.length) : [];
        baseEach(collection, function (value) {
          result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
        });
        return result;
      });
      var keyBy = createAggregator(function (result, value, key) {
        baseAssignValue(result, key, value);
      });

      function map(collection, iteratee) {
        var func = isArray(collection) ? arrayMap : baseMap;
        return func(collection, getIteratee(iteratee, 3));
      }

      function orderBy(collection, iteratees, orders, guard) {
        if (collection == null) {
          return [];
        }

        if (!isArray(iteratees)) {
          iteratees = iteratees == null ? [] : [iteratees];
        }

        orders = guard ? undefined$1 : orders;

        if (!isArray(orders)) {
          orders = orders == null ? [] : [orders];
        }

        return baseOrderBy(collection, iteratees, orders);
      }

      var partition = createAggregator(function (result, value, key) {
        result[key ? 0 : 1].push(value);
      }, function () {
        return [[], []];
      });

      function reduce(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduce : baseReduce,
            initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
      }

      function reduceRight(collection, iteratee, accumulator) {
        var func = isArray(collection) ? arrayReduceRight : baseReduce,
            initAccum = arguments.length < 3;
        return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
      }

      function reject(collection, predicate) {
        var func = isArray(collection) ? arrayFilter : baseFilter;
        return func(collection, negate(getIteratee(predicate, 3)));
      }

      function sample(collection) {
        var func = isArray(collection) ? arraySample : baseSample;
        return func(collection);
      }

      function sampleSize(collection, n, guard) {
        if (guard ? isIterateeCall(collection, n, guard) : n === undefined$1) {
          n = 1;
        } else {
          n = toInteger(n);
        }

        var func = isArray(collection) ? arraySampleSize : baseSampleSize;
        return func(collection, n);
      }

      function shuffle(collection) {
        var func = isArray(collection) ? arrayShuffle : baseShuffle;
        return func(collection);
      }

      function size(collection) {
        if (collection == null) {
          return 0;
        }

        if (isArrayLike(collection)) {
          return isString(collection) ? stringSize(collection) : collection.length;
        }

        var tag = getTag(collection);

        if (tag == mapTag || tag == setTag) {
          return collection.size;
        }

        return baseKeys(collection).length;
      }

      function some(collection, predicate, guard) {
        var func = isArray(collection) ? arraySome : baseSome;

        if (guard && isIterateeCall(collection, predicate, guard)) {
          predicate = undefined$1;
        }

        return func(collection, getIteratee(predicate, 3));
      }

      var sortBy = baseRest(function (collection, iteratees) {
        if (collection == null) {
          return [];
        }

        var length = iteratees.length;

        if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
          iteratees = [];
        } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
          iteratees = [iteratees[0]];
        }

        return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
      });

      var now = ctxNow || function () {
        return root.Date.now();
      };

      function after(n, func) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        n = toInteger(n);
        return function () {
          if (--n < 1) {
            return func.apply(this, arguments);
          }
        };
      }

      function ary(func, n, guard) {
        n = guard ? undefined$1 : n;
        n = func && n == null ? func.length : n;
        return createWrap(func, WRAP_ARY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, n);
      }

      function before(n, func) {
        var result;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        n = toInteger(n);
        return function () {
          if (--n > 0) {
            result = func.apply(this, arguments);
          }

          if (n <= 1) {
            func = undefined$1;
          }

          return result;
        };
      }

      var bind = baseRest(function (func, thisArg, partials) {
        var bitmask = WRAP_BIND_FLAG;

        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bind));
          bitmask |= WRAP_PARTIAL_FLAG;
        }

        return createWrap(func, bitmask, thisArg, partials, holders);
      });
      var bindKey = baseRest(function (object, key, partials) {
        var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;

        if (partials.length) {
          var holders = replaceHolders(partials, getHolder(bindKey));
          bitmask |= WRAP_PARTIAL_FLAG;
        }

        return createWrap(key, bitmask, object, partials, holders);
      });

      function curry(func, arity, guard) {
        arity = guard ? undefined$1 : arity;
        var result = createWrap(func, WRAP_CURRY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
        result.placeholder = curry.placeholder;
        return result;
      }

      function curryRight(func, arity, guard) {
        arity = guard ? undefined$1 : arity;
        var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);
        result.placeholder = curryRight.placeholder;
        return result;
      }

      function debounce(func, wait, options) {
        var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        wait = toNumber(wait) || 0;

        if (isObject(options)) {
          leading = !!options.leading;
          maxing = 'maxWait' in options;
          maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        function invokeFunc(time) {
          var args = lastArgs,
              thisArg = lastThis;
          lastArgs = lastThis = undefined$1;
          lastInvokeTime = time;
          result = func.apply(thisArg, args);
          return result;
        }

        function leadingEdge(time) {
          lastInvokeTime = time;
          timerId = setTimeout(timerExpired, wait);
          return leading ? invokeFunc(time) : result;
        }

        function remainingWait(time) {
          var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              timeWaiting = wait - timeSinceLastCall;
          return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
        }

        function shouldInvoke(time) {
          var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;
          return lastCallTime === undefined$1 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
        }

        function timerExpired() {
          var time = now();

          if (shouldInvoke(time)) {
            return trailingEdge(time);
          }

          timerId = setTimeout(timerExpired, remainingWait(time));
        }

        function trailingEdge(time) {
          timerId = undefined$1;

          if (trailing && lastArgs) {
            return invokeFunc(time);
          }

          lastArgs = lastThis = undefined$1;
          return result;
        }

        function cancel() {
          if (timerId !== undefined$1) {
            clearTimeout(timerId);
          }

          lastInvokeTime = 0;
          lastArgs = lastCallTime = lastThis = timerId = undefined$1;
        }

        function flush() {
          return timerId === undefined$1 ? result : trailingEdge(now());
        }

        function debounced() {
          var time = now(),
              isInvoking = shouldInvoke(time);
          lastArgs = arguments;
          lastThis = this;
          lastCallTime = time;

          if (isInvoking) {
            if (timerId === undefined$1) {
              return leadingEdge(lastCallTime);
            }

            if (maxing) {
              clearTimeout(timerId);
              timerId = setTimeout(timerExpired, wait);
              return invokeFunc(lastCallTime);
            }
          }

          if (timerId === undefined$1) {
            timerId = setTimeout(timerExpired, wait);
          }

          return result;
        }

        debounced.cancel = cancel;
        debounced.flush = flush;
        return debounced;
      }

      var defer = baseRest(function (func, args) {
        return baseDelay(func, 1, args);
      });
      var delay = baseRest(function (func, wait, args) {
        return baseDelay(func, toNumber(wait) || 0, args);
      });

      function flip(func) {
        return createWrap(func, WRAP_FLIP_FLAG);
      }

      function memoize(func, resolver) {
        if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        var memoized = function memoized() {
          var args = arguments,
              key = resolver ? resolver.apply(this, args) : args[0],
              cache = memoized.cache;

          if (cache.has(key)) {
            return cache.get(key);
          }

          var result = func.apply(this, args);
          memoized.cache = cache.set(key, result) || cache;
          return result;
        };

        memoized.cache = new (memoize.Cache || MapCache)();
        return memoized;
      }

      memoize.Cache = MapCache;

      function negate(predicate) {
        if (typeof predicate != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        return function () {
          var args = arguments;

          switch (args.length) {
            case 0:
              return !predicate.call(this);

            case 1:
              return !predicate.call(this, args[0]);

            case 2:
              return !predicate.call(this, args[0], args[1]);

            case 3:
              return !predicate.call(this, args[0], args[1], args[2]);
          }

          return !predicate.apply(this, args);
        };
      }

      function once(func) {
        return before(2, func);
      }

      var overArgs = castRest(function (func, transforms) {
        transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
        var funcsLength = transforms.length;
        return baseRest(function (args) {
          var index = -1,
              length = nativeMin(args.length, funcsLength);

          while (++index < length) {
            args[index] = transforms[index].call(this, args[index]);
          }

          return apply(func, this, args);
        });
      });
      var partial = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partial));
        return createWrap(func, WRAP_PARTIAL_FLAG, undefined$1, partials, holders);
      });
      var partialRight = baseRest(function (func, partials) {
        var holders = replaceHolders(partials, getHolder(partialRight));
        return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$1, partials, holders);
      });
      var rearg = flatRest(function (func, indexes) {
        return createWrap(func, WRAP_REARG_FLAG, undefined$1, undefined$1, undefined$1, indexes);
      });

      function rest(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        start = start === undefined$1 ? start : toInteger(start);
        return baseRest(func, start);
      }

      function spread(func, start) {
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        start = start == null ? 0 : nativeMax(toInteger(start), 0);
        return baseRest(function (args) {
          var array = args[start],
              otherArgs = castSlice(args, 0, start);

          if (array) {
            arrayPush(otherArgs, array);
          }

          return apply(func, this, otherArgs);
        });
      }

      function throttle(func, wait, options) {
        var leading = true,
            trailing = true;

        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }

        if (isObject(options)) {
          leading = 'leading' in options ? !!options.leading : leading;
          trailing = 'trailing' in options ? !!options.trailing : trailing;
        }

        return debounce(func, wait, {
          'leading': leading,
          'maxWait': wait,
          'trailing': trailing
        });
      }

      function unary(func) {
        return ary(func, 1);
      }

      function wrap(value, wrapper) {
        return partial(castFunction(wrapper), value);
      }

      function castArray() {
        if (!arguments.length) {
          return [];
        }

        var value = arguments[0];
        return isArray(value) ? value : [value];
      }

      function clone(value) {
        return baseClone(value, CLONE_SYMBOLS_FLAG);
      }

      function cloneWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
      }

      function cloneDeep(value) {
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
      }

      function cloneDeepWith(value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
      }

      function conformsTo(object, source) {
        return source == null || baseConformsTo(object, source, keys(source));
      }

      function eq(value, other) {
        return value === other || value !== value && other !== other;
      }

      var gt = createRelationalOperation(baseGt);
      var gte = createRelationalOperation(function (value, other) {
        return value >= other;
      });
      var isArguments = baseIsArguments(function () {
        return arguments;
      }()) ? baseIsArguments : function (value) {
        return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
      };
      var isArray = Array.isArray;
      var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

      function isArrayLike(value) {
        return value != null && isLength(value.length) && !isFunction(value);
      }

      function isArrayLikeObject(value) {
        return isObjectLike(value) && isArrayLike(value);
      }

      function isBoolean(value) {
        return value === true || value === false || isObjectLike(value) && baseGetTag(value) == boolTag;
      }

      var isBuffer = nativeIsBuffer || stubFalse;
      var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

      function isElement(value) {
        return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
      }

      function isEmpty(value) {
        if (value == null) {
          return true;
        }

        if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {
          return !value.length;
        }

        var tag = getTag(value);

        if (tag == mapTag || tag == setTag) {
          return !value.size;
        }

        if (isPrototype(value)) {
          return !baseKeys(value).length;
        }

        for (var key in value) {
          if (hasOwnProperty.call(value, key)) {
            return false;
          }
        }

        return true;
      }

      function isEqual(value, other) {
        return baseIsEqual(value, other);
      }

      function isEqualWith(value, other, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        var result = customizer ? customizer(value, other) : undefined$1;
        return result === undefined$1 ? baseIsEqual(value, other, undefined$1, customizer) : !!result;
      }

      function isError(value) {
        if (!isObjectLike(value)) {
          return false;
        }

        var tag = baseGetTag(value);
        return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value);
      }

      function isFinite(value) {
        return typeof value == 'number' && nativeIsFinite(value);
      }

      function isFunction(value) {
        if (!isObject(value)) {
          return false;
        }

        var tag = baseGetTag(value);
        return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
      }

      function isInteger(value) {
        return typeof value == 'number' && value == toInteger(value);
      }

      function isLength(value) {
        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
      }

      function isObject(value) {
        var type = typeof value;
        return value != null && (type == 'object' || type == 'function');
      }

      function isObjectLike(value) {
        return value != null && typeof value == 'object';
      }

      var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

      function isMatch(object, source) {
        return object === source || baseIsMatch(object, source, getMatchData(source));
      }

      function isMatchWith(object, source, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return baseIsMatch(object, source, getMatchData(source), customizer);
      }

      function isNaN(value) {
        return isNumber(value) && value != +value;
      }

      function isNative(value) {
        if (isMaskable(value)) {
          throw new Error(CORE_ERROR_TEXT);
        }

        return baseIsNative(value);
      }

      function isNull(value) {
        return value === null;
      }

      function isNil(value) {
        return value == null;
      }

      function isNumber(value) {
        return typeof value == 'number' || isObjectLike(value) && baseGetTag(value) == numberTag;
      }

      function isPlainObject(value) {
        if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
          return false;
        }

        var proto = getPrototype(value);

        if (proto === null) {
          return true;
        }

        var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
        return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
      }

      var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

      function isSafeInteger(value) {
        return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
      }

      var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

      function isString(value) {
        return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
      }

      function isSymbol(value) {
        return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
      }

      var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

      function isUndefined(value) {
        return value === undefined$1;
      }

      function isWeakMap(value) {
        return isObjectLike(value) && getTag(value) == weakMapTag;
      }

      function isWeakSet(value) {
        return isObjectLike(value) && baseGetTag(value) == weakSetTag;
      }

      var lt = createRelationalOperation(baseLt);
      var lte = createRelationalOperation(function (value, other) {
        return value <= other;
      });

      function toArray(value) {
        if (!value) {
          return [];
        }

        if (isArrayLike(value)) {
          return isString(value) ? stringToArray(value) : copyArray(value);
        }

        if (symIterator && value[symIterator]) {
          return iteratorToArray(value[symIterator]());
        }

        var tag = getTag(value),
            func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
        return func(value);
      }

      function toFinite(value) {
        if (!value) {
          return value === 0 ? value : 0;
        }

        value = toNumber(value);

        if (value === INFINITY || value === -INFINITY) {
          var sign = value < 0 ? -1 : 1;
          return sign * MAX_INTEGER;
        }

        return value === value ? value : 0;
      }

      function toInteger(value) {
        var result = toFinite(value),
            remainder = result % 1;
        return result === result ? remainder ? result - remainder : result : 0;
      }

      function toLength(value) {
        return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
      }

      function toNumber(value) {
        if (typeof value == 'number') {
          return value;
        }

        if (isSymbol(value)) {
          return NAN;
        }

        if (isObject(value)) {
          var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
          value = isObject(other) ? other + '' : other;
        }

        if (typeof value != 'string') {
          return value === 0 ? value : +value;
        }

        value = value.replace(reTrim, '');
        var isBinary = reIsBinary.test(value);
        return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
      }

      function toPlainObject(value) {
        return copyObject(value, keysIn(value));
      }

      function toSafeInteger(value) {
        return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
      }

      function toString(value) {
        return value == null ? '' : baseToString(value);
      }

      var assign = createAssigner(function (object, source) {
        if (isPrototype(source) || isArrayLike(source)) {
          copyObject(source, keys(source), object);
          return;
        }

        for (var key in source) {
          if (hasOwnProperty.call(source, key)) {
            assignValue(object, key, source[key]);
          }
        }
      });
      var assignIn = createAssigner(function (object, source) {
        copyObject(source, keysIn(source), object);
      });
      var assignInWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keysIn(source), object, customizer);
      });
      var assignWith = createAssigner(function (object, source, srcIndex, customizer) {
        copyObject(source, keys(source), object, customizer);
      });
      var at = flatRest(baseAt);

      function create(prototype, properties) {
        var result = baseCreate(prototype);
        return properties == null ? result : baseAssign(result, properties);
      }

      var defaults = baseRest(function (object, sources) {
        object = Object(object);
        var index = -1;
        var length = sources.length;
        var guard = length > 2 ? sources[2] : undefined$1;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          length = 1;
        }

        while (++index < length) {
          var source = sources[index];
          var props = keysIn(source);
          var propsIndex = -1;
          var propsLength = props.length;

          while (++propsIndex < propsLength) {
            var key = props[propsIndex];
            var value = object[key];

            if (value === undefined$1 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
              object[key] = source[key];
            }
          }
        }

        return object;
      });
      var defaultsDeep = baseRest(function (args) {
        args.push(undefined$1, customDefaultsMerge);
        return apply(mergeWith, undefined$1, args);
      });

      function findKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
      }

      function findLastKey(object, predicate) {
        return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
      }

      function forIn(object, iteratee) {
        return object == null ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
      }

      function forInRight(object, iteratee) {
        return object == null ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
      }

      function forOwn(object, iteratee) {
        return object && baseForOwn(object, getIteratee(iteratee, 3));
      }

      function forOwnRight(object, iteratee) {
        return object && baseForOwnRight(object, getIteratee(iteratee, 3));
      }

      function functions(object) {
        return object == null ? [] : baseFunctions(object, keys(object));
      }

      function functionsIn(object) {
        return object == null ? [] : baseFunctions(object, keysIn(object));
      }

      function get(object, path, defaultValue) {
        var result = object == null ? undefined$1 : baseGet(object, path);
        return result === undefined$1 ? defaultValue : result;
      }

      function has(object, path) {
        return object != null && hasPath(object, path, baseHas);
      }

      function hasIn(object, path) {
        return object != null && hasPath(object, path, baseHasIn);
      }

      var invert = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }

        result[value] = key;
      }, constant(identity));
      var invertBy = createInverter(function (result, value, key) {
        if (value != null && typeof value.toString != 'function') {
          value = nativeObjectToString.call(value);
        }

        if (hasOwnProperty.call(result, value)) {
          result[value].push(key);
        } else {
          result[value] = [key];
        }
      }, getIteratee);
      var invoke = baseRest(baseInvoke);

      function keys(object) {
        return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
      }

      function keysIn(object) {
        return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
      }

      function mapKeys(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, iteratee(value, key, object), value);
        });
        return result;
      }

      function mapValues(object, iteratee) {
        var result = {};
        iteratee = getIteratee(iteratee, 3);
        baseForOwn(object, function (value, key, object) {
          baseAssignValue(result, key, iteratee(value, key, object));
        });
        return result;
      }

      var merge = createAssigner(function (object, source, srcIndex) {
        baseMerge(object, source, srcIndex);
      });
      var mergeWith = createAssigner(function (object, source, srcIndex, customizer) {
        baseMerge(object, source, srcIndex, customizer);
      });
      var omit = flatRest(function (object, paths) {
        var result = {};

        if (object == null) {
          return result;
        }

        var isDeep = false;
        paths = arrayMap(paths, function (path) {
          path = castPath(path, object);
          isDeep || (isDeep = path.length > 1);
          return path;
        });
        copyObject(object, getAllKeysIn(object), result);

        if (isDeep) {
          result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
        }

        var length = paths.length;

        while (length--) {
          baseUnset(result, paths[length]);
        }

        return result;
      });

      function omitBy(object, predicate) {
        return pickBy(object, negate(getIteratee(predicate)));
      }

      var pick = flatRest(function (object, paths) {
        return object == null ? {} : basePick(object, paths);
      });

      function pickBy(object, predicate) {
        if (object == null) {
          return {};
        }

        var props = arrayMap(getAllKeysIn(object), function (prop) {
          return [prop];
        });
        predicate = getIteratee(predicate);
        return basePickBy(object, props, function (value, path) {
          return predicate(value, path[0]);
        });
      }

      function result(object, path, defaultValue) {
        path = castPath(path, object);
        var index = -1,
            length = path.length;

        if (!length) {
          length = 1;
          object = undefined$1;
        }

        while (++index < length) {
          var value = object == null ? undefined$1 : object[toKey(path[index])];

          if (value === undefined$1) {
            index = length;
            value = defaultValue;
          }

          object = isFunction(value) ? value.call(object) : value;
        }

        return object;
      }

      function set(object, path, value) {
        return object == null ? object : baseSet(object, path, value);
      }

      function setWith(object, path, value, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return object == null ? object : baseSet(object, path, value, customizer);
      }

      var toPairs = createToPairs(keys);
      var toPairsIn = createToPairs(keysIn);

      function transform(object, iteratee, accumulator) {
        var isArr = isArray(object),
            isArrLike = isArr || isBuffer(object) || isTypedArray(object);
        iteratee = getIteratee(iteratee, 4);

        if (accumulator == null) {
          var Ctor = object && object.constructor;

          if (isArrLike) {
            accumulator = isArr ? new Ctor() : [];
          } else if (isObject(object)) {
            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
          } else {
            accumulator = {};
          }
        }

        (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {
          return iteratee(accumulator, value, index, object);
        });
        return accumulator;
      }

      function unset(object, path) {
        return object == null ? true : baseUnset(object, path);
      }

      function update(object, path, updater) {
        return object == null ? object : baseUpdate(object, path, castFunction(updater));
      }

      function updateWith(object, path, updater, customizer) {
        customizer = typeof customizer == 'function' ? customizer : undefined$1;
        return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
      }

      function values(object) {
        return object == null ? [] : baseValues(object, keys(object));
      }

      function valuesIn(object) {
        return object == null ? [] : baseValues(object, keysIn(object));
      }

      function clamp(number, lower, upper) {
        if (upper === undefined$1) {
          upper = lower;
          lower = undefined$1;
        }

        if (upper !== undefined$1) {
          upper = toNumber(upper);
          upper = upper === upper ? upper : 0;
        }

        if (lower !== undefined$1) {
          lower = toNumber(lower);
          lower = lower === lower ? lower : 0;
        }

        return baseClamp(toNumber(number), lower, upper);
      }

      function inRange(number, start, end) {
        start = toFinite(start);

        if (end === undefined$1) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }

        number = toNumber(number);
        return baseInRange(number, start, end);
      }

      function random(lower, upper, floating) {
        if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
          upper = floating = undefined$1;
        }

        if (floating === undefined$1) {
          if (typeof upper == 'boolean') {
            floating = upper;
            upper = undefined$1;
          } else if (typeof lower == 'boolean') {
            floating = lower;
            lower = undefined$1;
          }
        }

        if (lower === undefined$1 && upper === undefined$1) {
          lower = 0;
          upper = 1;
        } else {
          lower = toFinite(lower);

          if (upper === undefined$1) {
            upper = lower;
            lower = 0;
          } else {
            upper = toFinite(upper);
          }
        }

        if (lower > upper) {
          var temp = lower;
          lower = upper;
          upper = temp;
        }

        if (floating || lower % 1 || upper % 1) {
          var rand = nativeRandom();
          return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
        }

        return baseRandom(lower, upper);
      }

      var camelCase = createCompounder(function (result, word, index) {
        word = word.toLowerCase();
        return result + (index ? capitalize(word) : word);
      });

      function capitalize(string) {
        return upperFirst(toString(string).toLowerCase());
      }

      function deburr(string) {
        string = toString(string);
        return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
      }

      function endsWith(string, target, position) {
        string = toString(string);
        target = baseToString(target);
        var length = string.length;
        position = position === undefined$1 ? length : baseClamp(toInteger(position), 0, length);
        var end = position;
        position -= target.length;
        return position >= 0 && string.slice(position, end) == target;
      }

      function escape(string) {
        string = toString(string);
        return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
      }

      function escapeRegExp(string) {
        string = toString(string);
        return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
      }

      var kebabCase = createCompounder(function (result, word, index) {
        return result + (index ? '-' : '') + word.toLowerCase();
      });
      var lowerCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toLowerCase();
      });
      var lowerFirst = createCaseFirst('toLowerCase');

      function pad(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;

        if (!length || strLength >= length) {
          return string;
        }

        var mid = (length - strLength) / 2;
        return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
      }

      function padEnd(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
      }

      function padStart(string, length, chars) {
        string = toString(string);
        length = toInteger(length);
        var strLength = length ? stringSize(string) : 0;
        return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
      }

      function parseInt(string, radix, guard) {
        if (guard || radix == null) {
          radix = 0;
        } else if (radix) {
          radix = +radix;
        }

        return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
      }

      function repeat(string, n, guard) {
        if (guard ? isIterateeCall(string, n, guard) : n === undefined$1) {
          n = 1;
        } else {
          n = toInteger(n);
        }

        return baseRepeat(toString(string), n);
      }

      function replace() {
        var args = arguments,
            string = toString(args[0]);
        return args.length < 3 ? string : string.replace(args[1], args[2]);
      }

      var snakeCase = createCompounder(function (result, word, index) {
        return result + (index ? '_' : '') + word.toLowerCase();
      });

      function split(string, separator, limit) {
        if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
          separator = limit = undefined$1;
        }

        limit = limit === undefined$1 ? MAX_ARRAY_LENGTH : limit >>> 0;

        if (!limit) {
          return [];
        }

        string = toString(string);

        if (string && (typeof separator == 'string' || separator != null && !isRegExp(separator))) {
          separator = baseToString(separator);

          if (!separator && hasUnicode(string)) {
            return castSlice(stringToArray(string), 0, limit);
          }
        }

        return string.split(separator, limit);
      }

      var startCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + upperFirst(word);
      });

      function startsWith(string, target, position) {
        string = toString(string);
        position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length);
        target = baseToString(target);
        return string.slice(position, position + target.length) == target;
      }

      function template(string, options, guard) {
        var settings = lodash.templateSettings;

        if (guard && isIterateeCall(string, options, guard)) {
          options = undefined$1;
        }

        string = toString(string);
        options = assignInWith({}, options, settings, customDefaultsAssignIn);
        var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
            importsKeys = keys(imports),
            importsValues = baseValues(imports, importsKeys);
        var isEscaping,
            isEvaluating,
            index = 0,
            interpolate = options.interpolate || reNoMatch,
            source = "__p += '";
        var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g');
        var sourceURL = '//# sourceURL=' + (hasOwnProperty.call(options, 'sourceURL') ? (options.sourceURL + '').replace(/\s/g, ' ') : 'lodash.templateSources[' + ++templateCounter + ']') + '\n';
        string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
          interpolateValue || (interpolateValue = esTemplateValue);
          source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

          if (escapeValue) {
            isEscaping = true;
            source += "' +\n__e(" + escapeValue + ") +\n'";
          }

          if (evaluateValue) {
            isEvaluating = true;
            source += "';\n" + evaluateValue + ";\n__p += '";
          }

          if (interpolateValue) {
            source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
          }

          index = offset + match.length;
          return match;
        });
        source += "';\n";
        var variable = hasOwnProperty.call(options, 'variable') && options.variable;

        if (!variable) {
          source = 'with (obj) {\n' + source + '\n}\n';
        }

        source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;');
        source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
        var result = attempt(function () {
          return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined$1, importsValues);
        });
        result.source = source;

        if (isError(result)) {
          throw result;
        }

        return result;
      }

      function toLower(value) {
        return toString(value).toLowerCase();
      }

      function toUpper(value) {
        return toString(value).toUpperCase();
      }

      function trim(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined$1)) {
          return string.replace(reTrim, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            chrSymbols = stringToArray(chars),
            start = charsStartIndex(strSymbols, chrSymbols),
            end = charsEndIndex(strSymbols, chrSymbols) + 1;
        return castSlice(strSymbols, start, end).join('');
      }

      function trimEnd(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined$1)) {
          return string.replace(reTrimEnd, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
        return castSlice(strSymbols, 0, end).join('');
      }

      function trimStart(string, chars, guard) {
        string = toString(string);

        if (string && (guard || chars === undefined$1)) {
          return string.replace(reTrimStart, '');
        }

        if (!string || !(chars = baseToString(chars))) {
          return string;
        }

        var strSymbols = stringToArray(string),
            start = charsStartIndex(strSymbols, stringToArray(chars));
        return castSlice(strSymbols, start).join('');
      }

      function truncate(string, options) {
        var length = DEFAULT_TRUNC_LENGTH,
            omission = DEFAULT_TRUNC_OMISSION;

        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? toInteger(options.length) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        }

        string = toString(string);
        var strLength = string.length;

        if (hasUnicode(string)) {
          var strSymbols = stringToArray(string);
          strLength = strSymbols.length;
        }

        if (length >= strLength) {
          return string;
        }

        var end = length - stringSize(omission);

        if (end < 1) {
          return omission;
        }

        var result = strSymbols ? castSlice(strSymbols, 0, end).join('') : string.slice(0, end);

        if (separator === undefined$1) {
          return result + omission;
        }

        if (strSymbols) {
          end += result.length - end;
        }

        if (isRegExp(separator)) {
          if (string.slice(end).search(separator)) {
            var match,
                substring = result;

            if (!separator.global) {
              separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
            }

            separator.lastIndex = 0;

            while (match = separator.exec(substring)) {
              var newEnd = match.index;
            }

            result = result.slice(0, newEnd === undefined$1 ? end : newEnd);
          }
        } else if (string.indexOf(baseToString(separator), end) != end) {
          var index = result.lastIndexOf(separator);

          if (index > -1) {
            result = result.slice(0, index);
          }
        }

        return result + omission;
      }

      function unescape(string) {
        string = toString(string);
        return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
      }

      var upperCase = createCompounder(function (result, word, index) {
        return result + (index ? ' ' : '') + word.toUpperCase();
      });
      var upperFirst = createCaseFirst('toUpperCase');

      function words(string, pattern, guard) {
        string = toString(string);
        pattern = guard ? undefined$1 : pattern;

        if (pattern === undefined$1) {
          return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
        }

        return string.match(pattern) || [];
      }

      var attempt = baseRest(function (func, args) {
        try {
          return apply(func, undefined$1, args);
        } catch (e) {
          return isError(e) ? e : new Error(e);
        }
      });
      var bindAll = flatRest(function (object, methodNames) {
        arrayEach(methodNames, function (key) {
          key = toKey(key);
          baseAssignValue(object, key, bind(object[key], object));
        });
        return object;
      });

      function cond(pairs) {
        var length = pairs == null ? 0 : pairs.length,
            toIteratee = getIteratee();
        pairs = !length ? [] : arrayMap(pairs, function (pair) {
          if (typeof pair[1] != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }

          return [toIteratee(pair[0]), pair[1]];
        });
        return baseRest(function (args) {
          var index = -1;

          while (++index < length) {
            var pair = pairs[index];

            if (apply(pair[0], this, args)) {
              return apply(pair[1], this, args);
            }
          }
        });
      }

      function conforms(source) {
        return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
      }

      function constant(value) {
        return function () {
          return value;
        };
      }

      function defaultTo(value, defaultValue) {
        return value == null || value !== value ? defaultValue : value;
      }

      var flow = createFlow();
      var flowRight = createFlow(true);

      function identity(value) {
        return value;
      }

      function iteratee(func) {
        return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
      }

      function matches(source) {
        return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
      }

      function matchesProperty(path, srcValue) {
        return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
      }

      var method = baseRest(function (path, args) {
        return function (object) {
          return baseInvoke(object, path, args);
        };
      });
      var methodOf = baseRest(function (object, args) {
        return function (path) {
          return baseInvoke(object, path, args);
        };
      });

      function mixin(object, source, options) {
        var props = keys(source),
            methodNames = baseFunctions(source, props);

        if (options == null && !(isObject(source) && (methodNames.length || !props.length))) {
          options = source;
          source = object;
          object = this;
          methodNames = baseFunctions(source, keys(source));
        }

        var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
            isFunc = isFunction(object);
        arrayEach(methodNames, function (methodName) {
          var func = source[methodName];
          object[methodName] = func;

          if (isFunc) {
            object.prototype[methodName] = function () {
              var chainAll = this.__chain__;

              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                    actions = result.__actions__ = copyArray(this.__actions__);
                actions.push({
                  'func': func,
                  'args': arguments,
                  'thisArg': object
                });
                result.__chain__ = chainAll;
                return result;
              }

              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }
        });
        return object;
      }

      function noConflict() {
        if (root._ === this) {
          root._ = oldDash;
        }

        return this;
      }

      function noop() {}

      function nthArg(n) {
        n = toInteger(n);
        return baseRest(function (args) {
          return baseNth(args, n);
        });
      }

      var over = createOver(arrayMap);
      var overEvery = createOver(arrayEvery);
      var overSome = createOver(arraySome);

      function property(path) {
        return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
      }

      function propertyOf(object) {
        return function (path) {
          return object == null ? undefined$1 : baseGet(object, path);
        };
      }

      var range = createRange();
      var rangeRight = createRange(true);

      function stubArray() {
        return [];
      }

      function stubFalse() {
        return false;
      }

      function stubObject() {
        return {};
      }

      function stubString() {
        return '';
      }

      function stubTrue() {
        return true;
      }

      function times(n, iteratee) {
        n = toInteger(n);

        if (n < 1 || n > MAX_SAFE_INTEGER) {
          return [];
        }

        var index = MAX_ARRAY_LENGTH,
            length = nativeMin(n, MAX_ARRAY_LENGTH);
        iteratee = getIteratee(iteratee);
        n -= MAX_ARRAY_LENGTH;
        var result = baseTimes(length, iteratee);

        while (++index < n) {
          iteratee(index);
        }

        return result;
      }

      function toPath(value) {
        if (isArray(value)) {
          return arrayMap(value, toKey);
        }

        return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
      }

      function uniqueId(prefix) {
        var id = ++idCounter;
        return toString(prefix) + id;
      }

      var add = createMathOperation(function (augend, addend) {
        return augend + addend;
      }, 0);
      var ceil = createRound('ceil');
      var divide = createMathOperation(function (dividend, divisor) {
        return dividend / divisor;
      }, 1);
      var floor = createRound('floor');

      function max(array) {
        return array && array.length ? baseExtremum(array, identity, baseGt) : undefined$1;
      }

      function maxBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined$1;
      }

      function mean(array) {
        return baseMean(array, identity);
      }

      function meanBy(array, iteratee) {
        return baseMean(array, getIteratee(iteratee, 2));
      }

      function min(array) {
        return array && array.length ? baseExtremum(array, identity, baseLt) : undefined$1;
      }

      function minBy(array, iteratee) {
        return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined$1;
      }

      var multiply = createMathOperation(function (multiplier, multiplicand) {
        return multiplier * multiplicand;
      }, 1);
      var round = createRound('round');
      var subtract = createMathOperation(function (minuend, subtrahend) {
        return minuend - subtrahend;
      }, 0);

      function sum(array) {
        return array && array.length ? baseSum(array, identity) : 0;
      }

      function sumBy(array, iteratee) {
        return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
      }

      lodash.after = after;
      lodash.ary = ary;
      lodash.assign = assign;
      lodash.assignIn = assignIn;
      lodash.assignInWith = assignInWith;
      lodash.assignWith = assignWith;
      lodash.at = at;
      lodash.before = before;
      lodash.bind = bind;
      lodash.bindAll = bindAll;
      lodash.bindKey = bindKey;
      lodash.castArray = castArray;
      lodash.chain = chain;
      lodash.chunk = chunk;
      lodash.compact = compact;
      lodash.concat = concat;
      lodash.cond = cond;
      lodash.conforms = conforms;
      lodash.constant = constant;
      lodash.countBy = countBy;
      lodash.create = create;
      lodash.curry = curry;
      lodash.curryRight = curryRight;
      lodash.debounce = debounce;
      lodash.defaults = defaults;
      lodash.defaultsDeep = defaultsDeep;
      lodash.defer = defer;
      lodash.delay = delay;
      lodash.difference = difference;
      lodash.differenceBy = differenceBy;
      lodash.differenceWith = differenceWith;
      lodash.drop = drop;
      lodash.dropRight = dropRight;
      lodash.dropRightWhile = dropRightWhile;
      lodash.dropWhile = dropWhile;
      lodash.fill = fill;
      lodash.filter = filter;
      lodash.flatMap = flatMap;
      lodash.flatMapDeep = flatMapDeep;
      lodash.flatMapDepth = flatMapDepth;
      lodash.flatten = flatten;
      lodash.flattenDeep = flattenDeep;
      lodash.flattenDepth = flattenDepth;
      lodash.flip = flip;
      lodash.flow = flow;
      lodash.flowRight = flowRight;
      lodash.fromPairs = fromPairs;
      lodash.functions = functions;
      lodash.functionsIn = functionsIn;
      lodash.groupBy = groupBy;
      lodash.initial = initial;
      lodash.intersection = intersection;
      lodash.intersectionBy = intersectionBy;
      lodash.intersectionWith = intersectionWith;
      lodash.invert = invert;
      lodash.invertBy = invertBy;
      lodash.invokeMap = invokeMap;
      lodash.iteratee = iteratee;
      lodash.keyBy = keyBy;
      lodash.keys = keys;
      lodash.keysIn = keysIn;
      lodash.map = map;
      lodash.mapKeys = mapKeys;
      lodash.mapValues = mapValues;
      lodash.matches = matches;
      lodash.matchesProperty = matchesProperty;
      lodash.memoize = memoize;
      lodash.merge = merge;
      lodash.mergeWith = mergeWith;
      lodash.method = method;
      lodash.methodOf = methodOf;
      lodash.mixin = mixin;
      lodash.negate = negate;
      lodash.nthArg = nthArg;
      lodash.omit = omit;
      lodash.omitBy = omitBy;
      lodash.once = once;
      lodash.orderBy = orderBy;
      lodash.over = over;
      lodash.overArgs = overArgs;
      lodash.overEvery = overEvery;
      lodash.overSome = overSome;
      lodash.partial = partial;
      lodash.partialRight = partialRight;
      lodash.partition = partition;
      lodash.pick = pick;
      lodash.pickBy = pickBy;
      lodash.property = property;
      lodash.propertyOf = propertyOf;
      lodash.pull = pull;
      lodash.pullAll = pullAll;
      lodash.pullAllBy = pullAllBy;
      lodash.pullAllWith = pullAllWith;
      lodash.pullAt = pullAt;
      lodash.range = range;
      lodash.rangeRight = rangeRight;
      lodash.rearg = rearg;
      lodash.reject = reject;
      lodash.remove = remove;
      lodash.rest = rest;
      lodash.reverse = reverse;
      lodash.sampleSize = sampleSize;
      lodash.set = set;
      lodash.setWith = setWith;
      lodash.shuffle = shuffle;
      lodash.slice = slice;
      lodash.sortBy = sortBy;
      lodash.sortedUniq = sortedUniq;
      lodash.sortedUniqBy = sortedUniqBy;
      lodash.split = split;
      lodash.spread = spread;
      lodash.tail = tail;
      lodash.take = take;
      lodash.takeRight = takeRight;
      lodash.takeRightWhile = takeRightWhile;
      lodash.takeWhile = takeWhile;
      lodash.tap = tap;
      lodash.throttle = throttle;
      lodash.thru = thru;
      lodash.toArray = toArray;
      lodash.toPairs = toPairs;
      lodash.toPairsIn = toPairsIn;
      lodash.toPath = toPath;
      lodash.toPlainObject = toPlainObject;
      lodash.transform = transform;
      lodash.unary = unary;
      lodash.union = union;
      lodash.unionBy = unionBy;
      lodash.unionWith = unionWith;
      lodash.uniq = uniq;
      lodash.uniqBy = uniqBy;
      lodash.uniqWith = uniqWith;
      lodash.unset = unset;
      lodash.unzip = unzip;
      lodash.unzipWith = unzipWith;
      lodash.update = update;
      lodash.updateWith = updateWith;
      lodash.values = values;
      lodash.valuesIn = valuesIn;
      lodash.without = without;
      lodash.words = words;
      lodash.wrap = wrap;
      lodash.xor = xor;
      lodash.xorBy = xorBy;
      lodash.xorWith = xorWith;
      lodash.zip = zip;
      lodash.zipObject = zipObject;
      lodash.zipObjectDeep = zipObjectDeep;
      lodash.zipWith = zipWith;
      lodash.entries = toPairs;
      lodash.entriesIn = toPairsIn;
      lodash.extend = assignIn;
      lodash.extendWith = assignInWith;
      mixin(lodash, lodash);
      lodash.add = add;
      lodash.attempt = attempt;
      lodash.camelCase = camelCase;
      lodash.capitalize = capitalize;
      lodash.ceil = ceil;
      lodash.clamp = clamp;
      lodash.clone = clone;
      lodash.cloneDeep = cloneDeep;
      lodash.cloneDeepWith = cloneDeepWith;
      lodash.cloneWith = cloneWith;
      lodash.conformsTo = conformsTo;
      lodash.deburr = deburr;
      lodash.defaultTo = defaultTo;
      lodash.divide = divide;
      lodash.endsWith = endsWith;
      lodash.eq = eq;
      lodash.escape = escape;
      lodash.escapeRegExp = escapeRegExp;
      lodash.every = every;
      lodash.find = find;
      lodash.findIndex = findIndex;
      lodash.findKey = findKey;
      lodash.findLast = findLast;
      lodash.findLastIndex = findLastIndex;
      lodash.findLastKey = findLastKey;
      lodash.floor = floor;
      lodash.forEach = forEach;
      lodash.forEachRight = forEachRight;
      lodash.forIn = forIn;
      lodash.forInRight = forInRight;
      lodash.forOwn = forOwn;
      lodash.forOwnRight = forOwnRight;
      lodash.get = get;
      lodash.gt = gt;
      lodash.gte = gte;
      lodash.has = has;
      lodash.hasIn = hasIn;
      lodash.head = head;
      lodash.identity = identity;
      lodash.includes = includes;
      lodash.indexOf = indexOf;
      lodash.inRange = inRange;
      lodash.invoke = invoke;
      lodash.isArguments = isArguments;
      lodash.isArray = isArray;
      lodash.isArrayBuffer = isArrayBuffer;
      lodash.isArrayLike = isArrayLike;
      lodash.isArrayLikeObject = isArrayLikeObject;
      lodash.isBoolean = isBoolean;
      lodash.isBuffer = isBuffer;
      lodash.isDate = isDate;
      lodash.isElement = isElement;
      lodash.isEmpty = isEmpty;
      lodash.isEqual = isEqual;
      lodash.isEqualWith = isEqualWith;
      lodash.isError = isError;
      lodash.isFinite = isFinite;
      lodash.isFunction = isFunction;
      lodash.isInteger = isInteger;
      lodash.isLength = isLength;
      lodash.isMap = isMap;
      lodash.isMatch = isMatch;
      lodash.isMatchWith = isMatchWith;
      lodash.isNaN = isNaN;
      lodash.isNative = isNative;
      lodash.isNil = isNil;
      lodash.isNull = isNull;
      lodash.isNumber = isNumber;
      lodash.isObject = isObject;
      lodash.isObjectLike = isObjectLike;
      lodash.isPlainObject = isPlainObject;
      lodash.isRegExp = isRegExp;
      lodash.isSafeInteger = isSafeInteger;
      lodash.isSet = isSet;
      lodash.isString = isString;
      lodash.isSymbol = isSymbol;
      lodash.isTypedArray = isTypedArray;
      lodash.isUndefined = isUndefined;
      lodash.isWeakMap = isWeakMap;
      lodash.isWeakSet = isWeakSet;
      lodash.join = join;
      lodash.kebabCase = kebabCase;
      lodash.last = last;
      lodash.lastIndexOf = lastIndexOf;
      lodash.lowerCase = lowerCase;
      lodash.lowerFirst = lowerFirst;
      lodash.lt = lt;
      lodash.lte = lte;
      lodash.max = max;
      lodash.maxBy = maxBy;
      lodash.mean = mean;
      lodash.meanBy = meanBy;
      lodash.min = min;
      lodash.minBy = minBy;
      lodash.stubArray = stubArray;
      lodash.stubFalse = stubFalse;
      lodash.stubObject = stubObject;
      lodash.stubString = stubString;
      lodash.stubTrue = stubTrue;
      lodash.multiply = multiply;
      lodash.nth = nth;
      lodash.noConflict = noConflict;
      lodash.noop = noop;
      lodash.now = now;
      lodash.pad = pad;
      lodash.padEnd = padEnd;
      lodash.padStart = padStart;
      lodash.parseInt = parseInt;
      lodash.random = random;
      lodash.reduce = reduce;
      lodash.reduceRight = reduceRight;
      lodash.repeat = repeat;
      lodash.replace = replace;
      lodash.result = result;
      lodash.round = round;
      lodash.runInContext = runInContext;
      lodash.sample = sample;
      lodash.size = size;
      lodash.snakeCase = snakeCase;
      lodash.some = some;
      lodash.sortedIndex = sortedIndex;
      lodash.sortedIndexBy = sortedIndexBy;
      lodash.sortedIndexOf = sortedIndexOf;
      lodash.sortedLastIndex = sortedLastIndex;
      lodash.sortedLastIndexBy = sortedLastIndexBy;
      lodash.sortedLastIndexOf = sortedLastIndexOf;
      lodash.startCase = startCase;
      lodash.startsWith = startsWith;
      lodash.subtract = subtract;
      lodash.sum = sum;
      lodash.sumBy = sumBy;
      lodash.template = template;
      lodash.times = times;
      lodash.toFinite = toFinite;
      lodash.toInteger = toInteger;
      lodash.toLength = toLength;
      lodash.toLower = toLower;
      lodash.toNumber = toNumber;
      lodash.toSafeInteger = toSafeInteger;
      lodash.toString = toString;
      lodash.toUpper = toUpper;
      lodash.trim = trim;
      lodash.trimEnd = trimEnd;
      lodash.trimStart = trimStart;
      lodash.truncate = truncate;
      lodash.unescape = unescape;
      lodash.uniqueId = uniqueId;
      lodash.upperCase = upperCase;
      lodash.upperFirst = upperFirst;
      lodash.each = forEach;
      lodash.eachRight = forEachRight;
      lodash.first = head;
      mixin(lodash, function () {
        var source = {};
        baseForOwn(lodash, function (func, methodName) {
          if (!hasOwnProperty.call(lodash.prototype, methodName)) {
            source[methodName] = func;
          }
        });
        return source;
      }(), {
        'chain': false
      });
      lodash.VERSION = VERSION;
      arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
        lodash[methodName].placeholder = lodash;
      });
      arrayEach(['drop', 'take'], function (methodName, index) {
        LazyWrapper.prototype[methodName] = function (n) {
          n = n === undefined$1 ? 1 : nativeMax(toInteger(n), 0);
          var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();

          if (result.__filtered__) {
            result.__takeCount__ = nativeMin(n, result.__takeCount__);
          } else {
            result.__views__.push({
              'size': nativeMin(n, MAX_ARRAY_LENGTH),
              'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
            });
          }

          return result;
        };

        LazyWrapper.prototype[methodName + 'Right'] = function (n) {
          return this.reverse()[methodName](n).reverse();
        };
      });
      arrayEach(['filter', 'map', 'takeWhile'], function (methodName, index) {
        var type = index + 1,
            isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

        LazyWrapper.prototype[methodName] = function (iteratee) {
          var result = this.clone();

          result.__iteratees__.push({
            'iteratee': getIteratee(iteratee, 3),
            'type': type
          });

          result.__filtered__ = result.__filtered__ || isFilter;
          return result;
        };
      });
      arrayEach(['head', 'last'], function (methodName, index) {
        var takeName = 'take' + (index ? 'Right' : '');

        LazyWrapper.prototype[methodName] = function () {
          return this[takeName](1).value()[0];
        };
      });
      arrayEach(['initial', 'tail'], function (methodName, index) {
        var dropName = 'drop' + (index ? '' : 'Right');

        LazyWrapper.prototype[methodName] = function () {
          return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
        };
      });

      LazyWrapper.prototype.compact = function () {
        return this.filter(identity);
      };

      LazyWrapper.prototype.find = function (predicate) {
        return this.filter(predicate).head();
      };

      LazyWrapper.prototype.findLast = function (predicate) {
        return this.reverse().find(predicate);
      };

      LazyWrapper.prototype.invokeMap = baseRest(function (path, args) {
        if (typeof path == 'function') {
          return new LazyWrapper(this);
        }

        return this.map(function (value) {
          return baseInvoke(value, path, args);
        });
      });

      LazyWrapper.prototype.reject = function (predicate) {
        return this.filter(negate(getIteratee(predicate)));
      };

      LazyWrapper.prototype.slice = function (start, end) {
        start = toInteger(start);
        var result = this;

        if (result.__filtered__ && (start > 0 || end < 0)) {
          return new LazyWrapper(result);
        }

        if (start < 0) {
          result = result.takeRight(-start);
        } else if (start) {
          result = result.drop(start);
        }

        if (end !== undefined$1) {
          end = toInteger(end);
          result = end < 0 ? result.dropRight(-end) : result.take(end - start);
        }

        return result;
      };

      LazyWrapper.prototype.takeRightWhile = function (predicate) {
        return this.reverse().takeWhile(predicate).reverse();
      };

      LazyWrapper.prototype.toArray = function () {
        return this.take(MAX_ARRAY_LENGTH);
      };

      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
            isTaker = /^(?:head|last)$/.test(methodName),
            lodashFunc = lodash[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
            retUnwrapped = isTaker || /^find/.test(methodName);

        if (!lodashFunc) {
          return;
        }

        lodash.prototype[methodName] = function () {
          var value = this.__wrapped__,
              args = isTaker ? [1] : arguments,
              isLazy = value instanceof LazyWrapper,
              iteratee = args[0],
              useLazy = isLazy || isArray(value);

          var interceptor = function interceptor(value) {
            var result = lodashFunc.apply(lodash, arrayPush([value], args));
            return isTaker && chainAll ? result[0] : result;
          };

          if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
            isLazy = useLazy = false;
          }

          var chainAll = this.__chain__,
              isHybrid = !!this.__actions__.length,
              isUnwrapped = retUnwrapped && !chainAll,
              onlyLazy = isLazy && !isHybrid;

          if (!retUnwrapped && useLazy) {
            value = onlyLazy ? value : new LazyWrapper(this);
            var result = func.apply(value, args);

            result.__actions__.push({
              'func': thru,
              'args': [interceptor],
              'thisArg': undefined$1
            });

            return new LodashWrapper(result, chainAll);
          }

          if (isUnwrapped && onlyLazy) {
            return func.apply(this, args);
          }

          result = this.thru(interceptor);
          return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
        };
      });
      arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
        var func = arrayProto[methodName],
            chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
            retUnwrapped = /^(?:pop|shift)$/.test(methodName);

        lodash.prototype[methodName] = function () {
          var args = arguments;

          if (retUnwrapped && !this.__chain__) {
            var value = this.value();
            return func.apply(isArray(value) ? value : [], args);
          }

          return this[chainName](function (value) {
            return func.apply(isArray(value) ? value : [], args);
          });
        };
      });
      baseForOwn(LazyWrapper.prototype, function (func, methodName) {
        var lodashFunc = lodash[methodName];

        if (lodashFunc) {
          var key = lodashFunc.name + '';

          if (!hasOwnProperty.call(realNames, key)) {
            realNames[key] = [];
          }

          realNames[key].push({
            'name': methodName,
            'func': lodashFunc
          });
        }
      });
      realNames[createHybrid(undefined$1, WRAP_BIND_KEY_FLAG).name] = [{
        'name': 'wrapper',
        'func': undefined$1
      }];
      LazyWrapper.prototype.clone = lazyClone;
      LazyWrapper.prototype.reverse = lazyReverse;
      LazyWrapper.prototype.value = lazyValue;
      lodash.prototype.at = wrapperAt;
      lodash.prototype.chain = wrapperChain;
      lodash.prototype.commit = wrapperCommit;
      lodash.prototype.next = wrapperNext;
      lodash.prototype.plant = wrapperPlant;
      lodash.prototype.reverse = wrapperReverse;
      lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
      lodash.prototype.first = lodash.prototype.head;

      if (symIterator) {
        lodash.prototype[symIterator] = wrapperToIterator;
      }

      return lodash;
    };

    var _ = runInContext();

    if (freeModule) {
        (freeModule.exports = _)._ = _;
        freeExports._ = _;
      } else {
        root._ = _;
      }
  }).call(commonjsGlobal);
});

var PTSelectAddress = function PTSelectAddress(_ref) {
  var _formData$address5;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      setError = _ref.setError,
      clearErrors = _ref.clearErrors,
      formState = _ref.formState;
  var allCities = Digit.Hooks.pt.useTenants();
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var presentInModifyApplication = pathname.includes("modify");
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;
  if (presentInModifyApplication) isEditProperty = true;
  if (formData !== null && formData !== void 0 && formData.isUpdateProperty) isEditProperty = true;

  var _ref2 = (formData === null || formData === void 0 ? void 0 : formData.address) || "",
      pincode = _ref2.pincode;

  var cities = userType === "employee" ? allCities.filter(function (city) {
    return city.code === tenantId;
  }) : pincode ? allCities.filter(function (city) {
    var _city$pincode;

    return city === null || city === void 0 ? void 0 : (_city$pincode = city.pincode) === null || _city$pincode === void 0 ? void 0 : _city$pincode.some(function (pin) {
      return pin == pincode;
    });
  }) : allCities;

  var _useState = useState(function () {
    var _formData$address;

    return (formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.city) || null;
  }),
      selectedCity = _useState[0],
      setSelectedCity = _useState[1];

  var _Digit$Hooks$useBound = Digit.Hooks.useBoundaryLocalities(selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.code, "revenue", {
    enabled: !!selectedCity
  }, t),
      fetchedLocalities = _Digit$Hooks$useBound.data;

  var _useState2 = useState(),
      localities = _useState2[0],
      setLocalities = _useState2[1];

  var _useState3 = useState(),
      selectedLocality = _useState3[0],
      setSelectedLocality = _useState3[1];

  useEffect(function () {
    if (userType === "employee" && presentInModifyApplication && localities !== null && localities !== void 0 && localities.length) {
      var _formData$originalDat, _formData$originalDat2, _formData$originalDat3;

      var code = formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : (_formData$originalDat2 = _formData$originalDat.address) === null || _formData$originalDat2 === void 0 ? void 0 : (_formData$originalDat3 = _formData$originalDat2.locality) === null || _formData$originalDat3 === void 0 ? void 0 : _formData$originalDat3.code;

      var _locality = localities === null || localities === void 0 ? void 0 : localities.filter(function (e) {
        return e.code === code;
      })[0];

      setValue("locality", _locality);
    }
  }, [localities]);
  useEffect(function () {
    if (cities) {
      if (cities.length === 1) {
        setSelectedCity(cities[0]);
      }
    }
  }, [cities]);
  useEffect(function () {
    if (selectedCity && fetchedLocalities) {
      var _formData$address2, _formData$address3;

      var __localityList = fetchedLocalities;
      var filteredLocalityList = [];

      if (formData !== null && formData !== void 0 && (_formData$address2 = formData.address) !== null && _formData$address2 !== void 0 && _formData$address2.locality) {
        setSelectedLocality(formData.address.locality);
      }

      if (formData !== null && formData !== void 0 && (_formData$address3 = formData.address) !== null && _formData$address3 !== void 0 && _formData$address3.pincode) {
        var _formData$address4;

        filteredLocalityList = __localityList.filter(function (obj) {
          var _obj$pincode;

          return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(function (item) {
            return item == formData.address.pincode;
          });
        });
        if (!(formData !== null && formData !== void 0 && (_formData$address4 = formData.address) !== null && _formData$address4 !== void 0 && _formData$address4.locality)) setSelectedLocality();
      }

      setLocalities(function () {
        return filteredLocalityList.length > 0 ? filteredLocalityList : __localityList;
      });

      if (filteredLocalityList.length === 1) {
        setSelectedLocality(filteredLocalityList[0]);

        if (userType === "employee") {
          onSelect(config.key, _extends({}, formData[config.key], {
            locality: filteredLocalityList[0]
          }));
        }
      }
    }
  }, [selectedCity, formData === null || formData === void 0 ? void 0 : (_formData$address5 = formData.address) === null || _formData$address5 === void 0 ? void 0 : _formData$address5.pincode, fetchedLocalities]);

  function selectCity(city) {
    setSelectedLocality(null);
    setLocalities(null);
    setSelectedCity(city);
  }

  function selectLocality(locality) {
    var _formData$address6;

    if (formData !== null && formData !== void 0 && (_formData$address6 = formData.address) !== null && _formData$address6 !== void 0 && _formData$address6.locality) {
      formData.address["locality"] = locality;
    }

    setSelectedLocality(locality);

    if (userType === "employee") {
      onSelect(config.key, _extends({}, formData[config.key], {
        locality: locality
      }));
    }
  }

  function onSubmit() {
    onSelect(config.key, {
      city: selectedCity,
      locality: selectedLocality
    });
  }

  var _useForm = useForm(),
      control = _useForm.control,
      localFormState = _useForm.formState,
      watch = _useForm.watch,
      setLocalError = _useForm.setError,
      clearLocalErrors = _useForm.clearErrors,
      setValue = _useForm.setValue;

  var formValue = watch();
  var errors = localFormState.errors;
  var errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  useEffect(function () {
    if (userType === "employee") {
      var keys = Object.keys(formValue);
      var part = {};
      keys.forEach(function (key) {
        var _formData$config$key;

        return part[key] = (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key[key];
      });
      if (!lodash.isEqual(formValue, part)) onSelect(config.key, _extends({}, formData[config.key], formValue));

      for (var key in formValue) {
        if (!formValue[key] && !(localFormState !== null && localFormState !== void 0 && localFormState.errors[key])) {
          setLocalError(key, {
            type: key.toUpperCase() + "_REQUIRED",
            message: t("CORE_COMMON_REQUIRED_ERRMSG")
          });
        } else if (formValue[key] && localFormState.errors[key]) {
          clearLocalErrors([key]);
        }
      }
    }
  }, [formValue]);
  useEffect(function () {
    if (userType === "employee") {
      var _formState$errors, _formState$errors2;

      var errorsPresent = !!Object.keys(localFormState.errors).lengtha;
      if (errorsPresent && !((_formState$errors = formState.errors) !== null && _formState$errors !== void 0 && _formState$errors[config.key])) setError(config.key, {
        type: "required"
      });else if (!errorsPresent && (_formState$errors2 = formState.errors) !== null && _formState$errors2 !== void 0 && _formState$errors2[config.key]) clearErrors(config.key);
    }
  }, [localFormState]);

  if (userType === "employee") {
    var _errors$city, _errors$locality;

    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller"
    }, t("MYCITY_CODE_LABEL") + " *"), /*#__PURE__*/React.createElement(Controller, {
      name: "city",
      defaultValue: (cities === null || cities === void 0 ? void 0 : cities.length) === 1 ? cities[0] : selectedCity,
      control: control,
      render: function render(props) {
        return /*#__PURE__*/React.createElement(Dropdown, {
          className: "form-field",
          selected: props.value,
          disable: isEditProperty ? isEditProperty : (cities === null || cities === void 0 ? void 0 : cities.length) === 1,
          option: cities,
          select: props.onChange,
          optionKey: "code",
          onBlur: props.onBlur,
          t: t
        });
      }
    })), /*#__PURE__*/React.createElement(CardLabelError, {
      style: errorStyle
    }, localFormState.touched.city ? errors === null || errors === void 0 ? void 0 : (_errors$city = errors.city) === null || _errors$city === void 0 ? void 0 : _errors$city.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller"
    }, t("PT_LOCALITY_LABEL") + " *"), /*#__PURE__*/React.createElement(Controller, {
      name: "locality",
      defaultValue: null,
      control: control,
      render: function render(props) {
        return /*#__PURE__*/React.createElement(Dropdown, {
          className: "form-field",
          selected: props.value,
          option: localities,
          select: props.onChange,
          onBlur: props.onBlur,
          optionKey: "i18nkey",
          t: t,
          disable: isEditProperty ? isEditProperty : false
        });
      }
    })), /*#__PURE__*/React.createElement(CardLabelError, {
      style: errorStyle
    }, localFormState.touched.locality ? errors === null || errors === void 0 ? void 0 : (_errors$locality = errors.locality) === null || _errors$locality === void 0 ? void 0 : _errors$locality.message : ""));
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: onSubmit,
    t: t,
    isDisabled: selectedLocality ? false : true
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardLabel, null, t("MYCITY_CODE_LABEL") + " "), /*#__PURE__*/React.createElement("span", {
    className: "form-pt-dropdown-only"
  }, /*#__PURE__*/React.createElement(RadioOrSelect, {
    options: cities.sort(function (a, b) {
      return a.name.localeCompare(b.name);
    }),
    selectedOption: selectedCity,
    optionKey: "code",
    onSelect: selectCity,
    t: t,
    isDependent: true,
    labelKey: "TENANT_TENANTS",
    disabled: isEditProperty
  })), selectedCity && localities && /*#__PURE__*/React.createElement(CardLabel, null, t("PT_LOCALITY_LABEL") + " "), selectedCity && localities && /*#__PURE__*/React.createElement("span", {
    className: "form-pt-dropdown-only"
  }, /*#__PURE__*/React.createElement(RadioOrSelect, {
    dropdownStyle: {
      paddingBottom: "20px"
    },
    isMandatory: config.isMandatory,
    options: localities.sort(function (a, b) {
      return a.name.localeCompare(b.name);
    }),
    selectedOption: selectedLocality,
    optionKey: "i18nkey",
    onSelect: selectLocality,
    t: t,
    labelKey: "",
    disabled: isEditProperty
  }))));
};

var PTSelectGeolocation = function PTSelectGeolocation(_ref) {
  var _formData$address, _formData$address2, _defaultConfig$Proper;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      _ref$formData = _ref.formData,
      formData = _ref$formData === void 0 ? {} : _ref$formData;

  var _useState = useState((formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.pincode) || ""),
      pincode = _useState[0],
      setPincode = _useState[1];

  var _useState2 = useState((formData === null || formData === void 0 ? void 0 : (_formData$address2 = formData.address) === null || _formData$address2 === void 0 ? void 0 : _formData$address2.geoLocation) || {}),
      geoLocation = _useState2[0],
      setGeoLocation = _useState2[1];

  var tenants = Digit.Hooks.pt.useTenants();

  var _useState3 = useState(null),
      pincodeServicability = _useState3[0],
      setPincodeServicability = _useState3[1];

  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "MapConfig"),
      _Digit$Hooks$pt$usePr2 = _Digit$Hooks$pt$usePr.data,
      defaultConfig = _Digit$Hooks$pt$usePr2 === void 0 ? {} : _Digit$Hooks$pt$usePr2;

  var defaultcoord = defaultConfig === null || defaultConfig === void 0 ? void 0 : (_defaultConfig$Proper = defaultConfig.PropertyTax) === null || _defaultConfig$Proper === void 0 ? void 0 : _defaultConfig$Proper.MapConfig;
  var defaultcoord1 = defaultcoord ? defaultcoord[0] : {};

  var onSkip = function onSkip() {
    return onSelect();
  };

  var _onChange = function onChange(code, location) {
    setPincodeServicability(null);
    var foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(function (obj) {
      var _obj$pincode;

      return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(function (item) {
        return item == code;
      });
    });

    if (!foundValue) {
      setPincodeServicability("PT_COMMON_PINCODE_NOT_SERVICABLE");
      setPincode("");
      setGeoLocation({});
    } else {
      setPincode(code);
      setGeoLocation(location);
    }
  };

  return /*#__PURE__*/React.createElement(LocationSearchCard, {
    header: t("PT_GEOLOCATON_HEADER"),
    cardText: t("PT_GEOLOCATION_TEXT"),
    nextText: t("PT_COMMON_NEXT"),
    skipAndContinueText: t("CORE_COMMON_SKIP_CONTINUE"),
    skip: onSkip,
    t: t,
    position: geoLocation,
    onSave: function onSave() {
      return onSelect(config.key, {
        geoLocation: geoLocation,
        pincode: pincode
      });
    },
    onChange: function onChange(code, location) {
      return _onChange(code, location);
    },
    disabled: pincode === "" || isEditProperty,
    forcedError: t(pincodeServicability),
    cardBodyStyle: cardBodyStyle,
    isPTDefault: true,
    PTdefaultcoord: defaultcoord1
  });
};

var PTSelectStreet = function PTSelectStreet(_ref) {
  var t = _ref.t,
      config = _ref.config,
      _onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      formState = _ref.formState,
      setError = _ref.setError,
      clearErrors = _ref.clearErrors;

  var onSkip = function onSkip() {
    return _onSelect();
  };

  var _useState = useState({
    index: -1,
    type: ""
  }),
      focusIndex = _useState[0],
      setFocusIndex = _useState[1];

  var _useForm = useForm(),
      control = _useForm.control,
      localFormState = _useForm.formState,
      watch = _useForm.watch,
      trigger = _useForm.trigger;

  var formValue = watch();
  var errors = localFormState.errors;
  var checkLocation = window.location.href.includes("tl/new-application") || window.location.href.includes("tl/renew-application-details");
  var isRenewal = window.location.href.includes("edit-application") || window.location.href.includes("tl/renew-application-details");
  var inputs;

  if (window.location.href.includes("tl")) {
    inputs = config.inputs;
    config.inputs[0].disable = window.location.href.includes("edit-application");
    config.inputs[1].disable = window.location.href.includes("edit-application");
  } else {
    inputs = [{
      label: "PT_PROPERTY_ADDRESS_STREET_NAME",
      type: "text",
      name: "street",
      validation: {
        pattern: "[a-zA-Z0-9 ]{1,255}",
        title: t("CORE_COMMON_STREET_INVALID")
      }
    }, {
      label: "PT_PROPERTY_ADDRESS_HOUSE_NO",
      type: "text",
      name: "doorNo",
      validation: {
        pattern: "[A-Za-z0-9#,/ -()]{1,63}",
        title: t("CORE_COMMON_DOOR_INVALID")
      }
    }];
  }

  var convertValidationToRules = function convertValidationToRules(_ref2) {
    var validation = _ref2.validation,
        name = _ref2.name,
        messages = _ref2.messages;

    if (validation) {
      var _ref3 = validation || {},
          valPattern = _ref3.pattern,
          maxlength = _ref3.maxlength,
          minlength = _ref3.minlength,
          valReq = _ref3.required;

      var pattern = function pattern(value) {
        if (valPattern) {
          var _RegExp;

          if (valPattern instanceof RegExp) return valPattern.test(value) ? true : (messages === null || messages === void 0 ? void 0 : messages.pattern) || name.toUpperCase() + "_PATTERN";else if (typeof valPattern === "string") return (_RegExp = new RegExp(valPattern)) !== null && _RegExp !== void 0 && _RegExp.test(value) ? true : (messages === null || messages === void 0 ? void 0 : messages.pattern) || name.toUpperCase() + "_PATTERN";
        }

        return true;
      };

      var maxLength = function maxLength(value) {
        return maxlength ? (value === null || value === void 0 ? void 0 : value.length) <= maxlength ? true : (messages === null || messages === void 0 ? void 0 : messages.maxlength) || name.toUpperCase() + "_MAXLENGTH" : true;
      };

      var minLength = function minLength(value) {
        return minlength ? (value === null || value === void 0 ? void 0 : value.length) >= minlength ? true : (messages === null || messages === void 0 ? void 0 : messages.minlength) || name.toUpperCase() + "_MINLENGTH" : true;
      };

      var required = function required(value) {
        return valReq ? !!value ? true : (messages === null || messages === void 0 ? void 0 : messages.required) || name.toUpperCase() + "_REQUIRED" : true;
      };

      return {
        pattern: pattern,
        required: required,
        minLength: minLength,
        maxLength: maxLength
      };
    }

    return {};
  };

  useEffect(function () {
    trigger();
  }, []);
  useEffect(function () {
    if (userType === "employee") {
      var _formState$errors$con;

      if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) setError(config.key, {
        type: errors
      });else if (!Object.keys(errors).length && formState.errors[config.key]) clearErrors(config.key);
    }
  }, [errors]);
  useEffect(function () {
    var keys = Object.keys(formValue);
    var part = {};
    keys.forEach(function (key) {
      var _formData$config$key;

      return part[key] = (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key[key];
    });

    if (!lodash.isEqual(formValue, part)) {
      _onSelect(config.key, _extends({}, formData[config.key], formValue));

      trigger();
    }
  }, [formValue]);

  if (userType === "employee") {
    var _inputs;

    return (_inputs = inputs) === null || _inputs === void 0 ? void 0 : _inputs.map(function (input, index) {
      var _formData$address;

      return /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, !checkLocation ? t(input.label) : t(input.label) + ":", config.isMandatory ? " * " : null), /*#__PURE__*/React.createElement("div", {
        className: "field"
      }, /*#__PURE__*/React.createElement(Controller, {
        control: control,
        defaultValue: formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address[input.name],
        name: input.name,
        rules: {
          validate: convertValidationToRules(input)
        },
        render: function render(_props) {
          return /*#__PURE__*/React.createElement(TextInput, _extends({
            id: input.name,
            key: input.name,
            value: _props.value,
            onChange: function onChange(e) {
              setFocusIndex({
                index: index
              });

              _props.onChange(e.target.value);
            },
            onBlur: _props.onBlur,
            disable: isRenewal,
            autoFocus: (focusIndex === null || focusIndex === void 0 ? void 0 : focusIndex.index) == index
          }, input.validation));
        }
      })));
    });
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    config: _extends({}, config, {
      inputs: inputs
    }),
    _defaultValues: {
      street: formData === null || formData === void 0 ? void 0 : formData.address.street,
      doorNo: formData === null || formData === void 0 ? void 0 : formData.address.doorNo
    },
    onSelect: function onSelect(data) {
      return _onSelect(config.key, data);
    },
    onSkip: onSkip,
    t: t
  });
};

var PTSelectPincode = function PTSelectPincode(_ref) {
  var _formData$address3;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      _ref$formData = _ref.formData,
      formData = _ref$formData === void 0 ? {} : _ref$formData,
      userType = _ref.userType;
  var tenants = Digit.Hooks.pt.useTenants();

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var presentInModifyApplication = pathname.includes("modify");

  var _useState = useState(function () {
    var _formData$originalDat, _formData$originalDat2, _formData$address;

    if (presentInModifyApplication && userType === "employee") return (formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : (_formData$originalDat2 = _formData$originalDat.address) === null || _formData$originalDat2 === void 0 ? void 0 : _formData$originalDat2.pincode) || "";
    return (formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.pincode) || "";
  }),
      pincode = _useState[0],
      setPincode = _useState[1];

  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;
  if (formData !== null && formData !== void 0 && formData.isUpdateProperty) isEditProperty = true;
  var inputs = [{
    label: "PT_PROPERTY_ADDRESS_PINCODE",
    type: "text",
    name: "pincode",
    disable: isEditProperty,
    validation: {
      minlength: 6,
      maxlength: 7,
      pattern: "[0-9]+",
      max: "9999999",
      title: t("PT_PROPERTY_ADDRESS_PINCODE_INVALID")
    }
  }];

  var _useState2 = useState(null),
      pincodeServicability = _useState2[0],
      setPincodeServicability = _useState2[1];

  var _useState3 = useState(""),
      error = _useState3[0],
      setLocalError = _useState3[1];

  useEffect(function () {
    var _formData$address2;

    if (formData !== null && formData !== void 0 && (_formData$address2 = formData.address) !== null && _formData$address2 !== void 0 && _formData$address2.pincode) {
      setPincode(formData.address.pincode);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$address3 = formData.address) === null || _formData$address3 === void 0 ? void 0 : _formData$address3.pincode]);

  function onChange(e) {
    setPincode(e.target.value);
    setPincodeServicability(null);
    setLocalError("");
    var validPincode = Digit.Utils.getPattern("Pincode").test(e.target.value);

    if (userType === "employee") {
      if (e.target.value && !validPincode) setLocalError(t("ERR_DEFAULT_INPUT_FIELD_MSG"));

      if (validPincode) {
        var foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(function (obj) {
          var _obj$pincode;

          return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(function (item) {
            return item.toString() === e.target.value;
          });
        });
        if (!foundValue) setLocalError(t("PT_COMMON_PINCODE_NOT_SERVICABLE"));
      }

      onSelect(config.key, _extends({}, formData.address, {
        pincode: e.target.value
      }));
    }
  }

  var goNext = function goNext(data) {
    try {
      var foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(function (obj) {
        var _obj$pincode2;

        return (_obj$pincode2 = obj.pincode) === null || _obj$pincode2 === void 0 ? void 0 : _obj$pincode2.find(function (item) {
          return item == (data === null || data === void 0 ? void 0 : data.pincode);
        });
      });

      if (foundValue) {
        onSelect(config.key, {
          pincode: pincode
        });
      } else {
        setPincodeServicability("PT_COMMON_PINCODE_NOT_SERVICABLE");
      }

      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };

  if (userType === "employee") {
    return inputs === null || inputs === void 0 ? void 0 : inputs.map(function (input, index) {
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller"
      }, t(input.label)), /*#__PURE__*/React.createElement("div", {
        className: "field"
      }, /*#__PURE__*/React.createElement(TextInput, _extends({
        key: input.name,
        value: pincode,
        onChange: onChange
      }, input.validation, {
        disable: presentInModifyApplication,
        autoFocus: presentInModifyApplication
      })))), error ? /*#__PURE__*/React.createElement(CardLabelError, {
        style: {
          width: "70%",
          marginLeft: "30%",
          fontSize: "12px",
          marginTop: "-21px"
        }
      }, error) : null);
    });
  }

  var onSkip = function onSkip() {
    return onSelect();
  };

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: _extends({}, config, {
      inputs: inputs
    }),
    onSelect: goNext,
    _defaultValues: {
      pincode: pincode
    },
    onChange: onChange,
    onSkip: onSkip,
    forcedError: t(pincodeServicability),
    isDisabled: !pincode || isEditProperty
  });
};

var RentalDetails = function RentalDetails(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var validation = {};

  var onSkip = function onSkip() {
    return onSelect();
  };

  var RentArea, AnnualRent;
  var setRentArea, setAnnualRent;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].RentArea);

    RentArea = _useState[0];
    setRentArea = _useState[1];

    var _useState2 = useState(formData.units && formData.units[index] && formData.units[index].AnnualRent);

    AnnualRent = _useState2[0];
    setAnnualRent = _useState2[1];
  } else {
    var _formData$Constructio, _formData$Constructio2;

    var _useState3 = useState((_formData$Constructio = formData.Constructiondetails) === null || _formData$Constructio === void 0 ? void 0 : _formData$Constructio.RentArea);

    RentArea = _useState3[0];
    setRentArea = _useState3[1];

    var _useState4 = useState((_formData$Constructio2 = formData.Constructiondetails) === null || _formData$Constructio2 === void 0 ? void 0 : _formData$Constructio2.AnnualRent);

    AnnualRent = _useState4[0];
    setAnnualRent = _useState4[1];
  }

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "RentalDetails"),
      Menu = _Digit$Hooks$pt$usePr.data;

  if (Menu) {
    var _Menu$PropertyTax, _Menu$PropertyTax$Ren, _Menu$PropertyTax2, _Menu$PropertyTax2$Re;

    config.texts.cardText = Menu !== null && Menu !== void 0 && (_Menu$PropertyTax = Menu.PropertyTax) !== null && _Menu$PropertyTax !== void 0 && (_Menu$PropertyTax$Ren = _Menu$PropertyTax.RentalDetails[0]) !== null && _Menu$PropertyTax$Ren !== void 0 && _Menu$PropertyTax$Ren.code ? "PT_ASSESSMENT_FLOW_RENTAL_DETAIL_" + (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax2 = Menu.PropertyTax) === null || _Menu$PropertyTax2 === void 0 ? void 0 : (_Menu$PropertyTax2$Re = _Menu$PropertyTax2.RentalDetails[0]) === null || _Menu$PropertyTax2$Re === void 0 ? void 0 : _Menu$PropertyTax2$Re.code) : "";
  }

  var _useState5 = useState(null),
      unitareaerror = _useState5[0],
      setunitareaerror = _useState5[1];

  var _useState6 = useState(null),
      areanotzeroerror = _useState6[0],
      setareanotzeroerror = _useState6[1];

  function setPropertyRentArea(e) {
    var _formData$PropertyTyp, _formData$PropertyTyp2, _formData$floordetail, _formData$landarea;

    setRentArea(e.target.value);
    setunitareaerror(null);
    setareanotzeroerror(null);

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp = formData.PropertyType) === null || _formData$PropertyTyp === void 0 ? void 0 : _formData$PropertyTyp.code) === "BUILTUP.INDEPENDENTPROPERTY") {
      var _formData$units$index, _formData$units$index2;

      var totalarea = parseInt((formData === null || formData === void 0 ? void 0 : (_formData$units$index = formData.units[index]) === null || _formData$units$index === void 0 ? void 0 : _formData$units$index.floorarea) || 0) + parseInt(e.target.value);

      if (parseInt(formData === null || formData === void 0 ? void 0 : (_formData$units$index2 = formData.units[index]) === null || _formData$units$index2 === void 0 ? void 0 : _formData$units$index2.builtUpArea) < totalarea) {
        setunitareaerror("PT_TOTUNITAREA_LESS_THAN_BUILTUP_ERR_MSG");
      }
    }

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp2 = formData.PropertyType) === null || _formData$PropertyTyp2 === void 0 ? void 0 : _formData$PropertyTyp2.code) === "BUILTUP.SHAREDPROPERTY" && parseInt(formData === null || formData === void 0 ? void 0 : (_formData$floordetail = formData.floordetails) === null || _formData$floordetail === void 0 ? void 0 : _formData$floordetail.builtUpArea) < parseInt(e.target.value) + parseInt((formData === null || formData === void 0 ? void 0 : (_formData$landarea = formData.landarea) === null || _formData$landarea === void 0 ? void 0 : _formData$landarea.floorarea) || "0")) {
      setunitareaerror("PT_RENTED_AREA_LESS_THAN_BUILTUP");
    }

    if (parseInt(e.target.value) == 0) {
      setareanotzeroerror("PT_AREA_NOT_0_MSG");
    }
  }

  function setPropertyAnnualRent(e) {
    setAnnualRent(e.target.value);
  }

  var getheaderCaption = function getheaderCaption() {
    var _formData$PropertyTyp3;

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp3 = formData.PropertyType) === null || _formData$PropertyTyp3 === void 0 ? void 0 : _formData$PropertyTyp3.i18nKey) === "COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY") {
      return "PT_FLOOR_DETAILS_HEADER";
    } else {
      return "PROPERTYTAX_FLOOR_" + index + "_DETAILS";
    }
  };

  var goNext = function goNext() {
    if (!isNaN(index)) {
      var unit = formData.units && formData.units[index];

      var floordet = _extends({}, unit, {
        RentArea: RentArea,
        AnnualRent: AnnualRent
      });

      onSelect(config.key, floordet, false, index);
    } else {
      onSelect("Constructiondetails", {
        RentArea: RentArea,
        AnnualRent: AnnualRent
      });
    }
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    config: (config.texts.headerCaption = getheaderCaption(), config),
    onSelect: goNext,
    onSkip: onSkip,
    forcedError: t(unitareaerror) || t(areanotzeroerror),
    t: t,
    isDisabled: unitareaerror || areanotzeroerror || !RentArea || !AnnualRent,
    showErrorBelowChildren: true
  }, /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FLOOR_DETAILS_RENTED_AREA_LABEL")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    isMandatory: false,
    type: "number",
    optionKey: "i18nKey",
    name: "RentArea",
    value: RentArea,
    onChange: setPropertyRentArea
  }, validation = {
    pattern: "^([0-9]){0,8}$",
    type: "number",
    title: t("PT_RENT_AREA_ERROR_MESSAGE")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FLOOR_DETAILS_ANNUAL_RENT_LABEL")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    isMandatory: false,
    type: "number",
    optionKey: "i18nKey",
    name: "AnnualRent",
    value: AnnualRent,
    onChange: setPropertyAnnualRent
  }, validation = {
    pattern: "^([0-9]){0,8}$",
    type: "number",
    title: t("PT_BUILT_AREA_ERROR_MESSAGE")
  }))), /*#__PURE__*/React.createElement(CitizenInfoLabel, {
    info: t("CS_FILE_APPLICATION_INFO_LABEL"),
    text: t("PT_RENTAL_AREA_INFO_MSG")
  }));
};

var SelectInistitutionOwnerDetails = function SelectInistitutionOwnerDetails(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");
  var isMutation = url.includes("property-mutation");
  var index = 0;
  var validation = {};
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useState = useState(formData.owners && formData.owners[index] && formData.owners[index].inistitutionName),
      inistitutionName = _useState[0],
      setInistitutionName = _useState[1];

  var _useState2 = useState(formData.owners && formData.owners[index] && formData.owners[index].inistitutetype),
      inistitutetype = _useState2[0],
      setInistitutetype = _useState2[1];

  var _useState3 = useState(formData.owners && formData.owners[index] && formData.owners[index].name),
      name = _useState3[0],
      setName = _useState3[1];

  var _useState4 = useState(formData.owners && formData.owners[index] && formData.owners[index].designation),
      designation = _useState4[0],
      setDesignation = _useState4[1];

  var _useState5 = useState(formData.owners && formData.owners[index] && formData.owners[index].mobileNumber),
      mobileNumber = _useState5[0],
      setMobileNumber = _useState5[1];

  var _useState6 = useState(formData.owners && formData.owners[index] && formData.owners[index].altContactNumber),
      altContactNumber = _useState6[0],
      setAltContactNumber = _useState6[1];

  var _useState7 = useState(formData.owners && formData.owners[index] && formData.owners[index].emailId),
      emailId = _useState7[0],
      setEmailId = _useState7[1];

  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;

  function setInistitution(e) {
    setInistitutionName(e.target.value);
  }

  function setTypeOfInistituteName(inistitutetype) {
    setInistitutetype(inistitutetype);
  }

  function setInistituteName(e) {
    setName(e.target.value);
  }

  function setDesignationName(e) {
    setDesignation(e.target.value);
  }

  function setMobileNo(e) {
    setMobileNumber(e.target.value);
  }

  function setAltContactNo(e) {
    setAltContactNumber(e.target.value);
  }

  function setEmail(e) {
    setEmailId(e.target.value);
  }

  var formDropdown = function formDropdown(category) {
    var name = category.name,
        code = category.code;
    return {
      label: name,
      value: code,
      code: t("PROPERTYTAX_BILLING_SLAB_" + code)
    };
  };

  var getDropdwonForInstitution = function getDropdwonForInstitution() {
    var _PropertyTaxPayload$P;

    var SubOwnerShipCategory = {};
    var PropertyTaxPayload = JSON.parse(sessionStorage.getItem("getSubPropertyOwnerShipCategory"));
    var SubOwnerShipCategoryOb = PropertyTaxPayload === null || PropertyTaxPayload === void 0 ? void 0 : (_PropertyTaxPayload$P = PropertyTaxPayload.PropertyTax) === null || _PropertyTaxPayload$P === void 0 ? void 0 : _PropertyTaxPayload$P.SubOwnerShipCategory;
    SubOwnerShipCategoryOb && SubOwnerShipCategoryOb.length > 0 && SubOwnerShipCategoryOb.map(function (category) {
      SubOwnerShipCategory[category.code] = category;
    });
    var institutedropDown = [];
    var value = formData.ownershipCategory.value || "";
    SubOwnerShipCategory && Object.keys(SubOwnerShipCategory).filter(function (subCategory) {
      return SubOwnerShipCategory[subCategory].ownerShipCategory === value;
    }).forEach(function (linkedCategory) {
      institutedropDown.push(formDropdown(SubOwnerShipCategory[linkedCategory]));
    });
    institutedropDown.sort(function (a, b) {
      return a.label.localeCompare(b.label);
    });
    return institutedropDown;
  };

  var goNext = function goNext() {
    var ownerDetails = formData.owners && formData.owners[index];

    if (ownerDetails) {
      ownerDetails["inistitutionName"] = inistitutionName;
      ownerDetails["inistitutetype"] = inistitutetype;
      ownerDetails["name"] = name;
      ownerDetails["designation"] = designation;
      ownerDetails["mobileNumber"] = mobileNumber;
      ownerDetails["altContactNumber"] = altContactNumber;
      ownerDetails["emailId"] = emailId;
      onSelect(config.key, isMutation ? [ownerDetails] : ownerDetails, false, index);
    } else {
      var ownerStep = _extends({}, ownerDetails, {
        inistitutionName: inistitutionName,
        inistitutetype: inistitutetype,
        name: name,
        designation: designation,
        mobileNumber: mobileNumber,
        altContactNumber: altContactNumber,
        emailId: emailId
      });

      if (isMutation) onSelect(config.key, [ownerStep], false, index);else onSelect(config.key, ownerStep, false, index);
    }
  };

  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    t: t,
    onSelect: goNext,
    isDisabled: !inistitutionName || !inistitutetype || !name || !designation || !mobileNumber || !altContactNumber
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_COMMON_INSTITUTION_NAME")), /*#__PURE__*/React.createElement(TextInput, _extends({
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "institutionName",
    onChange: setInistitution,
    value: inistitutionName,
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    title: t("PT_NAME_ERROR_MESSAGE")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_TYPE_OF_INSTITUTION")), /*#__PURE__*/React.createElement(Dropdown, {
    t: t,
    isMandatory: false,
    option: getDropdwonForInstitution() || [],
    selected: inistitutetype,
    optionKey: "code",
    select: setTypeOfInistituteName,
    disabled: isUpdateProperty || isEditProperty
  }), /*#__PURE__*/React.createElement(CardHeader, null, t("PT_AUTH_PERSON_DETAILS")), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_OWNER_NAME")), /*#__PURE__*/React.createElement(TextInput, _extends({
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "name",
    onChange: setInistituteName,
    value: name,
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    title: t("PT_NAME_ERROR_MESSAGE")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_COMMON_AUTHORISED_PERSON_DESIGNATION")), /*#__PURE__*/React.createElement(TextInput, _extends({
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "designation",
    onChange: setDesignationName,
    value: designation,
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    title: t("PT_DESIGNATION_ERROR_MESSAGE")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FORM3_MOBILE_NUMBER")), /*#__PURE__*/React.createElement(TextInput, _extends({
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "setMobileNo",
    onChange: setMobileNo,
    value: mobileNumber,
    type: "tel",
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "[6-9]{1}[0-9]{9}",
    type: "tel",
    title: t("CORE_COMMON_APPLICANT_ALT_NUMBER_INVALID")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_OWNERSHIP_INFO_TEL_PHONE_NO")), /*#__PURE__*/React.createElement(TextInput, _extends({
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "altContactNumber",
    onChange: setAltContactNo,
    value: altContactNumber,
    type: "tel",
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "^[0-9]{11}$",
    type: "tel",
    title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
  })), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_FORM3_EMAIL_ID")), /*#__PURE__*/React.createElement(TextInput, {
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "email",
    onChange: setEmail,
    type: "email",
    value: emailId,
    disable: isUpdateProperty || isEditProperty
  })));
};

var SelectOwnerAddress = function SelectOwnerAddress(_ref) {
  var _formData$owners;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      _ref$ownerIndex = _ref.ownerIndex,
      ownerIndex = _ref$ownerIndex === void 0 ? 0 : _ref$ownerIndex;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");
  var isMutation = url.includes("property-mutation");
  var index = isMutation ? ownerIndex : window.location.href.charAt(window.location.href.length - 1);

  var _useState = useState(formData.owners && formData.owners[index] && formData.owners[index].permanentAddress || (formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.permanentAddress) || ""),
      permanentAddress = _useState[0],
      setPermanentAddress = _useState[1];

  var _useState2 = useState(formData.owners && formData.owners[index] && formData.owners[index].isCorrespondenceAddress),
      isCorrespondenceAddress = _useState2[0],
      setIsCorrespondenceAddress = _useState2[1];

  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;

  function setOwnerPermanentAddress(e) {
    setPermanentAddress(e.target.value);
  }

  function setCorrespondenceAddress(e) {
    if (e.target.checked == true) {
      var _formData$searchResul, _formData$searchResul2, _address$locality, _address$city;

      var address = isMutation ? formData === null || formData === void 0 ? void 0 : (_formData$searchResul = formData.searchResult) === null || _formData$searchResul === void 0 ? void 0 : (_formData$searchResul2 = _formData$searchResul.property) === null || _formData$searchResul2 === void 0 ? void 0 : _formData$searchResul2.address : formData === null || formData === void 0 ? void 0 : formData.address;
      var obj = {
        doorNo: address === null || address === void 0 ? void 0 : address.doorNo,
        street: address === null || address === void 0 ? void 0 : address.street,
        landmark: address === null || address === void 0 ? void 0 : address.landmark,
        locality: address === null || address === void 0 ? void 0 : (_address$locality = address.locality) === null || _address$locality === void 0 ? void 0 : _address$locality.i18nkey,
        city: address === null || address === void 0 ? void 0 : (_address$city = address.city) === null || _address$city === void 0 ? void 0 : _address$city.code,
        pincode: address === null || address === void 0 ? void 0 : address.pincode
      };
      var addressDetails = "";

      for (var key in obj) {
        if (key == "pincode") addressDetails += obj[key] ? obj[key] : "";else addressDetails += obj[key] ? t(obj[key]) + ", " : "";
      }

      setPermanentAddress(addressDetails);
    } else {
      setPermanentAddress("");
    }

    setIsCorrespondenceAddress(e.target.checked);
  }

  var goNext = function goNext() {
    if (userType === "employee") {
      onSelect(config.key, _extends({}, formData[config.key], {
        permanentAddress: permanentAddress,
        isCorrespondenceAddress: isCorrespondenceAddress
      }), index);
    } else {
      var ownerDetails = formData.owners && formData.owners[index];
      ownerDetails["permanentAddress"] = permanentAddress;
      ownerDetails["isCorrespondenceAddress"] = isCorrespondenceAddress;
      if (isMutation) onSelect(config.key, [ownerDetails], "", index);else onSelect(config.key, ownerDetails, "", index);
    }
  };

  useEffect(function () {
    if (userType === "employee") {
      goNext();
    }
  }, [permanentAddress]);

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(LabelFieldPair, {
      key: index
    }, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller",
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, t("PT_OWNERS_ADDRESS")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      name: "address",
      onChange: setOwnerPermanentAddress,
      value: permanentAddress,
      disable: editScreen
    })));
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    t: t,
    onSelect: goNext,
    isDisabled: !permanentAddress
  }, /*#__PURE__*/React.createElement(TextArea, {
    isMandatory: false,
    optionKey: "i18nKey",
    t: t,
    name: "address",
    onChange: setOwnerPermanentAddress,
    value: permanentAddress,
    disable: isUpdateProperty || isEditProperty
  }), /*#__PURE__*/React.createElement(CheckBox, {
    label: t("PT_COMMON_SAME_AS_PROPERTY_ADDRESS"),
    onChange: setCorrespondenceAddress,
    value: isCorrespondenceAddress,
    checked: isCorrespondenceAddress || false,
    style: {
      paddingTop: "10px"
    },
    disable: isUpdateProperty || isEditProperty
  }));
};

var SelectOwnerDetails = function SelectOwnerDetails(_ref) {
  var _formData$owners, _formData$owners2, _formData$owners3, _formData$owners4, _formData$owners5, _formData$owners6;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      ownerIndex = _ref.ownerIndex;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");
  var mutationScreen = url.includes("/property-mutation/");
  var index = mutationScreen ? ownerIndex : window.location.href.charAt(window.location.href.length - 1);
  var validation = {};

  var _useState = useState(formData.owners && formData.owners[index] && formData.owners[index].name || (formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.name) || ""),
      name = _useState[0],
      setName = _useState[1];

  var _useState2 = useState(formData.owners && formData.owners[index] && formData.owners[index].email || (formData === null || formData === void 0 ? void 0 : (_formData$owners2 = formData.owners) === null || _formData$owners2 === void 0 ? void 0 : _formData$owners2.emailId) || ""),
      email = _useState2[0],
      setEmail = _useState2[1];

  var _useState3 = useState(formData.owners && formData.owners[index] && formData.owners[index].gender || (formData === null || formData === void 0 ? void 0 : (_formData$owners3 = formData.owners) === null || _formData$owners3 === void 0 ? void 0 : _formData$owners3.gender)),
      gender = _useState3[0],
      setGender = _useState3[1];

  var _useState4 = useState(formData.owners && formData.owners[index] && formData.owners[index].mobileNumber || (formData === null || formData === void 0 ? void 0 : (_formData$owners4 = formData.owners) === null || _formData$owners4 === void 0 ? void 0 : _formData$owners4.mobileNumber) || ""),
      mobileNumber = _useState4[0],
      setMobileNumber = _useState4[1];

  var _useState5 = useState(formData.owners && formData.owners[index] && formData.owners[index].fatherOrHusbandName || (formData === null || formData === void 0 ? void 0 : (_formData$owners5 = formData.owners) === null || _formData$owners5 === void 0 ? void 0 : _formData$owners5.fatherOrHusbandName) || ""),
      fatherOrHusbandName = _useState5[0],
      setFatherOrHusbandName = _useState5[1];

  var _useState6 = useState(formData.owners && formData.owners[index] && formData.owners[index].relationship || (formData === null || formData === void 0 ? void 0 : (_formData$owners6 = formData.owners) === null || _formData$owners6 === void 0 ? void 0 : _formData$owners6.relationship) || {}),
      relationship = _useState6[0],
      setRelationship = _useState6[1];

  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$useGe = Digit.Hooks.pt.useGenderMDMS(stateId, "common-masters", "GenderType"),
      Menu = _Digit$Hooks$pt$useGe.data;

  var menu = [];
  Menu && Menu.map(function (genderDetails) {
    menu.push({
      i18nKey: "PT_COMMON_GENDER_" + genderDetails.code,
      code: "" + genderDetails.code,
      value: "" + genderDetails.code
    });
  });

  function setOwnerName(e) {
    setName(e.target.value);
  }

  function setOwnerEmail(e) {
    setEmail(e.target.value);
  }

  function setGenderName(value) {
    setGender(value);
  }

  function setMobileNo(e) {
    setMobileNumber(e.target.value);
  }

  function setGuardiansName(e) {
    setFatherOrHusbandName(e.target.value);
  }

  function setGuardianName(value) {
    setRelationship(value);
  }

  var goNext = function goNext() {
    var owner = formData.owners && formData.owners[index];
    var ownerStep;

    if (userType === "employee") {
      ownerStep = _extends({}, owner, {
        name: name,
        gender: gender,
        mobileNumber: mobileNumber,
        fatherOrHusbandName: fatherOrHusbandName,
        relationship: relationship,
        emailId: email
      });
      onSelect(config.key, _extends({}, formData[config.key], ownerStep), false, index);
    } else {
      if (mutationScreen) {
        ownerStep = _extends({}, owner, {
          name: name,
          gender: gender,
          mobileNumber: mobileNumber,
          fatherOrHusbandName: fatherOrHusbandName,
          relationship: relationship
        });
        onSelect("", ownerStep);
        return;
      }

      ownerStep = _extends({}, owner, {
        name: name,
        gender: gender,
        mobileNumber: mobileNumber,
        fatherOrHusbandName: fatherOrHusbandName,
        relationship: relationship
      });
      onSelect(config.key, ownerStep, false, index);
    }
  };

  var onSkip = function onSkip() {
    return onSelect();
  };
  var GuardianOptions = [{
    name: "HUSBAND",
    code: "HUSBAND",
    i18nKey: "PT_RELATION_HUSBAND"
  }, {
    name: "Father",
    code: "FATHER",
    i18nKey: "PT_RELATION_FATHER"
  }];
  useEffect(function () {
    if (userType === "employee") {
      goNext();
    }
  }, [name, gender, mobileNumber, fatherOrHusbandName, relationship]);

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, "" + t("PT_FORM3_MOBILE_NUMBER")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, _extends({
      type: "text",
      t: t,
      isMandatory: false,
      name: "mobileNumber",
      value: mobileNumber,
      onChange: setMobileNo
    }, validation = {
      isRequired: true,
      pattern: "[6-9]{1}[0-9]{9}",
      type: "tel",
      title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
    }, {
      disable: editScreen
    })))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, "" + t("PT_OWNER_NAME")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, _extends({
      t: t,
      type: "text",
      isMandatory: false,
      name: "name",
      value: name,
      onChange: setOwnerName
    }, validation = {
      isRequired: true,
      pattern: "^[a-zA-Z-.`' ]*$",
      type: "tel",
      title: t("PT_NAME_ERROR_MESSAGE")
    }, {
      disable: editScreen
    })))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, "" + t("PT_FORM3_GUARDIAN_NAME")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, _extends({
      t: t,
      type: "text",
      isMandatory: false,
      name: "fatherOrHusbandName",
      value: fatherOrHusbandName,
      onChange: setGuardiansName
    }, validation = {
      pattern: "^[a-zA-Z-.`' ]*$",
      type: "tel",
      title: t("PT_NAME_ERROR_MESSAGE")
    }, {
      disable: editScreen
    })))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, "" + t("PT_FORM3_RELATIONSHIP")), /*#__PURE__*/React.createElement(Dropdown, {
      className: "form-field",
      selected: (relationship === null || relationship === void 0 ? void 0 : relationship.length) === 1 ? relationship[0] : relationship,
      disable: (relationship === null || relationship === void 0 ? void 0 : relationship.length) === 1 || editScreen,
      option: GuardianOptions,
      select: setGuardianName,
      optionKey: "i18nKey",
      t: t,
      name: "relationship"
    })), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, "" + t("PT_FORM3_GENDER")), /*#__PURE__*/React.createElement(Dropdown, {
      className: "form-field",
      selected: (gender === null || gender === void 0 ? void 0 : gender.length) === 1 ? gender[0] : gender,
      disable: (gender === null || gender === void 0 ? void 0 : gender.length) === 1 || editScreen,
      option: menu,
      select: setGenderName,
      optionKey: "code",
      t: t,
      name: "gender"
    })), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, "" + t("PT_OWNER_EMAIL")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      t: t,
      type: "email",
      isMandatory: false,
      optionKey: "i18nKey",
      name: "email",
      value: email,
      onChange: setOwnerEmail,
      disable: editScreen
    }))));
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    t: t,
    isDisabled: !name || !mobileNumber || !gender || !relationship || !fatherOrHusbandName
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_OWNER_NAME")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    type: "text",
    isMandatory: false,
    optionKey: "i18nKey",
    name: "name",
    value: name,
    onChange: setOwnerName,
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    type: "text",
    title: t("PT_NAME_ERROR_MESSAGE")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FORM3_GENDER")), /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    options: menu,
    optionsKey: "code",
    name: "gender",
    value: gender,
    selectedOption: gender,
    onSelect: setGenderName,
    isDependent: true,
    labelKey: "PT_COMMON_GENDER",
    disabled: isUpdateProperty || isEditProperty
  }), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FORM3_MOBILE_NUMBER")), /*#__PURE__*/React.createElement(MobileNumber, _extends({
    value: mobileNumber,
    name: "mobileNumber",
    onChange: function onChange(value) {
      return setMobileNo({
        target: {
          value: value
        }
      });
    },
    disable: isUpdateProperty || isEditProperty
  }, {
    required: true,
    pattern: "[6-9]{1}[0-9]{9}",
    type: "tel",
    title: t("CORE_COMMON_APPLICANT_MOBILE_NUMBER_INVALID")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FORM3_GUARDIAN_NAME")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    type: "text",
    isMandatory: false,
    optionKey: "i18nKey",
    name: "fatherOrHusbandName",
    value: fatherOrHusbandName,
    onChange: setGuardiansName,
    disable: isUpdateProperty || isEditProperty
  }, validation = {
    isRequired: true,
    pattern: "^[a-zA-Z-.`' ]*$",
    type: "text",
    title: t("PT_NAME_ERROR_MESSAGE")
  })), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_FORM3_RELATIONSHIP")), /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    name: "relationship",
    options: GuardianOptions,
    value: relationship,
    selectedOption: relationship,
    onSelect: setGuardianName,
    isDependent: true,
    labelKey: "PT_RELATION",
    disabled: isUpdateProperty || isEditProperty
  })));
};

var SelectOwnerShipDetails = function SelectOwnerShipDetails(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      onBlur = _ref.onBlur,
      formState = _ref.formState,
      setError = _ref.setError,
      clearErrors = _ref.clearErrors;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : formData.ownershipCategory),
      ownershipCategory = _useState[0],
      setOwnershipCategory = _useState[1];

  var _useState2 = useState(true),
      loader = _useState2[0],
      setLoader = _useState2[1];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "SubOwnerShipCategory"),
      SubOwnerShipCategoryOb = _Digit$Hooks$pt$usePr.data,
      isLoading = _Digit$Hooks$pt$usePr.isLoading;

  var _Digit$Hooks$pt$usePr2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "OwnerShipCategory"),
      OwnerShipCategoryOb = _Digit$Hooks$pt$usePr2.data,
      ownerShipCatLoading = _Digit$Hooks$pt$usePr2.isLoading;

  var ownerShipdropDown = [];
  var subCategoriesInOwnersType = ["INDIVIDUAL"];
  var OwnerShipCategory = {};
  var SubOwnerShipCategory = {};

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");
  useEffect(function () {
    if (!isLoading && SubOwnerShipCategoryOb && OwnerShipCategoryOb) {
      var preFilledPropertyType = SubOwnerShipCategoryOb.filter(function (ownershipCategory) {
        var _formData$ownershipCa;

        return ownershipCategory.code === ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : _formData$ownershipCa.value) || (formData === null || formData === void 0 ? void 0 : formData.ownershipCategory));
      })[0];
      setOwnershipCategory(preFilledPropertyType);
    }
  }, [formData === null || formData === void 0 ? void 0 : formData.ownershipCategory, SubOwnerShipCategoryOb]);
  useEffect(function () {
    if (userType === "employee" && editScreen && !isLoading && !ownerShipCatLoading && OwnerShipCategoryOb) {
      var arr = getDropdwonForProperty(ownerShipdropDown);
      var defaultValue = arr.filter(function (e) {
        var _formData$originalDat;

        return e.code === (formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : _formData$originalDat.ownershipCategory);
      })[0];
      selectedValue(defaultValue);
      setLoader(false);
    }
  }, [isLoading, ownerShipCatLoading, OwnerShipCategoryOb]);
  OwnerShipCategoryOb && OwnerShipCategoryOb.length > 0 && OwnerShipCategoryOb.map(function (category) {
    OwnerShipCategory[category.code] = category;
  });
  SubOwnerShipCategoryOb && SubOwnerShipCategoryOb.length > 0 && SubOwnerShipCategoryOb.map(function (category) {
    SubOwnerShipCategory[category.code] = category;
  });
  getOwnerDetails();

  function formDropdown(category) {
    var name = category.name,
        code = category.code;
    return {
      label: name,
      value: code,
      code: code
    };
  }

  function getDropdwonForProperty(ownerShipdropDown) {
    if (userType === "employee") {
      var _ownerShipdropDown$fi, _ownerShipdropDown$fi2;

      var arr = ownerShipdropDown === null || ownerShipdropDown === void 0 ? void 0 : (_ownerShipdropDown$fi = ownerShipdropDown.filter(function (e) {
        return e.code.split(".").length <= 2;
      })) === null || _ownerShipdropDown$fi === void 0 ? void 0 : (_ownerShipdropDown$fi2 = _ownerShipdropDown$fi.splice(0, 4)) === null || _ownerShipdropDown$fi2 === void 0 ? void 0 : _ownerShipdropDown$fi2.map(function (ownerShipDetails) {
        return _extends({}, ownerShipDetails, {
          i18nKey: "PT_OWNERSHIP_" + (ownerShipDetails.value.split(".")[1] ? ownerShipDetails.value.split(".")[1] : ownerShipDetails.value.split(".")[0])
        });
      });
      return arr;
    }

    return ownerShipdropDown && ownerShipdropDown.length && ownerShipdropDown.splice(0, 4).map(function (ownerShipDetails) {
      return _extends({}, ownerShipDetails, {
        i18nKey: "PT_OWNERSHIP_" + (ownerShipDetails.value.split(".")[1] ? ownerShipDetails.value.split(".")[1] : ownerShipDetails.value.split(".")[0])
      });
    });
  }

  function getOwnerDetails() {
    if (OwnerShipCategory && SubOwnerShipCategory) {
      Object.keys(OwnerShipCategory).forEach(function (category) {
        var categoryCode = OwnerShipCategory[category].code;

        if (subCategoriesInOwnersType.indexOf(categoryCode) !== -1) {
          Object.keys(SubOwnerShipCategory).filter(function (subCategory) {
            return categoryCode === SubOwnerShipCategory[subCategory].ownerShipCategory;
          }).forEach(function (linkedCategory) {
            ownerShipdropDown.push(formDropdown(SubOwnerShipCategory[linkedCategory]));
          });
        } else {
          ownerShipdropDown.push(formDropdown(OwnerShipCategory[category]));
        }
      });
    }
  }

  function selectedValue(value) {
    setOwnershipCategory(value);
  }

  var onSkip = function onSkip() {
    return onSelect();
  };

  function goNext() {
    var index = window.location.href.charAt(window.location.href.length - 1);
    sessionStorage.setItem("ownershipCategory", ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.value);
    onSelect(config.key, ownershipCategory, "", index, null, {
      routeKey: ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.value
    });
  }

  useEffect(function () {
    if (userType === "employee") {
      if (!ownershipCategory) setError(config.key, {
        type: "required",
        message: t("CORE_COMMON_REQUIRED_ERRMSG")
      });else clearErrors(config.key);
      goNext();
    }
  }, [ownershipCategory]);

  if (userType === "employee" && editScreen && loader) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  if (userType === "employee") {
    var _getDropdwonForProper, _getDropdwonForProper2, _formState$touched, _formState$errors$con;

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      className: "card-label-smaller",
      style: editScreen ? {
        color: "#B1B4B6"
      } : {}
    }, t("PT_PROVIDE_OWNERSHIP_DETAILS") + " *"), /*#__PURE__*/React.createElement(Dropdown, {
      className: "form-field",
      selected: ((_getDropdwonForProper = getDropdwonForProperty(ownerShipdropDown)) === null || _getDropdwonForProper === void 0 ? void 0 : _getDropdwonForProper.length) === 1 ? getDropdwonForProperty(ownerShipdropDown)[0] : ownershipCategory,
      disable: ((_getDropdwonForProper2 = getDropdwonForProperty(ownerShipdropDown)) === null || _getDropdwonForProper2 === void 0 ? void 0 : _getDropdwonForProper2.length) === 1 || editScreen,
      option: getDropdwonForProperty(ownerShipdropDown),
      select: selectedValue,
      optionKey: "i18nKey",
      onBlur: onBlur,
      t: t
    })), (_formState$touched = formState.touched) !== null && _formState$touched !== void 0 && _formState$touched[config.key] ? /*#__PURE__*/React.createElement(CardLabelError, {
      style: {
        width: "70%",
        marginLeft: "30%",
        fontSize: "12px",
        marginTop: "-21px"
      }
    }, (_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.message) : null);
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !ownershipCategory
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    isMandatory: config.isMandatory,
    options: getDropdwonForProperty(ownerShipdropDown) || [],
    selectedOption: ownershipCategory,
    optionsKey: "i18nKey",
    onSelect: selectedValue,
    value: ownershipCategory,
    labelKey: "PT_OWNERSHIP",
    isDependent: true,
    disabled: isUpdateProperty || isEditProperty
  })));
};

var SelectProofIdentity = function SelectProofIdentity(_ref) {
  var _formData$owners$inde4, _formData$owners$inde5, _formData$owners$inde6, _formData$owners$inde7, _formData$owners$inde8, _Documentsob$Property, _formData$ownershipCa3;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData,
      _ref$ownerIndex = _ref.ownerIndex,
      ownerIndex = _ref$ownerIndex === void 0 ? 0 : _ref$ownerIndex,
      addNewOwner = _ref.addNewOwner;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var isMutation = url.includes("property-mutation");
  var index = isMutation ? ownerIndex : window.location.href.charAt(window.location.href.length - 1);

  var _useState = useState(function () {
    var _formData$owners$inde, _formData$owners$inde2, _formData$owners$inde3;

    return (formData === null || formData === void 0 ? void 0 : (_formData$owners$inde = formData.owners[index]) === null || _formData$owners$inde === void 0 ? void 0 : (_formData$owners$inde2 = _formData$owners$inde.documents) === null || _formData$owners$inde2 === void 0 ? void 0 : (_formData$owners$inde3 = _formData$owners$inde2.proofIdentity) === null || _formData$owners$inde3 === void 0 ? void 0 : _formData$owners$inde3.fileStoreId) || null;
  }),
      uploadedFile = _useState[0],
      setUploadedFile = _useState[1];

  var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners$inde4 = formData.owners[index]) === null || _formData$owners$inde4 === void 0 ? void 0 : (_formData$owners$inde5 = _formData$owners$inde4.documents) === null || _formData$owners$inde5 === void 0 ? void 0 : _formData$owners$inde5.proofIdentity),
      file = _useState2[0],
      setFile = _useState2[1];

  var _useState3 = useState(null),
      error = _useState3[0],
      setError = _useState3[1];

  var cityDetails = Digit.ULBService.getCurrentUlb();

  var onSkip = function onSkip() {
    return onSelect();
  };

  var _useState4 = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners$inde6 = formData.owners[index]) === null || _formData$owners$inde6 === void 0 ? void 0 : (_formData$owners$inde7 = _formData$owners$inde6.documents) === null || _formData$owners$inde7 === void 0 ? void 0 : (_formData$owners$inde8 = _formData$owners$inde7.proofIdentity) === null || _formData$owners$inde8 === void 0 ? void 0 : _formData$owners$inde8.documentType),
      dropdownValue = _useState4[0],
      setDropdownValue = _useState4[1];

  var dropdownData = [];
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Documents"),
      _Digit$Hooks$pt$usePr2 = _Digit$Hooks$pt$usePr.data,
      Documentsob = _Digit$Hooks$pt$usePr2 === void 0 ? {} : _Digit$Hooks$pt$usePr2;

  var docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.Documents;
  var proofIdentity = Array.isArray(docs) && docs.filter(function (doc) {
    return doc.code.includes("IDENTITYPROOF");
  });

  if (proofIdentity.length > 0) {
    var _proofIdentity$;

    dropdownData = (_proofIdentity$ = proofIdentity[0]) === null || _proofIdentity$ === void 0 ? void 0 : _proofIdentity$.dropdownData;
    dropdownData.forEach(function (data) {
      data.i18nKey = stringReplaceAll(data.code, ".", "_");
    });
  }

  function setTypeOfDropdownValue(dropdownValue) {
    setDropdownValue(dropdownValue);
  }

  function selectfile(e) {
    setFile(e.target.files[0]);
  }

  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 2000000) {
                setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId())).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("PT_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);

  var _useState5 = useState(null),
      multipleownererror = _useState5[0],
      setmultipleownererror = _useState5[1];

  var handleSubmit = function handleSubmit() {
    var _formData$ownershipCa, _formData$owners, _formData$ownershipCa2;

    setmultipleownererror(null);

    if ((formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : _formData$ownershipCa.code) === "INDIVIDUAL.MULTIPLEOWNERS" && index == "0" && !isMutation) {
      setmultipleownererror("PT_MULTI_OWNER_ADD_ERR_MSG");
    } else if (isMutation && (formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.length) <= 1 && (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa2 = formData.ownershipCategory) === null || _formData$ownershipCa2 === void 0 ? void 0 : _formData$ownershipCa2.code) === "INDIVIDUAL.MULTIPLEOWNERS") {
      setmultipleownererror("PT_MULTI_OWNER_ADD_ERR_MSG");
    } else {
      var fileStoreId = uploadedFile;
      var fileDetails = file;

      if (fileDetails) {
        fileDetails.documentType = dropdownValue;
        fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
      }

      var ownerDetails = formData.owners && formData.owners[index];

      if (ownerDetails && ownerDetails.documents) {
        if (!isMutation) ownerDetails.documents["proofIdentity"] = fileDetails;else ownerDetails.documents["proofIdentity"] = {
          documentType: dropdownValue,
          fileStoreId: fileStoreId
        };
      } else {
        if (!isMutation) {
          ownerDetails["documents"] = [];
          ownerDetails.documents["proofIdentity"] = fileDetails;
        } else {
          ownerDetails["documents"] = {};
          ownerDetails.documents["proofIdentity"] = {
            documentType: dropdownValue,
            fileStoreId: fileStoreId
          };
        }
      }

      onSelect(config.key, isMutation ? [ownerDetails] : ownerDetails, "", index);
    }
  };

  function onAdd() {
    if (isMutation) {
      if (!uploadedFile || !dropdownValue) {
        setError(t("ERR_DEFAULT_INPUT_FIELD_MSG"));
        return;
      }

      var _ownerDetails = formData.owners && formData.owners[index];

      if (_ownerDetails && _ownerDetails.documents) {
        _ownerDetails.documents["proofIdentity"] = {
          documentType: dropdownValue,
          fileStoreId: uploadedFile
        };
      } else {
        _ownerDetails["documents"] = {};
        _ownerDetails.documents["proofIdentity"] = {
          documentType: dropdownValue,
          fileStoreId: uploadedFile
        };
      }

      addNewOwner(_ownerDetails);
      return;
    }

    var newIndex = parseInt(index) + 1;
    var fileStoreId = uploadedFile;
    var fileDetails = file;

    if (fileDetails) {
      fileDetails.documentType = dropdownValue;
      fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
    }

    var ownerDetails = formData.owners && formData.owners[index];

    if (ownerDetails && ownerDetails.documents) {
      ownerDetails.documents["proofIdentity"] = fileDetails;
    } else {
      ownerDetails["documents"] = [];
      ownerDetails.documents["proofIdentity"] = fileDetails;
    }

    onSelect("owner-details", {}, false, newIndex, true);
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    forcedError: t(multipleownererror),
    isDisabled: multipleownererror || !uploadedFile || !dropdownValue || error,
    onAdd: onAdd,
    isMultipleAllow: (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa3 = formData.ownershipCategory) === null || _formData$ownershipCa3 === void 0 ? void 0 : _formData$ownershipCa3.value) == "INDIVIDUAL.MULTIPLEOWNERS"
  }, /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_TYPES")), /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_SIZE")), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_CATEGORY_DOCUMENT_TYPE")), /*#__PURE__*/React.createElement(Dropdown, {
    t: t,
    isMandatory: false,
    option: dropdownData,
    selected: dropdownValue,
    optionKey: "i18nKey",
    select: setTypeOfDropdownValue,
    placeholder: t("PT_MUTATION_SELECT_DOC_LABEL")
  }), /*#__PURE__*/React.createElement(UploadFile, {
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf",
    onUpload: selectfile,
    onDelete: function onDelete() {
      setUploadedFile(null);
    },
    message: uploadedFile ? "1 " + t("PT_ACTION_FILEUPLOADED") : t("PT_ACTION_NO_FILEUPLOADED"),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  }));
};

var SelectSpecialOwnerCategoryType = function SelectSpecialOwnerCategoryType(_ref) {
  var _formData$owners$inde, _formData$owners;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData,
      ownerIndex = _ref.ownerIndex;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");
  var isMutation = url.includes("property-mutation");
  var index = isMutation ? ownerIndex : window.location.href.charAt(window.location.href.length - 1);
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];
  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;

  var _useState = useState(formData.owners && formData.owners[index] && ((_formData$owners$inde = formData.owners[index]) === null || _formData$owners$inde === void 0 ? void 0 : _formData$owners$inde.ownerType) || ((_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.ownerType) || {}),
      ownerType = _useState[0],
      setOwnerType = _useState[1];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "OwnerType"),
      Menu = _Digit$Hooks$pt$usePr.data,
      isLoading = _Digit$Hooks$pt$usePr.isLoading;

  Menu ? Menu.sort(function (a, b) {
    return a.name.localeCompare(b.name);
  }) : "";

  var onSkip = function onSkip() {
    return onSelect();
  };

  function setTypeOfOwner(value) {
    setOwnerType(value);
  }

  function goNext() {
    var ownerDetails = formData.owners && formData.owners[index];
    ownerDetails["ownerType"] = ownerType;
    onSelect(config.key, ownerDetails, "", index);
  }

  useEffect(function () {
    if (userType === "employee") {
      onSelect(config.key, _extends({}, formData[config.key], {
        ownerType: ownerType
      }));
    }
  }, [ownerType]);
  var inputs = [{
    label: "PT_SPECIAL_OWNER_CATEGORY",
    type: "text",
    name: "ownerSpecialCategory",
    validation: {}
  }];
  if (isLoading) return /*#__PURE__*/React.createElement(Loader, null);

  if (userType === "employee") {
    return inputs === null || inputs === void 0 ? void 0 : inputs.map(function (input, index) {
      return /*#__PURE__*/React.createElement(LabelFieldPair, {
        key: index
      }, /*#__PURE__*/React.createElement(CardLabel, {
        className: "card-label-smaller",
        style: editScreen ? {
          color: "#B1B4B6"
        } : {}
      }, t(input.label)), /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: (Menu === null || Menu === void 0 ? void 0 : Menu.length) === 1 ? Menu[0] : ownerType,
        disable: (Menu === null || Menu === void 0 ? void 0 : Menu.length) === 1 || editScreen,
        option: Menu,
        select: setTypeOfOwner,
        optionKey: "i18nKey",
        t: t
      }));
    });
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !ownerType
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: Menu || [],
    selectedOption: ownerType,
    onSelect: setTypeOfOwner,
    labelKey: "PROPERTYTAX_OWNERTYPE",
    isDependent: true,
    disabled: isUpdateProperty || isEditProperty
  })));
};

var SelectSpecialProofIdentity = function SelectSpecialProofIdentity(_ref) {
  var _formData$owners$inde4, _formData$owners$inde5, _formData$owners$inde6, _formData$owners$inde7, _formData$owners$inde8, _Documentsob$Property;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData,
      ownerIndex = _ref.ownerIndex;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");
  var isMutation = url.includes("property-mutation");
  var index = isMutation ? ownerIndex : window.location.href.charAt(window.location.href.length - 1);

  var _useState = useState(function () {
    var _formData$owners$inde, _formData$owners$inde2, _formData$owners$inde3;

    return (formData === null || formData === void 0 ? void 0 : (_formData$owners$inde = formData.owners[index]) === null || _formData$owners$inde === void 0 ? void 0 : (_formData$owners$inde2 = _formData$owners$inde.documents) === null || _formData$owners$inde2 === void 0 ? void 0 : (_formData$owners$inde3 = _formData$owners$inde2.specialProofIdentity) === null || _formData$owners$inde3 === void 0 ? void 0 : _formData$owners$inde3.fileStoreId) || null;
  }),
      uploadedFile = _useState[0],
      setUploadedFile = _useState[1];

  var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners$inde4 = formData.owners[index]) === null || _formData$owners$inde4 === void 0 ? void 0 : (_formData$owners$inde5 = _formData$owners$inde4.documents) === null || _formData$owners$inde5 === void 0 ? void 0 : _formData$owners$inde5.specialProofIdentity),
      file = _useState2[0],
      setFile = _useState2[1];

  var _useState3 = useState(null),
      error = _useState3[0],
      setError = _useState3[1];

  var cityDetails = Digit.ULBService.getCurrentUlb();
  var isUpdateProperty = (formData === null || formData === void 0 ? void 0 : formData.isUpdateProperty) || false;
  var isEditProperty = (formData === null || formData === void 0 ? void 0 : formData.isEditProperty) || false;

  var _useState4 = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners$inde6 = formData.owners[index]) === null || _formData$owners$inde6 === void 0 ? void 0 : (_formData$owners$inde7 = _formData$owners$inde6.documents) === null || _formData$owners$inde7 === void 0 ? void 0 : (_formData$owners$inde8 = _formData$owners$inde7.specialProofIdentity) === null || _formData$owners$inde8 === void 0 ? void 0 : _formData$owners$inde8.documentType),
      dropdownValue = _useState4[0],
      setDropdownValue = _useState4[1];

  var dropdownData = [];
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Documents"),
      _Digit$Hooks$pt$usePr2 = _Digit$Hooks$pt$usePr.data,
      Documentsob = _Digit$Hooks$pt$usePr2 === void 0 ? {} : _Digit$Hooks$pt$usePr2;

  var docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.Documents;
  var specialProofIdentity = Array.isArray(docs) && docs.filter(function (doc) {
    return doc.code.includes("SPECIALCATEGORYPROOF");
  });

  if (specialProofIdentity.length > 0) {
    var _specialProofIdentity, _dropdownData;

    dropdownData = (_specialProofIdentity = specialProofIdentity[0]) === null || _specialProofIdentity === void 0 ? void 0 : _specialProofIdentity.dropdownData;
    dropdownData.forEach(function (data) {
      data.i18nKey = stringReplaceAll(data.code, ".", "_");
    });
    dropdownData = (_dropdownData = dropdownData) === null || _dropdownData === void 0 ? void 0 : _dropdownData.filter(function (dropdown) {
      var _formData$owners$inde9, _formData$owners$inde10;

      return dropdown.parentValue.includes(formData === null || formData === void 0 ? void 0 : (_formData$owners$inde9 = formData.owners[index]) === null || _formData$owners$inde9 === void 0 ? void 0 : (_formData$owners$inde10 = _formData$owners$inde9.ownerType) === null || _formData$owners$inde10 === void 0 ? void 0 : _formData$owners$inde10.code);
    });

    if (dropdownData.length == 1 && dropdownValue != dropdownData[0]) {
      setTypeOfDropdownValue(dropdownData[0]);
    }
  }

  function setTypeOfDropdownValue(dropdownValue) {
    setDropdownValue(dropdownValue);
  }

  var handleSubmit = function handleSubmit() {
    var fileStoreId = uploadedFile;
    var fileDetails = file;

    if (fileDetails) {
      fileDetails.documentType = dropdownValue;
      fileDetails.fileStoreId = fileStoreId ? fileStoreId : null;
    }

    var ownerDetails = formData.owners && formData.owners[index];

    if (ownerDetails && ownerDetails.documents) {
      ownerDetails.documents["specialProofIdentity"] = fileDetails;
    } else {
      ownerDetails["documents"] = {};
      ownerDetails.documents["specialProofIdentity"] = fileDetails;
    }

    onSelect(config.key, ownerDetails, "", index);
  };

  var onSkip = function onSkip() {
    return onSelect();
  };

  useEffect(function () {
    if (formData.owners && formData.owners[index] && formData.owners[index].ownerType.code === "NONE") onSelect("", {}, true, index);
  }, [formData.owners && formData.owners[index] && formData.owners[index].ownerType.code]);

  function selectfile(e) {
    setFile(e.target.files[0]);
  }

  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 2000000) {
                setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId())).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("PT_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    t: t,
    isDisabled: !uploadedFile || !dropdownValue || error
  }, /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_TYPES")), /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_SIZE")), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_CATEGORY_DOCUMENT_TYPE")), /*#__PURE__*/React.createElement(Dropdown, {
    t: t,
    isMandatory: false,
    option: dropdownData,
    selected: dropdownValue,
    optionKey: "i18nKey",
    select: setTypeOfDropdownValue,
    placeholder: t("PT_MUTATION_SELECT_DOC_LABEL"),
    disable: isUpdateProperty || isEditProperty
  }), /*#__PURE__*/React.createElement(UploadFile, {
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf",
    onUpload: selectfile,
    onDelete: function onDelete() {
      setUploadedFile(null);
    },
    message: uploadedFile ? "1 " + t("PT_ACTION_FILEUPLOADED") : t("PT_ACTION_NO_FILEUPLOADED"),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  }));
};

var Units = function Units(_ref) {
  var _Menu$PropertyTax, _Menu$PropertyTax$Usa, _Menu$PropertyTax2, _Menu$PropertyTax4, _formData$PropertyTyp4, _formData$PropertyTyp5, _formData$usageCatego, _formState$errors2, _formState$errors2$co, _formState$errors3, _formState$errors4;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData,
      setError = _ref.setError,
      formState = _ref.formState,
      clearErrors = _ref.clearErrors;

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var presentInModifyApplication = pathname.includes("modify");
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useState = useState((formData === null || formData === void 0 ? void 0 : formData.units) || [{
    key: Date.now(),
    order: 1,
    floorNo: null,
    occupancyType: null,
    tenantId: tenantId,
    usageCategory: null,
    builtUpArea: ""
  }]),
      units = _useState[0],
      setUnits = _useState[1];

  var stateId = tenantId.split(".")[0];

  var _useState2 = useState({
    index: -1
  }),
      focusIndex = _useState2[0],
      setFocusIndex = _useState2[1];

  var _useState3 = useState(true),
      loader = _useState3[0],
      setLoader = _useState3[1];

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", ["UsageCategory", "OccupancyType", "Floor", "OwnerType", "OwnerShipCategory", "Documents", "SubOwnerShipCategory", "OwnerShipCategory"]) || {},
      Menu = _ref2.data,
      isLoading = _ref2.isLoading;

  var usagecat = [];
  usagecat = (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax = Menu.PropertyTax) === null || _Menu$PropertyTax === void 0 ? void 0 : (_Menu$PropertyTax$Usa = _Menu$PropertyTax.UsageCategory) === null || _Menu$PropertyTax$Usa === void 0 ? void 0 : _Menu$PropertyTax$Usa.filter(function (e) {
    return (e === null || e === void 0 ? void 0 : e.code) !== "MIXED";
  })) || [];
  var floorlist = [];
  floorlist = Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax2 = Menu.PropertyTax) === null || _Menu$PropertyTax2 === void 0 ? void 0 : _Menu$PropertyTax2.Floor;
  var occupencyOptions = [];
  occupencyOptions = (Menu === null || Menu === void 0 ? void 0 : (_Menu$PropertyTax4 = Menu.PropertyTax) === null || _Menu$PropertyTax4 === void 0 ? void 0 : _Menu$PropertyTax4.OccupancyType.map(function (e) {
    return _extends({
      i18nKey: "PROPERTYTAX_OCCUPANCYTYPE_" + (e === null || e === void 0 ? void 0 : e.code)
    }, e);
  })) || [];
  var floorListData = [];

  function getfloorlistdata(floorlist) {
    floorListData = (floorlist === null || floorlist === void 0 ? void 0 : floorlist.map(function (floor) {
      return {
        i18nKey: "PROPERTYTAX_FLOOR_" + stringReplaceAll(floor === null || floor === void 0 ? void 0 : floor.code, "-", "_"),
        code: floor === null || floor === void 0 ? void 0 : floor.code
      };
    })) || [];
    return floorListData;
  }

  useEffect(function () {
    if (!isLoading && presentInModifyApplication && Menu) {
      var _formData$originalDat, _formData$originalDat2, _formData$originalDat3;

      var defaultUnits = formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : (_formData$originalDat2 = _formData$originalDat.units) === null || _formData$originalDat2 === void 0 ? void 0 : (_formData$originalDat3 = _formData$originalDat2.filter(function (e) {
        return e.active;
      })) === null || _formData$originalDat3 === void 0 ? void 0 : _formData$originalDat3.map(function (unit, index) {
        var occupancyType = unit.occupancyType,
            uc = unit.usageCategory,
            constructionDetail = unit.constructionDetail,
            floorNo = unit.floorNo,
            arv = unit.arv;
        occupancyType = occupencyOptions.filter(function (e) {
          return (e === null || e === void 0 ? void 0 : e.code) === occupancyType;
        })[0];
        var usageCategory = usageCategoryMajorMenu(usagecat).filter(function (e) {
          return (e === null || e === void 0 ? void 0 : e.code) === uc;
        })[0];
        floorNo = getfloorlistdata(floorlist).filter(function (e) {
          return (e === null || e === void 0 ? void 0 : e.code) == floorNo;
        })[0];
        var key = Date.now() + index;
        var order = index + 1;
        var builtUpArea = constructionDetail.builtUpArea;
        return {
          floorNo: floorNo,
          occupancyType: occupancyType,
          usageCategory: usageCategory,
          key: key,
          order: order,
          builtUpArea: builtUpArea,
          existingUsageCategory: uc,
          arv: arv
        };
      });
      setUnits(defaultUnits || []);
      setLoader(false);
    }
  }, [isLoading]);

  var calculateNumberOfFloors = function calculateNumberOfFloors() {
    var _formData$PropertyTyp, _floorlist;

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp = formData.PropertyType) === null || _formData$PropertyTyp === void 0 ? void 0 : _formData$PropertyTyp.code) !== "BUILTUP.INDEPENDENTPROPERTY") {
      var _formState$errors$con, _formData$PropertyTyp2;

      if (((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) === "units_missing") clearErrors(config.key);

      if (formData !== null && formData !== void 0 && (_formData$PropertyTyp2 = formData.PropertyType) !== null && _formData$PropertyTyp2 !== void 0 && _formData$PropertyTyp2.code.includes("BUILTUP")) {
        var uniqueFloors = units.reduce(function (acc, unit) {
          var _extends2;

          return !unit.floorNo ? acc : acc[unit.floorNo] ? acc : _extends({}, acc, (_extends2 = {}, _extends2[unit.floorNo] = 1, _extends2));
        }, {});
        onSelect("noOfFloors", Object.keys(uniqueFloors).length);

        var _floorWiseAreas = units.reduce(function (acc, _ref3) {
          var floorNo = _ref3.floorNo,
              builtUpArea = _ref3.builtUpArea;
          if (!floorNo) return acc;
          var area = Number(builtUpArea) || 0;
          if (isNaN(acc === null || acc === void 0 ? void 0 : acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code])) acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code] = area;else acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code] = acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code] + area;
          return acc;
        }, {});

        var _totalGroundFloorArea = Object.keys(_floorWiseAreas).reduce(function (acc, key) {
          return _floorWiseAreas[key] <= acc ? acc : _floorWiseAreas[key];
        }, 0);

        if (_totalGroundFloorArea > Number(formData === null || formData === void 0 ? void 0 : formData.landarea)) {
          setError(config.key, {
            type: "landArea extended",
            message: t("PT_BUILTUPAREA_GRATER_THAN_LANDAREA")
          });
        } else clearErrors(config.key);
      }

      return;
    }

    if (!((_floorlist = floorlist) !== null && _floorlist !== void 0 && _floorlist.length)) return;
    var minFloor = units.reduce(function (min, unit) {
      var _unit$floorNo;

      return Math.min(min, Number((_unit$floorNo = unit.floorNo) === null || _unit$floorNo === void 0 ? void 0 : _unit$floorNo.code) || Number(0));
    }, Number(0));
    var maxFloor = units.reduce(function (max, unit) {
      var _unit$floorNo2;

      return Math.max(max, Number((_unit$floorNo2 = unit.floorNo) === null || _unit$floorNo2 === void 0 ? void 0 : _unit$floorNo2.code) || Number(0));
    }, Number(0));
    var floorWiseAreas = units.reduce(function (acc, _ref4) {
      var floorNo = _ref4.floorNo,
          builtUpArea = _ref4.builtUpArea;
      if (!floorNo) return acc;
      var area = Number(builtUpArea) || 0;
      if (isNaN(acc === null || acc === void 0 ? void 0 : acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code])) acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code] = area;else acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code] = acc[floorNo === null || floorNo === void 0 ? void 0 : floorNo.code] + area;
      return acc;
    }, {});
    var totalGroundFloorArea = Object.keys(floorWiseAreas).reduce(function (acc, key) {
      return floorWiseAreas[key] <= acc ? acc : floorWiseAreas[key];
    }, 0);
    var continuousFloorsArr = floorListData.filter(function (e) {
      var num = Number(e === null || e === void 0 ? void 0 : e.code);
      return num < maxFloor && num > minFloor || num === maxFloor || num === minFloor;
    });
    var unitsMissing = [].concat(continuousFloorsArr);
    continuousFloorsArr.forEach(function (floor) {
      if (units.some(function (unit) {
        var _unit$floorNo3;

        return ((_unit$floorNo3 = unit.floorNo) === null || _unit$floorNo3 === void 0 ? void 0 : _unit$floorNo3.code) === (floor === null || floor === void 0 ? void 0 : floor.code);
      })) {
        unitsMissing = unitsMissing.filter(function (e) {
          return (e === null || e === void 0 ? void 0 : e.code) !== (floor === null || floor === void 0 ? void 0 : floor.code);
        });
      } else if (!unitsMissing.some(function (e) {
        return (e === null || e === void 0 ? void 0 : e.code) === (floor === null || floor === void 0 ? void 0 : floor.code);
      })) {
        unitsMissing.push(floor);
      }
    });

    if (unitsMissing.length && units.some(function (unit) {
      var _unit$floorNo4;

      return unit === null || unit === void 0 ? void 0 : (_unit$floorNo4 = unit.floorNo) === null || _unit$floorNo4 === void 0 ? void 0 : _unit$floorNo4.code;
    })) {
      setError(config.key, {
        type: "units_missing",
        message: "PT_FLOORS_MISSING_UNITS." + unitsMissing.map(function (e) {
          return e === null || e === void 0 ? void 0 : e.code;
        }).join()
      });
    } else if (totalGroundFloorArea > Number(formData === null || formData === void 0 ? void 0 : formData.landarea)) {
      setError(config.key, {
        type: "landArea extended",
        message: t("PT_BUILTUPAREA_GRATER_THAN_LANDAREA")
      });
    } else {
      clearErrors(config.key);
    }

    onSelect("noOfFloors", maxFloor + 1);
  };

  var usageCategoryMajorMenu = function usageCategoryMajorMenu(usagecat) {
    var _usagecat$filter;

    var catMenu = usagecat === null || usagecat === void 0 ? void 0 : (_usagecat$filter = usagecat.filter(function (e) {
      return (e === null || e === void 0 ? void 0 : e.code.split(".").length) <= 2 && (e === null || e === void 0 ? void 0 : e.code) !== "NONRESIDENTIAL";
    })) === null || _usagecat$filter === void 0 ? void 0 : _usagecat$filter.map(function (item) {
      var arr = item === null || item === void 0 ? void 0 : item.code.split(".");
      if (arr.length == 2) return {
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + arr[1],
        code: item === null || item === void 0 ? void 0 : item.code
      };else return {
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + (item === null || item === void 0 ? void 0 : item.code),
        code: item === null || item === void 0 ? void 0 : item.code
      };
    });
    return catMenu;
  };

  var subUsageCategoryMenu = function subUsageCategoryMenu(category) {
    var menu = usagecat.filter(function (cat) {
      return (cat === null || cat === void 0 ? void 0 : cat.code.includes(category === null || category === void 0 ? void 0 : category.code)) && (cat === null || cat === void 0 ? void 0 : cat.code.split(".").length) === 4;
    }).map(function (item) {
      var codeArr = item === null || item === void 0 ? void 0 : item.code.split(".");
      return {
        i18nKey: "COMMON_PROPSUBUSGTYPE_NONRESIDENTIAL_" + codeArr[1] + "_" + codeArr[3],
        code: item === null || item === void 0 ? void 0 : item.code
      };
    });
    return menu;
  };

  function goNext() {
    var _unitsData;

    var unitsData = units === null || units === void 0 ? void 0 : units.map(function (unit) {
      var _unit$occupancyType, _unit$floorNo5, _unit$usageCategory;

      return {
        occupancyType: unit === null || unit === void 0 ? void 0 : (_unit$occupancyType = unit.occupancyType) === null || _unit$occupancyType === void 0 ? void 0 : _unit$occupancyType.code,
        floorNo: unit === null || unit === void 0 ? void 0 : (_unit$floorNo5 = unit.floorNo) === null || _unit$floorNo5 === void 0 ? void 0 : _unit$floorNo5.code,
        constructionDetail: {
          builtUpArea: unit === null || unit === void 0 ? void 0 : unit.builtUpArea
        },
        tenantId: Digit.ULBService.getCurrentTenantId(),
        usageCategory: unit === null || unit === void 0 ? void 0 : (_unit$usageCategory = unit.usageCategory) === null || _unit$usageCategory === void 0 ? void 0 : _unit$usageCategory.code
      };
    });
    unitsData = (_unitsData = unitsData) === null || _unitsData === void 0 ? void 0 : _unitsData.map(function (unit, index) {
      if (unit.occupancyType === "RENTED") return _extends({}, unit, {
        arv: units[index].arv
      });
      return unit;
    });
    onSelect(config.key, unitsData);
  }

  var reviseIndexKeys = function reviseIndexKeys() {
    setUnits(function (prev) {
      return prev.map(function (unit, index) {
        return _extends({}, unit, {
          order: index + 1
        });
      });
    });
  };

  var handleAddUnit = function handleAddUnit() {
    setUnits(function (prev) {
      return [].concat(prev, [{
        key: Date.now(),
        floorNo: null,
        occupancyType: null,
        tenantId: tenantId,
        usageCategory: null,
        builtUpArea: formData === null || formData === void 0 ? void 0 : formData.landarea,
        order: prev.length + 1
      }]);
    });
    reviseIndexKeys();
  };

  var handleRemoveUnit = function handleRemoveUnit(unit) {
    var _formState$errors, _formState$errors$uni;

    setUnits(function (prev) {
      return prev.filter(function (el) {
        return el.key !== unit.key;
      });
    });

    if (((_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$uni = _formState$errors.units) === null || _formState$errors$uni === void 0 ? void 0 : _formState$errors$uni.type) == unit.key) {
      clearErrors("units");
    }

    reviseIndexKeys();
  };

  useEffect(function () {
    var _formData$PropertyTyp3;

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp3 = formData.PropertyType) === null || _formData$PropertyTyp3 === void 0 ? void 0 : _formData$PropertyTyp3.code) === "VACANT" && formState.errors[config.key]) {
      clearErrors(config.key);
    }
  }, [formData === null || formData === void 0 ? void 0 : formData.PropertyType]);
  useEffect(function () {
    goNext();
    calculateNumberOfFloors();
  }, [units, formData.PropertyType, formData.landarea]);
  if (loader && presentInModifyApplication) return /*#__PURE__*/React.createElement(Loader, null);
  return (formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp4 = formData.PropertyType) === null || _formData$PropertyTyp4 === void 0 ? void 0 : _formData$PropertyTyp4.code) === "VACANT" || !(formData !== null && formData !== void 0 && (_formData$PropertyTyp5 = formData.PropertyType) !== null && _formData$PropertyTyp5 !== void 0 && _formData$PropertyTyp5.code) || !(formData !== null && formData !== void 0 && (_formData$usageCatego = formData.usageCategoryMajor) !== null && _formData$usageCatego !== void 0 && _formData$usageCatego.code) ? null : /*#__PURE__*/React.createElement("div", null, units === null || units === void 0 ? void 0 : units.map(function (unit, index) {
    return /*#__PURE__*/React.createElement(Unit, _extends({
      t: t,
      key: unit.key,
      unit: unit,
      allUnits: units,
      setUnits: setUnits,
      index: index,
      stateId: stateId,
      focusIndex: focusIndex,
      setFocusIndex: setFocusIndex,
      getfloorlistdata: getfloorlistdata,
      floorlist: floorlist,
      occupencyOptions: occupencyOptions,
      formData: formData,
      handleRemoveUnit: handleRemoveUnit
    }, {
      formState: formState,
      setError: setError,
      clearErrors: clearErrors,
      usageCategoryMajorMenu: usageCategoryMajorMenu,
      subUsageCategoryMenu: subUsageCategoryMenu
    }));
  }), /*#__PURE__*/React.createElement(LinkButton, {
    label: t("PT_ADD_UNIT"),
    onClick: handleAddUnit,
    style: {
      color: "orange",
      width: "175px"
    }
  }), ["units_missing", "landArea extended"].includes((_formState$errors2 = formState.errors) === null || _formState$errors2 === void 0 ? void 0 : (_formState$errors2$co = _formState$errors2[config.key]) === null || _formState$errors2$co === void 0 ? void 0 : _formState$errors2$co.type) ? /*#__PURE__*/React.createElement(CardLabelError, {
    style: {
      width: "70%",
      marginLeft: "30%",
      fontSize: "12px",
      marginTop: "-21px"
    }
  }, "" + t((_formState$errors3 = formState.errors) === null || _formState$errors3 === void 0 ? void 0 : _formState$errors3[config.key].message.split(".")[0]) + ("-\n           " + (((_formState$errors4 = formState.errors) === null || _formState$errors4 === void 0 ? void 0 : _formState$errors4[config.key].message.split(".")[1]) || " "))) : null);
};

function Unit(_ref5) {
  var _usageMenu$PropertyTa, _usageMenu$PropertyTa2, _formData$usageCatego5, _errors$floorNo, _formData$usageCatego6, _subUsageCategoryMenu, _errors$usageCategory, _errors$occupancyType, _formValue$occupancyT, _errors$arv, _errors$builtUpArea;

  var t = _ref5.t,
      unit = _ref5.unit,
      allUnits = _ref5.allUnits,
      setUnits = _ref5.setUnits,
      index = _ref5.index,
      focusIndex = _ref5.focusIndex,
      setFocusIndex = _ref5.setFocusIndex,
      getfloorlistdata = _ref5.getfloorlistdata,
      floorlist = _ref5.floorlist,
      occupencyOptions = _ref5.occupencyOptions,
      formData = _ref5.formData,
      handleRemoveUnit = _ref5.handleRemoveUnit,
      stateId = _ref5.stateId,
      formState = _ref5.formState,
      setError = _ref5.setError,
      clearErrors = _ref5.clearErrors,
      usageCategoryMajorMenu = _ref5.usageCategoryMajorMenu,
      subUsageCategoryMenu = _ref5.subUsageCategoryMenu;

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", ["UsageCategory", "OccupancyType", "Floor", "OwnerType", "OwnerShipCategory", "Documents", "SubOwnerShipCategory", "OwnerShipCategory"]),
      _Digit$Hooks$pt$usePr2 = _Digit$Hooks$pt$usePr.data,
      usageMenu = _Digit$Hooks$pt$usePr2 === void 0 ? {} : _Digit$Hooks$pt$usePr2;

  var usagecat = [];
  usagecat = (usageMenu === null || usageMenu === void 0 ? void 0 : (_usageMenu$PropertyTa = usageMenu.PropertyTax) === null || _usageMenu$PropertyTa === void 0 ? void 0 : (_usageMenu$PropertyTa2 = _usageMenu$PropertyTa.UsageCategory) === null || _usageMenu$PropertyTa2 === void 0 ? void 0 : _usageMenu$PropertyTa2.filter(function (e) {
    return (e === null || e === void 0 ? void 0 : e.code) !== "MIXED";
  })) || [];

  var _useState4 = useState(function () {
    var _formData$usageCatego2, _formData$usageCatego3;

    var existingUsageCategory = unit.existingUsageCategory;

    if ([existingUsageCategory, formData === null || formData === void 0 ? void 0 : (_formData$usageCatego2 = formData.usageCategoryMajor) === null || _formData$usageCatego2 === void 0 ? void 0 : _formData$usageCatego2.code].includes("RESIDENTIAL")) {
      return usageCategoryMajorMenu(usagecat).filter(function (e) {
        return (e === null || e === void 0 ? void 0 : e.code) === "RESIDENTIAL";
      })[0];
    }

    if ((formData === null || formData === void 0 ? void 0 : (_formData$usageCatego3 = formData.usageCategoryMajor) === null || _formData$usageCatego3 === void 0 ? void 0 : _formData$usageCatego3.code) !== "MIXED") ; else if (existingUsageCategory) {
      var codeArr = existingUsageCategory === null || existingUsageCategory === void 0 ? void 0 : existingUsageCategory.split(".");
      var val = usageCategoryMajorMenu(usagecat).filter(function (e) {
        return (e === null || e === void 0 ? void 0 : e.code) === codeArr[0] + "." + codeArr[1];
      })[0];
      return val;
    }
  }),
      usageType = _useState4[0],
      setUsageType = _useState4[1];

  var _useForm = useForm(),
      control = _useForm.control,
      localFormState = _useForm.formState,
      watch = _useForm.watch,
      setLocalError = _useForm.setError,
      clearLocalErrors = _useForm.clearErrors,
      setValue = _useForm.setValue;

  var formValue = watch();
  useEffect(function () {
    var _formData$usageCatego4;

    var code = formData === null || formData === void 0 ? void 0 : (_formData$usageCatego4 = formData.usageCategoryMajor) === null || _formData$usageCatego4 === void 0 ? void 0 : _formData$usageCatego4.code;

    if (code !== (usageType === null || usageType === void 0 ? void 0 : usageType.code) && code !== "MIXED") {
      setUsageType(formData === null || formData === void 0 ? void 0 : formData.usageCategoryMajor);
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$usageCatego5 = formData.usageCategoryMajor) === null || _formData$usageCatego5 === void 0 ? void 0 : _formData$usageCatego5.code]);
  useEffect(function () {
    if ((usageType === null || usageType === void 0 ? void 0 : usageType.code) === "RESIDENTIAL") {
      setValue("usageCategory", usageType);
    } else {
      var _formValue$usageCateg;

      if (((_formValue$usageCateg = formValue.usageCategory) === null || _formValue$usageCateg === void 0 ? void 0 : _formValue$usageCateg.code) === "RESIDENTIAL") setValue("usageCategory", null);
    }
  }, [usageType]);
  useEffect(function () {
    var _formState$errors5, _formState$errors6, _formState$errors6$un;

    var keys = Object.keys(formValue);
    var part = {};
    keys.forEach(function (key) {
      return part[key] = unit[key];
    });
    if (!lodash.isEqual(formValue, part)) setUnits(function (prev) {
      return prev.map(function (item) {
        return item.key === unit.key ? _extends({}, item, formValue) : item;
      });
    });

    for (var key in formValue) {
      if (!localFormState.errors[key]) {
        if (!formValue[key]) {
          setLocalError(key, {
            type: key.toUpperCase() + "_REQUIRED",
            message: t("CORE_COMMON_REQUIRED_ERRMSG")
          });
        } else if (["builtUpArea", "arv"].includes(key) && isNaN(formValue[key])) {
          setLocalError(key, {
            type: key.toUpperCase() + "_INVALID",
            message: t("ERR_DEFAULT_INPUT_FIELD_MSG")
          });
        }
      } else if (["builtUpArea", "arv"].includes(key) && !isNaN(formValue[key]) && localFormState.errors[key].type === key.toUpperCase() + "_INVALID") {
        clearLocalErrors([key]);
      } else if (formValue[key] && localFormState.errors[key].type === key.toUpperCase() + "_REQUIRED") {
        clearLocalErrors([key]);
      }
    }

    if (Object.keys(localFormState.errors).length && !(formState !== null && formState !== void 0 && (_formState$errors5 = formState.errors) !== null && _formState$errors5 !== void 0 && _formState$errors5.units)) {
      setError("units", {
        type: "" + unit.key,
        message: Object.keys(localFormState.errors).join()
      });
    } else if ((formState === null || formState === void 0 ? void 0 : (_formState$errors6 = formState.errors) === null || _formState$errors6 === void 0 ? void 0 : (_formState$errors6$un = _formState$errors6.units) === null || _formState$errors6$un === void 0 ? void 0 : _formState$errors6$un.type) === "" + unit.key && !Object.keys(localFormState.errors).length) {
      clearErrors("units");
    }
  }, [formValue]);
  var errors = localFormState.errors;
  var errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "label-field-pair"
  }, /*#__PURE__*/React.createElement("h2", {
    className: "card-label card-label-smaller",
    style: {
      color: "#505A5F"
    }
  }, "Unit ", unit === null || unit === void 0 ? void 0 : unit.order)), /*#__PURE__*/React.createElement("div", {
    style: {
      border: "1px solid #E3E3E3",
      padding: "16px",
      marginTop: "8px"
    }
  }, allUnits.length > 1 ? /*#__PURE__*/React.createElement("div", {
    onClick: function onClick() {
      return handleRemoveUnit(unit);
    },
    style: {
      marginBottom: "16px",
      padding: "5px",
      cursor: "pointer",
      textAlign: "right"
    }
  }, "X") : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM2_SELECT_FLOOR") + " *"), /*#__PURE__*/React.createElement(Controller, {
    name: "floorNo",
    defaultValue: unit.floorNo,
    control: control,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: false,
        option: getfloorlistdata(floorlist) || [],
        select: props.onChange,
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.floorNo ? errors === null || errors === void 0 ? void 0 : (_errors$floorNo = errors.floorNo) === null || _errors$floorNo === void 0 ? void 0 : _errors$floorNo.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_PROPERTY_DETAILS_USAGE_TYPE_HEADER") + " *"), /*#__PURE__*/React.createElement(Dropdown, {
    className: "form-field",
    selected: usageType,
    disable: (formData === null || formData === void 0 ? void 0 : (_formData$usageCatego6 = formData.usageCategoryMajor) === null || _formData$usageCatego6 === void 0 ? void 0 : _formData$usageCatego6.code) !== "MIXED",
    option: usageCategoryMajorMenu(usagecat),
    select: setUsageType,
    optionKey: "i18nKey",
    t: t
  })), /*#__PURE__*/React.createElement(LabelFieldPair, {
    style: ["RESIDENTIAL"].includes(usageType === null || usageType === void 0 ? void 0 : usageType.code) ? {
      display: "none"
    } : {}
  }, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM2_USAGE_TYPE") + " *"), /*#__PURE__*/React.createElement(Controller, {
    name: "usageCategory",
    defaultValue: (_subUsageCategoryMenu = subUsageCategoryMenu(usageType)) === null || _subUsageCategoryMenu === void 0 ? void 0 : _subUsageCategoryMenu.filter(function (e) {
      return (e === null || e === void 0 ? void 0 : e.code) === unit.existingUsageCategory;
    })[0],
    control: control,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: !(usageType !== null && usageType !== void 0 && usageType.code),
        option: subUsageCategoryMenu(usageType),
        select: props.onChange,
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), !["RESIDENTIAL"].includes(usageType === null || usageType === void 0 ? void 0 : usageType.code) ? /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.usageCategory ? errors === null || errors === void 0 ? void 0 : (_errors$usageCategory = errors.usageCategory) === null || _errors$usageCategory === void 0 ? void 0 : _errors$usageCategory.message : "") : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM2_OCCUPANCY") + " *"), /*#__PURE__*/React.createElement(Controller, {
    name: "occupancyType",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.occupancyType,
    control: control,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        disable: (occupencyOptions === null || occupencyOptions === void 0 ? void 0 : occupencyOptions.length) === 1,
        option: occupencyOptions,
        select: props.onChange,
        optionKey: "i18nKey",
        onBlur: props.onBlur,
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.occupancyType ? errors === null || errors === void 0 ? void 0 : (_errors$occupancyType = errors.occupancyType) === null || _errors$occupancyType === void 0 ? void 0 : _errors$occupancyType.message : ""), ((_formValue$occupancyT = formValue.occupancyType) === null || _formValue$occupancyT === void 0 ? void 0 : _formValue$occupancyT.code) === "RENTED" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM2_TOTAL_ANNUAL_RENT") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    name: "arv",
    defaultValue: unit.arv,
    control: control,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        type: "text",
        name: "unit-area",
        onChange: function onChange(e) {
          props.onChange(e.target.value);
          setFocusIndex({
            index: index,
            type: "arv"
          });
        },
        value: props.value,
        autoFocus: focusIndex.index === index && focusIndex.type === "arv",
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.arv ? errors === null || errors === void 0 ? void 0 : (_errors$arv = errors.arv) === null || _errors$arv === void 0 ? void 0 : _errors$arv.message : "")) : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM2_BUILT_AREA") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    name: "builtUpArea",
    defaultValue: unit === null || unit === void 0 ? void 0 : unit.builtUpArea,
    control: control,
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        type: "text",
        name: "unit-area",
        onChange: function onChange(e) {
          props.onChange(e.target.value);
          setFocusIndex({
            index: index,
            type: "builtUpArea"
          });
        },
        value: props.value,
        autoFocus: focusIndex.index === index && focusIndex.type === "builtUpArea",
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.builtUpArea ? errors === null || errors === void 0 ? void 0 : (_errors$builtUpArea = errors.builtUpArea) === null || _errors$builtUpArea === void 0 ? void 0 : _errors$builtUpArea.message : "")));
}

var SelectAltContactNumber = function SelectAltContactNumber(_ref) {
  var _formData$owners;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.altContactNumber),
      altContactNumber = _useState[0],
      setAltContactNumber = _useState[1];

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var editScreen = url.includes("/modify-application/");

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData[config.key], {
      altContactNumber: altContactNumber
    }));
  };

  useEffect(function () {
    goNext();
  }, [altContactNumber]);
  return /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller",
    style: editScreen ? {
      color: "#B1B4B6"
    } : {}
  }, t("ES_PT_ALT_CONTACT_NUMBER")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(TextInput, {
    name: "altContactNumber",
    onChange: function onChange(e) {
      return setAltContactNumber(e.target.value);
    },
    value: altContactNumber,
    disable: editScreen
  })));
};

var SelectDocuments = function SelectDocuments(_ref) {
  var _formData$documents, _data$PropertyTax, _data$PropertyTax2, _mutationDocs$map, _data$PropertyTax3;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData,
      setFormError = _ref.setError,
      clearFormErrors = _ref.clearErrors,
      formState = _ref.formState;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _useState = useState((formData === null || formData === void 0 ? void 0 : (_formData$documents = formData.documents) === null || _formData$documents === void 0 ? void 0 : _formData$documents.documents) || []),
      documents = _useState[0],
      setDocuments = _useState[1];

  var _useState2 = useState(null),
      error = _useState2[0],
      setError = _useState2[1];

  var action = "create";

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var isEditScreen = pathname.includes("/modify-application/");
  var isMutation = pathname.includes("/property-mutate/");
  if (isEditScreen) action = "update";

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", ["UsageCategory", "OccupancyType", "Floor", "OwnerType", "OwnerShipCategory", "Documents", "SubOwnerShipCategory", "OwnerShipCategory", "MutationDocuments"]),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  var mutationDocs = data === null || data === void 0 ? void 0 : (_data$PropertyTax = data.PropertyTax) === null || _data$PropertyTax === void 0 ? void 0 : _data$PropertyTax.MutationDocuments;
  var commonDocs = data === null || data === void 0 ? void 0 : (_data$PropertyTax2 = data.PropertyTax) === null || _data$PropertyTax2 === void 0 ? void 0 : _data$PropertyTax2.Documents;
  var propertyTaxDocuments = isMutation ? mutationDocs === null || mutationDocs === void 0 ? void 0 : (_mutationDocs$map = mutationDocs.map) === null || _mutationDocs$map === void 0 ? void 0 : _mutationDocs$map.call(mutationDocs, function (doc) {
    return commonDocs.find(function (e) {
      return doc.code === e.code;
    }) || doc;
  }) : data === null || data === void 0 ? void 0 : (_data$PropertyTax3 = data.PropertyTax) === null || _data$PropertyTax3 === void 0 ? void 0 : _data$PropertyTax3.Documents;

  var goNext = function goNext() {
    onSelect(config.key, {
      documents: documents,
      propertyTaxDocumentsLength: propertyTaxDocuments === null || propertyTaxDocuments === void 0 ? void 0 : propertyTaxDocuments.length
    });
  };

  useEffect(function () {
    goNext();
  }, [documents]);

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement("div", null, isMutation ? /*#__PURE__*/React.createElement(CardSectionHeader, null, t("PT_MUTATION_DOCUMENTS_HEADER"), " ") : null, propertyTaxDocuments === null || propertyTaxDocuments === void 0 ? void 0 : propertyTaxDocuments.map(function (document, index) {
    return /*#__PURE__*/React.createElement(SelectDocument, {
      key: index,
      document: document,
      action: action,
      t: t,
      error: error,
      setError: setError,
      setDocuments: setDocuments,
      documents: documents,
      formData: formData,
      setFormError: setFormError,
      clearFormErrors: clearFormErrors,
      config: config,
      formState: formState
    });
  }), error && /*#__PURE__*/React.createElement(Toast, {
    label: error,
    onClose: function onClose() {
      return setError(null);
    },
    error: true
  }));
};

function SelectDocument(_ref2) {
  var _doc$dropdownData, _formData$additionalD3, _formData$additionalD4, _dropDownData, _dropDownData2, _enabledActions$actio;

  var t = _ref2.t,
      doc = _ref2.document,
      setDocuments = _ref2.setDocuments,
      setError = _ref2.setError,
      documents = _ref2.documents,
      action = _ref2.action,
      formData = _ref2.formData,
      setFormError = _ref2.setFormError,
      clearFormErrors = _ref2.clearFormErrors,
      config = _ref2.config,
      formState = _ref2.formState,
      fromRawData = _ref2.fromRawData;
  var filteredDocument = documents === null || documents === void 0 ? void 0 : documents.filter(function (item) {
    var _item$documentType;

    return item === null || item === void 0 ? void 0 : (_item$documentType = item.documentType) === null || _item$documentType === void 0 ? void 0 : _item$documentType.includes(doc === null || doc === void 0 ? void 0 : doc.code);
  })[0];
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useState3 = useState(filteredDocument ? _extends({}, filteredDocument, {
    active: (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.status) === "ACTIVE",
    code: filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.documentType
  }) : (doc === null || doc === void 0 ? void 0 : (_doc$dropdownData = doc.dropdownData) === null || _doc$dropdownData === void 0 ? void 0 : _doc$dropdownData.length) === 1 ? doc === null || doc === void 0 ? void 0 : doc.dropdownData[0] : {}),
      selectedDocument = _useState3[0],
      setSelectedDocument = _useState3[1];

  var _useState4 = useState(null),
      file = _useState4[0],
      setFile = _useState4[1];

  var _useState5 = useState(function () {
    return (filteredDocument === null || filteredDocument === void 0 ? void 0 : filteredDocument.fileStoreId) || null;
  }),
      uploadedFile = _useState5[0],
      setUploadedFile = _useState5[1];

  var handleSelectDocument = function handleSelectDocument(value) {
    return setSelectedDocument(value);
  };

  function selectfile(e) {
    setFile(e.target.files[0]);
  }

  var dropdownData = doc.dropdownData;

  var _ref3 = (doc === null || doc === void 0 ? void 0 : doc.additionalDetails) || {},
      dropdownFilter = _ref3.dropdownFilter,
      enabledActions = _ref3.enabledActions,
      filterCondition = _ref3.filterCondition;

  var dropDownData = dropdownData;

  var _useState6 = useState(false),
      isHidden = _useState6[0],
      setHidden = _useState6[1];

  var addError = function addError() {
    var _formState$errors, _formState$errors$con;

    var type = (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$con = _formState$errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type;
    if (!Array.isArray(type)) type = [];

    if (!type.includes(doc.code)) {
      type.push(doc.code);
      setFormError(config.key, {
        type: type
      });
    }
  };

  var removeError = function removeError() {
    var _formState$errors2, _formState$errors2$co;

    var type = (_formState$errors2 = formState.errors) === null || _formState$errors2 === void 0 ? void 0 : (_formState$errors2$co = _formState$errors2[config.key]) === null || _formState$errors2$co === void 0 ? void 0 : _formState$errors2$co.type;
    if (!Array.isArray(type)) type = [];

    if (type.includes(doc === null || doc === void 0 ? void 0 : doc.code)) {
      type = type.filter(function (e) {
        return e != (doc === null || doc === void 0 ? void 0 : doc.code);
      });

      if (!type.length) {
        clearFormErrors(config.key);
      } else {
        setFormError(config.key, {
          type: type
        });
      }
    }
  };

  useEffect(function () {
    if (selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code) {
      setDocuments(function (prev) {
        var filteredDocumentsByDocumentType = prev === null || prev === void 0 ? void 0 : prev.filter(function (item) {
          return (item === null || item === void 0 ? void 0 : item.documentType) !== (selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code);
        });

        if ((uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length) === 0 || uploadedFile === null) {
          return filteredDocumentsByDocumentType;
        }

        var filteredDocumentsByFileStoreId = filteredDocumentsByDocumentType === null || filteredDocumentsByDocumentType === void 0 ? void 0 : filteredDocumentsByDocumentType.filter(function (item) {
          return (item === null || item === void 0 ? void 0 : item.fileStoreId) !== uploadedFile;
        });
        return [].concat(filteredDocumentsByFileStoreId, [{
          documentType: selectedDocument === null || selectedDocument === void 0 ? void 0 : selectedDocument.code,
          fileStoreId: uploadedFile,
          documentUid: uploadedFile
        }]);
      });
    }

    if (!isHidden) {
      if (!uploadedFile || !(selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code)) {
        addError();
      } else if (uploadedFile && selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code) {
        removeError();
      }
    } else if (isHidden) {
      removeError();
    }
  }, [uploadedFile, selectedDocument, isHidden]);
  useEffect(function () {
    if (action === "update") {
      var _formData$originalDat, _formData$originalDat2;

      var originalDoc = formData === null || formData === void 0 ? void 0 : (_formData$originalDat = formData.originalData) === null || _formData$originalDat === void 0 ? void 0 : (_formData$originalDat2 = _formData$originalDat.documents) === null || _formData$originalDat2 === void 0 ? void 0 : _formData$originalDat2.filter(function (e) {
        return e.documentType.includes(doc === null || doc === void 0 ? void 0 : doc.code);
      })[0];
      var docType = dropDownData.filter(function (e) {
        return e.code === (originalDoc === null || originalDoc === void 0 ? void 0 : originalDoc.documentType);
      }).map(function (e) {
        var _e$code;

        return _extends({}, e, {
          i18nKey: e === null || e === void 0 ? void 0 : (_e$code = e.code) === null || _e$code === void 0 ? void 0 : _e$code.replaceAll(".", "_")
        });
      })[0];
      if (!docType) setHidden(true);else {
        setSelectedDocument(docType);
        setUploadedFile(originalDoc === null || originalDoc === void 0 ? void 0 : originalDoc.fileStoreId);
      }
    }
  }, []);
  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  setUploadedFile(null);
                  return Promise.resolve(Digit.UploadServices.Filestorage("PT", file, tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0])).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                  setError(t("CS_FILE_UPLOAD_ERROR"));
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  useEffect(function () {
    if (isHidden) setUploadedFile(null);
  }, [isHidden]);
  useEffect(function () {
    if (doc.code === "OWNER.TRANSFERREASONDOCUMENT") {
      var _selectedDocument$cod, _formData$additionalD, _formData$additionalD2;

      if ((selectedDocument === null || selectedDocument === void 0 ? void 0 : (_selectedDocument$cod = selectedDocument.code) === null || _selectedDocument$cod === void 0 ? void 0 : _selectedDocument$cod.split(".")[2]) !== (formData === null || formData === void 0 ? void 0 : (_formData$additionalD = formData.additionalDetails) === null || _formData$additionalD === void 0 ? void 0 : (_formData$additionalD2 = _formData$additionalD.reasonForTransfer) === null || _formData$additionalD2 === void 0 ? void 0 : _formData$additionalD2.code)) {
        setSelectedDocument(null);
        setUploadedFile(null);
      }
    }
  }, [formData === null || formData === void 0 ? void 0 : (_formData$additionalD3 = formData.additionalDetails) === null || _formData$additionalD3 === void 0 ? void 0 : (_formData$additionalD4 = _formData$additionalD3.reasonForTransfer) === null || _formData$additionalD4 === void 0 ? void 0 : _formData$additionalD4.code]);

  if (filterCondition) {
    var filterValue = filterCondition.filterValue,
        jsonPath = filterCondition.jsonPath,
        onArray = filterCondition.onArray,
        arrayAttribute = filterCondition.arrayAttribute,
        formDataPath = filterCondition.formDataPath,
        formArrayAttrPath = filterCondition.formArrayAttrPath;

    if (action === "create") {
      var value = formDataPath.reduce(function (acc, key) {
        if (key.charAt(0).toUpperCase() + key.slice(1) === "PropertyType") return acc["PropertyType"];
        return acc === null || acc === void 0 ? void 0 : acc[key];
      }, formData);
      var hideInput;

      if (value) {
        if (onArray) {
          var valueArr = value === null || value === void 0 ? void 0 : value.map(function (e) {
            return formArrayAttrPath.reduce(function (acc, f) {
              return acc === null || acc === void 0 ? void 0 : acc[f];
            }, e) || e;
          });
          hideInput = valueArr === null || valueArr === void 0 ? void 0 : valueArr.every(function (e) {
            return filterValue.includes(e);
          });
        } else {
          hideInput = filterValue === null || filterValue === void 0 ? void 0 : filterValue.includes(value);
        }

        if (hideInput !== isHidden) setHidden(hideInput);
        if (hideInput) return null;
      }
    }

    if (action === "update") {
      var _a$split;

      var a = fromRawData ? jsonPath : jsonPath === null || jsonPath === void 0 ? void 0 : jsonPath.split("Properties[0].propertyDetails[0].")[1];
      var keyArr = a === null || a === void 0 ? void 0 : (_a$split = a.split(".")) === null || _a$split === void 0 ? void 0 : _a$split.map(function (e) {
        var _e$split$;

        return e.includes("[") ? (_e$split$ = e.split("[")[1]) === null || _e$split$ === void 0 ? void 0 : _e$split$.split("]")[0] : e;
      });

      var _value = keyArr.reduce(function (acc, curr) {
        return acc[curr];
      }, formData === null || formData === void 0 ? void 0 : formData.originalData);

      var formDataValue = formDataPath.reduce(function (acc, key) {
        if (key.charAt(0).toUpperCase() + key.slice(1) === "PropertyType") return acc["PropertyType"];
        return acc === null || acc === void 0 ? void 0 : acc[key];
      }, formData);

      var _hideInput;

      if (_value) {
        if (onArray) {
          if (enabledActions !== null && enabledActions !== void 0 && enabledActions[action].disableUpload) {
            _hideInput = _value === null || _value === void 0 ? void 0 : _value.every(function (e) {
              return filterValue === null || filterValue === void 0 ? void 0 : filterValue.includes(e[arrayAttribute]);
            });
          } else {
            var _valueArr = formDataValue === null || formDataValue === void 0 ? void 0 : formDataValue.map(function (e) {
              return formArrayAttrPath.reduce(function (acc, f) {
                return acc === null || acc === void 0 ? void 0 : acc[f];
              }, e) || e;
            });

            _hideInput = _valueArr === null || _valueArr === void 0 ? void 0 : _valueArr.every(function (e) {
              return filterValue === null || filterValue === void 0 ? void 0 : filterValue.includes(e);
            });
          }
        } else _hideInput = filterValue === null || filterValue === void 0 ? void 0 : filterValue.includes(_value);

        if (_hideInput !== isHidden) setHidden(_hideInput);
        if (_hideInput) return null;
      }
    }
  }

  if (dropdownFilter) {
    var _formDataPath = dropdownFilter.formDataPath,
        _formArrayAttrPath = dropdownFilter.formArrayAttrPath,
        _onArray = dropdownFilter.onArray,
        parentJsonpath = dropdownFilter.parentJsonpath,
        parentArrayJsonPath = dropdownFilter.parentArrayJsonPath;

    if (["create", "update"].includes(action)) {
      if (enabledActions !== null && enabledActions !== void 0 && enabledActions[action].disableUpload) {
        if (_onArray) {
          var keyForArr = parentArrayJsonPath === null || parentArrayJsonPath === void 0 ? void 0 : parentArrayJsonPath.split("Properties[0].propertyDetails[0].")[1].split(".");
          var arr = keyForArr.reduce(function (acc, key) {
            return acc[key];
          }, formData === null || formData === void 0 ? void 0 : formData.originalData);
          var valueMap = arr.map(function (val) {
            return parentJsonpath.split(".").reduce(function (acc, key) {
              return acc[key];
            }, val);
          });
          dropDownData = dropdownData.filter(function (e) {
            return e.parentValue.some(function (val) {
              return valueMap.includes(val);
            });
          });
        } else {
          var _keyForArr = parentJsonpath === null || parentJsonpath === void 0 ? void 0 : parentJsonpath.split("Properties[0].propertyDetails[0].")[1].split(".");

          var _value2 = _keyForArr.reduce(function (acc, key) {
            return acc[key];
          }, formData === null || formData === void 0 ? void 0 : formData.originalData);

          dropDownData = dropdownData.filter(function (e) {
            return e.parentValue.includes(_value2);
          });
        }
      } else {
        var _arr = _formDataPath;

        var _value3 = _arr.reduce(function (acc, key) {
          return acc === null || acc === void 0 ? void 0 : acc[key];
        }, formData);

        var attrForFormArray = _formArrayAttrPath;

        if (_value3) {
          if (!_onArray) {
            dropDownData = dropdownData.filter(function (e) {
              return e.parentValue.includes(_value3);
            });
          } else {
            var _valueMap = _value3.map(function (e) {
              return (attrForFormArray === null || attrForFormArray === void 0 ? void 0 : attrForFormArray.reduce(function (acc, key) {
                return acc[key];
              }, e)) || e;
            });

            dropDownData = dropdownData.filter(function (e) {
              return e.parentValue.some(function (val) {
                return _valueMap.includes(val);
              });
            });
          }
        }
      }
    }
  }

  if (((_dropDownData = dropDownData) === null || _dropDownData === void 0 ? void 0 : _dropDownData.length) === 0) {
    removeError();
    return null;
  }

  if (doc.code === "OWNER.TRANSFERREASONDOCUMENT") {
    dropDownData = dropDownData.filter(function (e) {
      var _e$code2, _formData$additionalD5, _formData$additionalD6;

      return ((_e$code2 = e.code) === null || _e$code2 === void 0 ? void 0 : _e$code2.split(".")[2]) === (formData === null || formData === void 0 ? void 0 : (_formData$additionalD5 = formData.additionalDetails) === null || _formData$additionalD5 === void 0 ? void 0 : (_formData$additionalD6 = _formData$additionalD5.reasonForTransfer) === null || _formData$additionalD6 === void 0 ? void 0 : _formData$additionalD6.code);
    });
  }

  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "24px"
    }
  }, doc !== null && doc !== void 0 && doc.hasDropdown ? /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t(doc === null || doc === void 0 ? void 0 : doc.code.replaceAll(".", "_")) + "  *"), /*#__PURE__*/React.createElement(Dropdown, {
    className: "form-field",
    selected: selectedDocument,
    disable: ((_dropDownData2 = dropDownData) === null || _dropDownData2 === void 0 ? void 0 : _dropDownData2.length) === 0 || (enabledActions === null || enabledActions === void 0 ? void 0 : enabledActions[action].disableDropdown),
    option: dropDownData.map(function (e) {
      var _e$code3;

      return _extends({}, e, {
        i18nKey: (_e$code3 = e.code) === null || _e$code3 === void 0 ? void 0 : _e$code3.replaceAll(".", "_")
      });
    }),
    select: handleSelectDocument,
    optionKey: "i18nKey",
    t: t
  })) : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(UploadFile, {
    onUpload: selectfile,
    onDelete: function onDelete() {
      setUploadedFile(null);
    },
    message: uploadedFile ? "1 " + t("CS_ACTION_FILEUPLOADED") : t("CS_ACTION_NO_FILEUPLOADED"),
    textStyles: {
      width: "100%"
    },
    inputStyles: {
      width: "280px"
    },
    disabled: (enabledActions === null || enabledActions === void 0 ? void 0 : (_enabledActions$actio = enabledActions[action]) === null || _enabledActions$actio === void 0 ? void 0 : _enabledActions$actio.disableUpload) || !(selectedDocument !== null && selectedDocument !== void 0 && selectedDocument.code),
    buttonType: "button",
    error: !uploadedFile
  }))));
}

var UnOccupiedArea = function UnOccupiedArea(_ref) {
  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      userType = _ref.userType,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();

  var onSkip = function onSkip() {
    return onSelect();
  };

  var UnOccupiedArea, setUnOccupiedArea;

  if (!isNaN(index)) {
    var _useState = useState(formData.units && formData.units[index] && formData.units[index].UnOccupiedArea);

    UnOccupiedArea = _useState[0];
    setUnOccupiedArea = _useState[1];
  } else {
    var _formData$UnOccupiedA;

    var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$UnOccupiedA = formData.UnOccupiedArea) === null || _formData$UnOccupiedA === void 0 ? void 0 : _formData$UnOccupiedA.UnOccupiedArea);

    UnOccupiedArea = _useState2[0];
    setUnOccupiedArea = _useState2[1];
  }

  var validation = {};

  var _useState3 = useState(null),
      unitareaerror = _useState3[0],
      setunitareaerror = _useState3[1];

  var _useState4 = useState(null),
      areanotzeroerror = _useState4[0],
      setareanotzeroerror = _useState4[1];

  function setPropertyUnOccupiedArea(e) {
    var _formData$PropertyTyp, _formData$PropertyTyp2, _formData$floordetail, _formData$landarea, _formData$Constructio, _formData$PropertyTyp3, _formData$selfOccupie, _formData$floordetail2;

    setUnOccupiedArea(e.target.value);
    setunitareaerror(null);
    setareanotzeroerror(null);

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp = formData.PropertyType) === null || _formData$PropertyTyp === void 0 ? void 0 : _formData$PropertyTyp.code) === "BUILTUP.INDEPENDENTPROPERTY") {
      var _formData$units$index, _formData$units$index2, _formData$units$index3, _formData$units$index4, _formData$units$index5, _formData$units$index6;

      var totalarea = parseInt((formData === null || formData === void 0 ? void 0 : (_formData$units$index = formData.units[index]) === null || _formData$units$index === void 0 ? void 0 : _formData$units$index.floorarea) || 0) + parseInt((formData === null || formData === void 0 ? void 0 : (_formData$units$index2 = formData.units[index]) === null || _formData$units$index2 === void 0 ? void 0 : _formData$units$index2.RentArea) || 0) + parseInt(e.target.value);

      if (parseInt(formData === null || formData === void 0 ? void 0 : (_formData$units$index3 = formData.units[index]) === null || _formData$units$index3 === void 0 ? void 0 : _formData$units$index3.builtUpArea) < totalarea) {
        setunitareaerror("PT_TOTUNITAREA_LESS_THAN_BUILTUP_ERR_MSG");
      } else if ((formData === null || formData === void 0 ? void 0 : (_formData$units$index4 = formData.units[index]) === null || _formData$units$index4 === void 0 ? void 0 : (_formData$units$index5 = _formData$units$index4.selfOccupied) === null || _formData$units$index5 === void 0 ? void 0 : _formData$units$index5.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED" && parseInt(formData === null || formData === void 0 ? void 0 : (_formData$units$index6 = formData.units[index]) === null || _formData$units$index6 === void 0 ? void 0 : _formData$units$index6.builtUpArea) == parseInt(e.target.value)) {
        setunitareaerror("PT_BUILTUP_UNOCCUPIED_AREA_NOT_SAME");
      }
    }

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp2 = formData.PropertyType) === null || _formData$PropertyTyp2 === void 0 ? void 0 : _formData$PropertyTyp2.code) === "BUILTUP.SHAREDPROPERTY" && parseInt(formData === null || formData === void 0 ? void 0 : (_formData$floordetail = formData.floordetails) === null || _formData$floordetail === void 0 ? void 0 : _formData$floordetail.builtUpArea) < parseInt(e.target.value) + parseInt((formData === null || formData === void 0 ? void 0 : (_formData$landarea = formData.landarea) === null || _formData$landarea === void 0 ? void 0 : _formData$landarea.floorarea) || "0") + parseInt((formData === null || formData === void 0 ? void 0 : (_formData$Constructio = formData.Constructiondetails) === null || _formData$Constructio === void 0 ? void 0 : _formData$Constructio.RentArea) || "0")) {
      setunitareaerror("PT_TOTUNITAREA_LESS_THAN_BUILTUP_ERR_MSG");
    } else if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp3 = formData.PropertyType) === null || _formData$PropertyTyp3 === void 0 ? void 0 : _formData$PropertyTyp3.code) === "BUILTUP.SHAREDPROPERTY" && (formData === null || formData === void 0 ? void 0 : (_formData$selfOccupie = formData.selfOccupied) === null || _formData$selfOccupie === void 0 ? void 0 : _formData$selfOccupie.i18nKey) === "PT_YES_IT_IS_SELFOCCUPIED" && parseInt(formData === null || formData === void 0 ? void 0 : (_formData$floordetail2 = formData.floordetails) === null || _formData$floordetail2 === void 0 ? void 0 : _formData$floordetail2.builtUpArea) == parseInt(e.target.value)) {
      setunitareaerror("PT_BUILTUP_UNOCCUPIED_AREA_NOT_SAME");
    }

    if (parseInt(e.target.value) == 0) {
      setareanotzeroerror("PT_AREA_NOT_0_MSG");
    }
  }

  var getheaderCaption = function getheaderCaption() {
    var _formData$PropertyTyp4;

    if ((formData === null || formData === void 0 ? void 0 : (_formData$PropertyTyp4 = formData.PropertyType) === null || _formData$PropertyTyp4 === void 0 ? void 0 : _formData$PropertyTyp4.i18nKey) === "COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY") {
      return "PT_FLOOR_DETAILS_HEADER";
    } else {
      return "PROPERTYTAX_FLOOR_" + index + "_DETAILS";
    }
  };

  var goNext = function goNext() {
    if (!isNaN(index)) {
      var _formData$noOfFloors, _formData$noOfFloors2, _formData$noOofBaseme, _formData$noOofBaseme2, _formData$noOofBaseme3;

      var unit = formData.units && formData.units[index];

      var floordet = _extends({}, unit, {
        UnOccupiedArea: UnOccupiedArea
      });

      onSelect(config.key, floordet, false, index);

      if ((formData === null || formData === void 0 ? void 0 : (_formData$noOfFloors = formData.noOfFloors) === null || _formData$noOfFloors === void 0 ? void 0 : _formData$noOfFloors.i18nKey) === "PT_GROUND_PLUS_ONE_OPTION" && index < 1 && index > -1) {
        var newIndex1 = parseInt(index) + 1;
        onSelect("floordetails", {}, true, newIndex1, true);
      } else if ((formData === null || formData === void 0 ? void 0 : (_formData$noOfFloors2 = formData.noOfFloors) === null || _formData$noOfFloors2 === void 0 ? void 0 : _formData$noOfFloors2.i18nKey) === "PT_GROUND_PLUS_TWO_OPTION" && index < 2 && index > -1) {
        var newIndex2 = parseInt(index) + 1;
        onSelect("floordetails", {}, true, newIndex2, true);
      } else if (((formData === null || formData === void 0 ? void 0 : (_formData$noOofBaseme = formData.noOofBasements) === null || _formData$noOofBaseme === void 0 ? void 0 : _formData$noOofBaseme.i18nKey) === "PT_ONE_BASEMENT_OPTION" || (formData === null || formData === void 0 ? void 0 : (_formData$noOofBaseme2 = formData.noOofBasements) === null || _formData$noOofBaseme2 === void 0 ? void 0 : _formData$noOofBaseme2.i18nKey) === "PT_TWO_BASEMENT_OPTION") && index > -1) {
        onSelect("floordetails", {}, true, "-1", true);
      } else if ((formData === null || formData === void 0 ? void 0 : (_formData$noOofBaseme3 = formData.noOofBasements) === null || _formData$noOofBaseme3 === void 0 ? void 0 : _formData$noOofBaseme3.i18nKey) === "PT_TWO_BASEMENT_OPTION" && index != -2) {
        onSelect("floordetails", {}, true, "-2", true);
      }
    } else {
      onSelect("UnOccupiedArea", {
        UnOccupiedArea: UnOccupiedArea
      });
    }
  };

  function onChange(e) {
    if (e.target.value.length > 1024) {
      setError("CS_COMMON_LANDMARK_MAX_LENGTH");
    } else {
      setError(null);
      setUnOccupiedArea(e.target.value);

      if (userType === "employee") {
        var _e$target, _e$target2;

        var _value = e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value;

        var key = e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.id;
        onSelect(key, _value);
      }
    }
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    config: (config.texts.headerCaption = getheaderCaption(), config),
    onChange: onChange,
    onSelect: goNext,
    forcedError: t(unitareaerror) || t(areanotzeroerror),
    onSkip: onSkip,
    t: t,
    isDisabled: unitareaerror || areanotzeroerror || !UnOccupiedArea,
    showErrorBelowChildren: true
  }, /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_UNOCCUPIED_AREA_SQ_FEET_LABEL")), /*#__PURE__*/React.createElement(TextInput, _extends({
    t: t,
    isMandatory: false,
    type: "number",
    optionKey: "i18nKey",
    name: "RentArea",
    value: UnOccupiedArea,
    onChange: setPropertyUnOccupiedArea
  }, validation = {
    pattern: "^([0-9]){0,8}$",
    type: "number",
    title: t("PT_BUILT_AREA_ERROR_MESSAGE")
  })));
};

var createOwnerDetails = function createOwnerDetails() {
  return {
    name: "",
    mobileNumber: "",
    fatherOrHusbandName: "",
    emailId: "",
    permanentAddress: "",
    relationship: "",
    ownerType: "",
    gender: "",
    isCorrespondenceAddress: false,
    key: Date.now()
  };
};

var PTEmployeeOwnershipDetails = function PTEmployeeOwnershipDetails(_ref) {
  var _formData$ownershipCa, _formData$ownershipCa2, _formData$ownershipCa3;

  var config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData,
      setError = _ref.setError,
      formState = _ref.formState,
      clearErrors = _ref.clearErrors;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var isEditScreen = pathname.includes("/modify-application/");

  var _useState = useState((formData === null || formData === void 0 ? void 0 : formData.owners) || [createOwnerDetails()]),
      owners = _useState[0],
      setOwners = _useState[1];

  var _useState2 = useState({
    index: -1,
    type: ""
  }),
      focusIndex = _useState2[0],
      setFocusIndex = _useState2[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", ["UsageCategory", "OccupancyType", "Floor", "OwnerType", "OwnerShipCategory", "Documents", "SubOwnerShipCategory", "OwnerShipCategory"]),
      mdmsData = _Digit$Hooks$pt$usePr.data;

  var _Digit$Hooks$pt$usePT = Digit.Hooks.pt.usePTGenderMDMS(stateId, "common-masters", "GenderType"),
      Menu = _Digit$Hooks$pt$usePT.data;

  var menu = [];
  Menu && Menu.map(function (formGender) {
    menu.push({
      i18nKey: "PT_FORM3_" + formGender.code,
      code: "" + formGender.code,
      value: "" + formGender.code
    });
  });

  var addNewOwner = function addNewOwner() {
    var newOwner = createOwnerDetails();
    setOwners(function (prev) {
      return [].concat(prev, [newOwner]);
    });
  };

  var removeOwner = function removeOwner(owner) {
    setOwners(function (prev) {
      return prev.filter(function (o) {
        return o.key != owner.key;
      });
    });
  };

  useEffect(function () {
    var data = owners.map(function (e) {
      return e;
    });
    onSelect(config === null || config === void 0 ? void 0 : config.key, data);
  }, [owners]);
  useEffect(function () {
    setOwners([createOwnerDetails()]);
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : _formData$ownershipCa.code]);
  var commonProps = {
    focusIndex: focusIndex,
    allOwners: owners,
    setFocusIndex: setFocusIndex,
    removeOwner: removeOwner,
    formData: formData,
    formState: formState,
    setOwners: setOwners,
    mdmsData: mdmsData,
    t: t,
    setError: setError,
    clearErrors: clearErrors,
    config: config,
    menu: menu
  };

  if (isEditScreen) {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }

  return formData !== null && formData !== void 0 && (_formData$ownershipCa2 = formData.ownershipCategory) !== null && _formData$ownershipCa2 !== void 0 && _formData$ownershipCa2.code ? /*#__PURE__*/React.createElement(React.Fragment, null, owners.map(function (owner, index) {
    return /*#__PURE__*/React.createElement(OwnerForm, _extends({
      key: owner.key,
      index: index,
      owner: owner
    }, commonProps));
  }), (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa3 = formData.ownershipCategory) === null || _formData$ownershipCa3 === void 0 ? void 0 : _formData$ownershipCa3.code) === "INDIVIDUAL.MULTIPLEOWNERS" ? /*#__PURE__*/React.createElement(LinkButton, {
    label: "Add Owner",
    onClick: addNewOwner,
    style: {
      color: "orange"
    }
  }) : null) : null;
};

var OwnerForm = function OwnerForm(_props) {
  var _formData$ownershipCa5, _formData$ownershipCa7, _formData$ownershipCa8, _localFormState$touch, _localFormState$touch2, _errors$institution, _errors$institution$n, _localFormState$touch3, _localFormState$touch4, _errors$institution2, _errors$institution2$, _errors$name, _errors$gender, _errors$altContactNum, _errors$mobileNumber, _errors$fatherOrHusba, _errors$relationship, _errors$ownerType, _errors$designation, _formValue$ownerType2, _formValue$ownerType3, _owner$documents, _localFormState$touch5, _errors$documents, _errors$documents$doc, _owner$documents2, _localFormState$touch6, _errors$documents2, _errors$documents2$do, _errors$emailId, _errors$correspondenc;

  var owner = _props.owner,
      index = _props.index,
      focusIndex = _props.focusIndex,
      allOwners = _props.allOwners,
      setFocusIndex = _props.setFocusIndex,
      removeOwner = _props.removeOwner,
      setOwners = _props.setOwners,
      t = _props.t,
      mdmsData = _props.mdmsData,
      formData = _props.formData,
      config = _props.config,
      setError = _props.setError,
      clearErrors = _props.clearErrors,
      formState = _props.formState,
      menu = _props.menu;

  var _useForm = useForm(),
      control = _useForm.control,
      localFormState = _useForm.formState,
      watch = _useForm.watch,
      trigger = _useForm.trigger;

  var formValue = watch();
  var errors = localFormState.errors;
  var specialDocsMenu = useMemo(function () {
    var _mdmsData$PropertyTax, _mdmsData$PropertyTax2, _mdmsData$PropertyTax3, _mdmsData$PropertyTax4, _mdmsData$PropertyTax5, _mdmsData$PropertyTax6;

    return (mdmsData === null || mdmsData === void 0 ? void 0 : (_mdmsData$PropertyTax = mdmsData.PropertyTax) === null || _mdmsData$PropertyTax === void 0 ? void 0 : (_mdmsData$PropertyTax2 = _mdmsData$PropertyTax.Documents) === null || _mdmsData$PropertyTax2 === void 0 ? void 0 : (_mdmsData$PropertyTax3 = _mdmsData$PropertyTax2.filter(function (e) {
      return e.code === "OWNER.SPECIALCATEGORYPROOF";
    })) === null || _mdmsData$PropertyTax3 === void 0 ? void 0 : (_mdmsData$PropertyTax4 = _mdmsData$PropertyTax3[0].dropdownData) === null || _mdmsData$PropertyTax4 === void 0 ? void 0 : (_mdmsData$PropertyTax5 = (_mdmsData$PropertyTax6 = _mdmsData$PropertyTax4.filter(function (e) {
      var _formValue$ownerType;

      return e.parentValue.includes(formValue === null || formValue === void 0 ? void 0 : (_formValue$ownerType = formValue.ownerType) === null || _formValue$ownerType === void 0 ? void 0 : _formValue$ownerType.code);
    })).map) === null || _mdmsData$PropertyTax5 === void 0 ? void 0 : _mdmsData$PropertyTax5.call(_mdmsData$PropertyTax6, function (e) {
      var _e$code;

      return {
        i18nKey: (_e$code = e.code) === null || _e$code === void 0 ? void 0 : _e$code.replaceAll(".", "_"),
        code: e.code
      };
    })) || [];
  }, [mdmsData, formValue]);
  var ownerTypesMenu = useMemo(function () {
    var _mdmsData$PropertyTax7, _mdmsData$PropertyTax8, _mdmsData$PropertyTax9;

    return (mdmsData === null || mdmsData === void 0 ? void 0 : (_mdmsData$PropertyTax7 = mdmsData.PropertyTax) === null || _mdmsData$PropertyTax7 === void 0 ? void 0 : (_mdmsData$PropertyTax8 = _mdmsData$PropertyTax7.OwnerType) === null || _mdmsData$PropertyTax8 === void 0 ? void 0 : (_mdmsData$PropertyTax9 = _mdmsData$PropertyTax8.map) === null || _mdmsData$PropertyTax9 === void 0 ? void 0 : _mdmsData$PropertyTax9.call(_mdmsData$PropertyTax8, function (e) {
      return {
        i18nKey: "" + e.code.replaceAll("PROPERTY", "COMMON_MASTERS").replaceAll(".", "_"),
        code: e.code
      };
    })) || [];
  }, [mdmsData]);
  var isIndividualTypeOwner = useMemo(function () {
    var _formData$ownershipCa4;

    return formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa4 = formData.ownershipCategory) === null || _formData$ownershipCa4 === void 0 ? void 0 : _formData$ownershipCa4.code.includes("INDIVIDUAL");
  }, [formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa5 = formData.ownershipCategory) === null || _formData$ownershipCa5 === void 0 ? void 0 : _formData$ownershipCa5.code]);
  var institutionTypeMenu = useMemo(function () {
    var _formData$ownershipCa6, _mdmsData$PropertyTax10, _mdmsData$PropertyTax11;

    var code = formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa6 = formData.ownershipCategory) === null || _formData$ownershipCa6 === void 0 ? void 0 : _formData$ownershipCa6.code;
    var arr = mdmsData === null || mdmsData === void 0 ? void 0 : (_mdmsData$PropertyTax10 = mdmsData.PropertyTax) === null || _mdmsData$PropertyTax10 === void 0 ? void 0 : (_mdmsData$PropertyTax11 = _mdmsData$PropertyTax10.OwnerShipCategory) === null || _mdmsData$PropertyTax11 === void 0 ? void 0 : _mdmsData$PropertyTax11.filter(function (e) {
      var _e$code2;

      return e.code != code && ((_e$code2 = e.code) === null || _e$code2 === void 0 ? void 0 : _e$code2.includes(code));
    });
    return arr === null || arr === void 0 ? void 0 : arr.map(function (e) {
      var _e$code3;

      return _extends({}, e, {
        i18nKey: "COMMON_MASTERS_OWNERSHIPCATEGORY_" + ((_e$code3 = e.code) === null || _e$code3 === void 0 ? void 0 : _e$code3.replaceAll(".", "_"))
      });
    });
  }, [mdmsData, formData === null || formData === void 0 ? void 0 : formData.ownershipCategory]);
  useEffect(function () {
    trigger();
  }, []);
  useEffect(function () {
    var keys = Object.keys(formValue);
    var part = {};
    keys.forEach(function (key) {
      return part[key] = owner[key];
    });

    var _ownerType = isIndividualTypeOwner ? {} : {
      ownerType: {
        code: "NONE"
      }
    };

    if (!lodash.isEqual(formValue, part)) {
      setOwners(function (prev) {
        return prev.map(function (o) {
          return o.key && o.key === owner.key ? _extends({}, o, formValue, _ownerType) : _extends({}, o);
        });
      });
      trigger();
    }
  }, [formValue]);
  useEffect(function () {
    var _formState$errors$con;

    if (Object.keys(errors).length && !lodash.isEqual(((_formState$errors$con = formState.errors[config.key]) === null || _formState$errors$con === void 0 ? void 0 : _formState$errors$con.type) || {}, errors)) setError(config.key, {
      type: errors
    });else if (!Object.keys(errors).length && formState.errors[config.key]) clearErrors(config.key);
  }, [errors]);
  var errorStyle = {
    width: "70%",
    marginLeft: "30%",
    fontSize: "12px",
    marginTop: "-21px"
  };
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "label-field-pair"
  }, /*#__PURE__*/React.createElement("h2", {
    className: "card-label card-label-smaller",
    style: {
      color: "#505A5F"
    }
  }, isIndividualTypeOwner ? "Owner " + (formData !== null && formData !== void 0 && (_formData$ownershipCa7 = formData.ownershipCategory) !== null && _formData$ownershipCa7 !== void 0 && (_formData$ownershipCa8 = _formData$ownershipCa7.code) !== null && _formData$ownershipCa8 !== void 0 && _formData$ownershipCa8.includes("MULTIPLE") ? index + 1 : "") : "Authorised Person Details")), /*#__PURE__*/React.createElement("div", {
    style: {
      border: "1px solid #E3E3E3",
      padding: "16px",
      marginTop: "8px"
    }
  }, (allOwners === null || allOwners === void 0 ? void 0 : allOwners.length) > 2 ? /*#__PURE__*/React.createElement("div", {
    onClick: function onClick() {
      return removeOwner(owner);
    },
    style: {
      marginBottom: "16px",
      padding: "5px",
      cursor: "pointer",
      textAlign: "right"
    }
  }, "X") : null, !isIndividualTypeOwner ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_INSTITUTION_NAME") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "institution.name",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.name,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG"),
      validate: {
        pattern: function pattern(v) {
          return /^[a-zA-Z\s]+$/.test(v) ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG");
        }
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "name",
        onChange: function onChange(e) {
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "name"
          });
        },
        onBlur: function onBlur(e) {
          setFocusIndex({
            index: -1
          });
          props.onBlur(e);
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, (_localFormState$touch = localFormState.touched) !== null && _localFormState$touch !== void 0 && (_localFormState$touch2 = _localFormState$touch.institution) !== null && _localFormState$touch2 !== void 0 && _localFormState$touch2.name ? errors === null || errors === void 0 ? void 0 : (_errors$institution = errors.institution) === null || _errors$institution === void 0 ? void 0 : (_errors$institution$n = _errors$institution.name) === null || _errors$institution$n === void 0 ? void 0 : _errors$institution$n.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_INSTITUTION_TYPE") + " *"), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "institution.type",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.relationship,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        select: props.onChange,
        onBlur: props.onBlur,
        option: institutionTypeMenu,
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, (_localFormState$touch3 = localFormState.touched) !== null && _localFormState$touch3 !== void 0 && (_localFormState$touch4 = _localFormState$touch3.institution) !== null && _localFormState$touch4 !== void 0 && _localFormState$touch4.type ? errors === null || errors === void 0 ? void 0 : (_errors$institution2 = errors.institution) === null || _errors$institution2 === void 0 ? void 0 : (_errors$institution2$ = _errors$institution2.type) === null || _errors$institution2$ === void 0 ? void 0 : _errors$institution2$.message : "")) : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_OWNER_NAME") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "name",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.name,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG"),
      validate: {
        pattern: function pattern(val) {
          return /^[a-zA-Z\s]*$/.test(val) ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG");
        }
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "name",
        onChange: function onChange(e) {
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "name"
          });
        },
        onBlur: function onBlur(e) {
          setFocusIndex({
            index: -1
          });
          props.onBlur(e);
        }
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.name ? errors === null || errors === void 0 ? void 0 : (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message : ""), isIndividualTypeOwner ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM3_GENDER") + " *"), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "gender",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.gender,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        select: props.onChange,
        onBlur: props.onBlur,
        option: menu,
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.gender ? errors === null || errors === void 0 ? void 0 : (_errors$gender = errors.gender) === null || _errors$gender === void 0 ? void 0 : _errors$gender.message : "")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_LANDLINE_NUMBER_FLOATING_LABEL") + (isIndividualTypeOwner ? "" : " *")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "altContactNumber",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.altContactNumber,
    rules: isIndividualTypeOwner ? {} : {
      required: t("CORE_COMMON_REQUIRED_ERRMSG"),
      validate: {
        pattern: function pattern(e) {
          return /^[0-9]{11}$/i.test(e) ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG");
        }
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(MobileNumber, {
        value: props.value,
        hideSpan: true,
        maxLength: 11,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "altContactNumber",
        onChange: function onChange(e) {
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "altContactNumber"
          });
        },
        labelStyle: {
          marginTop: "unset"
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.altContactNumber ? errors === null || errors === void 0 ? void 0 : (_errors$altContactNum = errors.altContactNumber) === null || _errors$altContactNum === void 0 ? void 0 : _errors$altContactNum.message : "")), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM3_MOBILE_NUMBER") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "mobileNumber",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.mobileNumber,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG"),
      validate: function validate(v) {
        return /^[6789]\d{9}$/.test(v) ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG");
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(MobileNumber, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "mobileNumber",
        onChange: function onChange(e) {
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "mobileNumber"
          });
        },
        labelStyle: {
          marginTop: "unset"
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.mobileNumber ? errors === null || errors === void 0 ? void 0 : (_errors$mobileNumber = errors.mobileNumber) === null || _errors$mobileNumber === void 0 ? void 0 : _errors$mobileNumber.message : ""), isIndividualTypeOwner ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_SEARCHPROPERTY_TABEL_GUARDIANNAME") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "fatherOrHusbandName",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG"),
      validate: {
        pattern: function pattern(val) {
          return /^\w+( +\w+)*$/.test(val) ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG");
        }
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "fatherOrHusbandName",
        onChange: function onChange(e) {
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "fatherOrHusbandName"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.fatherOrHusbandName ? errors === null || errors === void 0 ? void 0 : (_errors$fatherOrHusba = errors.fatherOrHusbandName) === null || _errors$fatherOrHusba === void 0 ? void 0 : _errors$fatherOrHusba.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM3_RELATIONSHIP") + " *"), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "relationship",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.relationship,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        select: props.onChange,
        onBlur: props.onBlur,
        option: [{
          i18nKey: "PT_FORM3_FATHER",
          code: "FATHER"
        }, {
          i18nKey: "PT_FORM3_HUSBAND",
          code: "HUSBAND"
        }],
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.relationship ? errors === null || errors === void 0 ? void 0 : (_errors$relationship = errors.relationship) === null || _errors$relationship === void 0 ? void 0 : _errors$relationship.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_FORM3_SPECIAL_CATEGORY") + " *"), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "ownerType",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.ownerType,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        select: props.onChange,
        onBlur: props.onBlur,
        option: ownerTypesMenu,
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.ownerType ? errors === null || errors === void 0 ? void 0 : (_errors$ownerType = errors.ownerType) === null || _errors$ownerType === void 0 ? void 0 : _errors$ownerType.message : "")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("TL_NEW_DESIG_OWNER_LABEL") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "designation",
    defaultValue: (owner === null || owner === void 0 ? void 0 : owner.designation) || "",
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "designation",
        onChange: function onChange(e) {
          props.onChange(e.target.value);
          setFocusIndex({
            index: owner.key,
            type: "designation"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.designation ? errors === null || errors === void 0 ? void 0 : (_errors$designation = errors.designation) === null || _errors$designation === void 0 ? void 0 : _errors$designation.message : "")), (_formValue$ownerType2 = formValue.ownerType) !== null && _formValue$ownerType2 !== void 0 && _formValue$ownerType2.code && ((_formValue$ownerType3 = formValue.ownerType) === null || _formValue$ownerType3 === void 0 ? void 0 : _formValue$ownerType3.code) !== "NONE" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_OWNERSHIP_DOCUMENT_TYPE") + " *"), /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "documents.documentType",
    defaultValue: owner === null || owner === void 0 ? void 0 : (_owner$documents = owner.documents) === null || _owner$documents === void 0 ? void 0 : _owner$documents.documentType,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(Dropdown, {
        className: "form-field",
        selected: props.value,
        select: props.onChange,
        onBlur: props.onBlur,
        option: specialDocsMenu,
        optionKey: "i18nKey",
        t: t
      });
    }
  })), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, (_localFormState$touch5 = localFormState.touched.documents) !== null && _localFormState$touch5 !== void 0 && _localFormState$touch5.documentType ? errors === null || errors === void 0 ? void 0 : (_errors$documents = errors.documents) === null || _errors$documents === void 0 ? void 0 : (_errors$documents$doc = _errors$documents.documentType) === null || _errors$documents$doc === void 0 ? void 0 : _errors$documents$doc.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_OWNERSHIP_DOCUMENT_ID") + " *"), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "documents.documentUid",
    defaultValue: owner === null || owner === void 0 ? void 0 : (_owner$documents2 = owner.documents) === null || _owner$documents2 === void 0 ? void 0 : _owner$documents2.documentUid,
    rules: {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "documents.documentUid",
        onChange: function onChange(e) {
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "documents.documentUid"
          });
        },
        labelStyle: {
          marginTop: "unset"
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, (_localFormState$touch6 = localFormState.touched.documents) !== null && _localFormState$touch6 !== void 0 && _localFormState$touch6.documentUid ? errors === null || errors === void 0 ? void 0 : (_errors$documents2 = errors.documents) === null || _errors$documents2 === void 0 ? void 0 : (_errors$documents2$do = _errors$documents2.documentUid) === null || _errors$documents2$do === void 0 ? void 0 : _errors$documents2$do.message : ""), " ") : null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_OWNERSHIP_INFO_EMAIL_ID")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "emailId",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.emailId,
    rules: {
      validate: function validate(e) {
        return e && /^[^\s@]+@[^\s@]+$/.test(e) || !e ? true : t("ERR_DEFAULT_INPUT_FIELD_MSG");
      }
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "emailId",
        onChange: function onChange(e) {
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "emailId"
          });
        },
        labelStyle: {
          marginTop: "unset"
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.emailId ? errors === null || errors === void 0 ? void 0 : (_errors$emailId = errors.emailId) === null || _errors$emailId === void 0 ? void 0 : _errors$emailId.message : ""), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
    className: "card-label-smaller"
  }, t("PT_OWNERSHIP_INFO_CORR_ADDR") + (isIndividualTypeOwner ? "" : " *")), /*#__PURE__*/React.createElement("div", {
    className: "field"
  }, /*#__PURE__*/React.createElement(Controller, {
    control: control,
    name: "correspondenceAddress",
    defaultValue: owner === null || owner === void 0 ? void 0 : owner.correspondenceAddress,
    rules: isIndividualTypeOwner ? {} : {
      required: t("CORE_COMMON_REQUIRED_ERRMSG")
    },
    render: function render(props) {
      return /*#__PURE__*/React.createElement(TextInput, {
        value: props.value,
        autoFocus: focusIndex.index === (owner === null || owner === void 0 ? void 0 : owner.key) && focusIndex.type === "correspondenceAddress",
        onChange: function onChange(e) {
          props.onChange(e);
          setFocusIndex({
            index: owner.key,
            type: "correspondenceAddress"
          });
        },
        onBlur: props.onBlur
      });
    }
  }))), /*#__PURE__*/React.createElement(CardLabelError, {
    style: errorStyle
  }, localFormState.touched.correspondenceAddress ? errors === null || errors === void 0 ? void 0 : (_errors$correspondenc = errors.correspondenceAddress) === null || _errors$correspondenc === void 0 ? void 0 : _errors$correspondenc.message : ""))));
};

var newConfig = [{
  head: "ES_NEW_APPLICATION_LOCATION_DETAILS",
  body: [{
    route: "map",
    component: "PTSelectGeolocation",
    nextStep: "pincode",
    hideInEmployee: true,
    key: "address",
    texts: {
      header: "PT_GEOLOCATON_HEADER",
      cardText: "PT_GEOLOCATION_TEXT",
      nextText: "PT_COMMON_NEXT",
      skipAndContinueText: "CORE_COMMON_SKIP_CONTINUE"
    }
  }, {
    route: "pincode",
    component: "PTSelectPincode",
    texts: {
      headerCaption: "PT_PROPERTY_LOCATION_CAPTION",
      header: "PT_PINCODE_LABEL",
      cardText: "PT_PINCODE_TEXT",
      submitBarLabel: "PT_COMMON_NEXT",
      skipText: "CORE_COMMON_SKIP_CONTINUE"
    },
    withoutLabel: true,
    key: "address",
    nextStep: "address",
    type: "component"
  }, {
    route: "address",
    component: "PTSelectAddress",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_PROPERTY_LOCATION_CAPTION",
      header: "CS_FILE_APPLICATION_PROPERTY_LOCATION_ADDRESS_TEXT",
      cardText: "CS_FILE_APPLICATION_PROPERTY_LOCATION_CITY_MOHALLA_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "address",
    nextStep: "street",
    isMandatory: true,
    type: "component"
  }, {
    type: "component",
    route: "street",
    component: "PTSelectStreet",
    key: "address",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_PROPERTY_LOCATION_CAPTION",
      header: "CS_FILE_APPLICATION_PROPERTY_LOCATION_ADDRESS_TEXT",
      cardText: "PT_STREET_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    nextStep: "landmark"
  }, {
    type: "component",
    route: "landmark",
    component: "SelectLandmark",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_PROPERTY_LOCATION_CAPTION",
      header: "CS_FILE_APPLICATION_PROPERTY_LOCATION_PROVIDE_LANDMARK_TITLE",
      cardText: "CS_FILE_APPLICATION_PROPERTY_LOCATION_PROVIDE_LANDMARK_TEXT",
      submitBarLabel: "PT_COMMON_NEXT",
      skipText: "CORE_COMMON_SKIP_CONTINUE"
    },
    key: "address",
    nextStep: "proof",
    hideInEmployee: true
  }, {
    type: "component",
    route: "proof",
    component: "Proof",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_PROPERTY_LOCATION_CAPTION",
      header: "PT_PROOF_OF_ADDRESS_HEADER",
      cardText: "",
      nextText: "PT_COMMONS_NEXT",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    key: "address",
    nextStep: "owner-ship-details@0",
    hideInEmployee: true
  }]
}, {
  head: "ES_NEW_APPLICATION_PROPERTY_ASSESSMENT",
  body: [{
    route: "info",
    component: "PropertyTax",
    nextStep: "isResidential",
    hideInEmployee: true,
    key: "Documents"
  }, {
    type: "component",
    route: "isResidential",
    isMandatory: true,
    component: "IsResidential",
    texts: {
      headerCaption: "",
      header: "PT_PROPERTY_DETAILS_RESIDENTIAL_PROPERTY_HEADER",
      cardText: "PT_PROPERTY_DETAILS_RESIDENTIAL_PROPERTY_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "isResdential",
    withoutLabel: true,
    hideInEmployee: true,
    nextStep: {
      PT_COMMON_YES: "property-type",
      PT_COMMON_NO: "property-usage-type"
    }
  }, {
    type: "component",
    route: "property-usage-type",
    isMandatory: true,
    component: "PropertyUsageType",
    texts: {
      headerCaption: "PT_ASSESMENT_INFO_USAGE_TYPE",
      header: "PT_PROPERTY_DETAILS_USAGE_TYPE_HEADER",
      cardText: "PT_PROPERTY_DETAILS_USAGE_TYPE_TEXT",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    nextStep: "property-type",
    key: "usageCategoryMajor",
    withoutLabel: true
  }, {
    type: "component",
    isMandatory: true,
    component: "ProvideSubUsageType",
    key: "usageCategoryMinor",
    withoutLabel: true
  }, {
    type: "component",
    route: "provide-sub-usage-type",
    isMandatory: true,
    component: "ProvideSubUsageType",
    texts: {
      headerCaption: "PT_ASSESMENT_INFO_USAGE_TYPE",
      header: "PT_ASSESSMENT_FLOW_SUBUSAGE_HEADER",
      cardText: "PT_ASSESSMENT_FLOW_SUBUSAGE_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "units",
    withoutLabel: true,
    nextStep: {
      yes: "is-any-part-of-this-floor-unoccupied",
      no: "provide-sub-usage-type-of-rented-area"
    },
    hideInEmployee: true
  }, {
    type: "component",
    route: "property-type",
    isMandatory: true,
    component: "PropertyType",
    texts: {
      headerCaption: "",
      header: "PT_ASSESMENT1_PROPERTY_TYPE",
      cardText: "",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    nextStep: {
      COMMON_PROPTYPE_BUILTUP_INDEPENDENTPROPERTY: "number-of-floors",
      COMMON_PROPTYPE_BUILTUP_SHAREDPROPERTY: "provide-floor-no",
      COMMON_PROPTYPE_VACANT: "area"
    },
    key: "PropertyType",
    withoutLabel: true
  }, {
    type: "component",
    isMandatory: true,
    component: "Area",
    key: "landarea",
    withoutLabel: true
  }, {
    type: "component",
    route: "area",
    isMandatory: true,
    component: "Area",
    texts: {
      headerCaption: "",
      header: "PT_ASSESSMENT_FLOW_AREA_HEADER",
      cardText: "PT_SELFOCCUPIED_AREA",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "units",
    withoutLabel: true,
    nextStep: {
      yes: "rental-details",
      no: "provide-sub-usage-type",
      vacant: "map"
    },
    hideInEmployee: true
  }, {
    type: "component",
    route: "number-of-floors",
    isMandatory: true,
    component: "PropertyFloorDetails",
    texts: {
      headerCaption: "",
      header: "BPA_SCRUTINY_DETAILS_NUMBER_OF_FLOORS_LABEL",
      cardText: "PT_PROPERTY_DETAILS_NO_OF_FLOORS_TEXT",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    nextStep: "number-of-basements@0",
    key: "noOfFloors",
    withoutLabel: true
  }, {
    type: "component",
    component: "Units",
    key: "units",
    withoutLabel: true
  }, {
    type: "component",
    route: "provide-floor-no",
    isMandatory: true,
    component: "ProvideFloorNo",
    texts: {
      headerCaption: "",
      header: "PT_FLOOR_NUMBER_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    nextStep: "floordetails",
    key: "Floorno",
    withoutLabel: true,
    hideInEmployee: true
  }, {
    type: "component",
    route: "is-this-floor-self-occupied",
    isMandatory: true,
    component: "IsThisFloorSelfOccupied",
    texts: {
      headerCaption: "",
      header: "PT_ASSESSMENT_FLOW_FLOOR_OCC_HEADER",
      cardText: "PT_ASSESSMENT_FLOW_FLOOR_OCC_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "units",
    withoutLabel: true,
    nextStep: {
      PT_YES_IT_IS_SELFOCCUPIED: "provide-sub-usage-type",
      PT_YES_IT_IS_SELFOCCUPIED1: "is-any-part-of-this-floor-unoccupied",
      PT_PARTIALLY_RENTED_OUT: "area",
      PT_PARTIALLY_RENTED_OUT1: "area",
      PT_FULLY_RENTED_OUT: "provide-sub-usage-type-of-rented-area",
      PT_FULLY_RENTED_OUT1: "rental-details"
    },
    hideInEmployee: true
  }, {
    type: "component",
    route: "number-of-basements@0",
    isMandatory: true,
    component: "PropertyBasementDetails",
    texts: {
      headerCaption: "",
      header: "PT_PROPERTY_DETAILS_NO_OF_BASEMENTS_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    nextStep: {
      PT_NO_BASEMENT_OPTION: "floordetails",
      PT_ONE_BASEMENT_OPTION: "floordetails",
      PT_TWO_BASEMENT_OPTION: "floordetails"
    },
    key: "noOofBasements",
    withoutLabel: true,
    hideInEmployee: true
  }, {
    type: "component",
    route: "floordetails",
    isMandatory: true,
    component: "GroundFloorDetails",
    texts: {
      headerCaption: "",
      cardText: "PT_PROPERTY_DETAILS_FLOOR_DETAILS_TEXT",
      submitBarLabel: "Next"
    },
    nextStep: "is-this-floor-self-occupied",
    key: "units",
    withoutLabel: true,
    hideInEmployee: true
  }, {
    type: "component",
    route: "rental-details",
    isMandatory: true,
    component: "RentalDetails",
    texts: {
      header: "PT_ASSESSMENT_FLOW_RENTAL_DETAIL_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "units",
    withoutLabel: true,
    nextStep: "is-any-part-of-this-floor-unoccupied",
    hideInEmployee: true
  }, {
    type: "component",
    route: "provide-sub-usage-type-of-rented-area",
    isMandatory: true,
    component: "ProvideSubUsageTypeOfRentedArea",
    texts: {
      headerCaption: "PT_ASSESMENT_INFO_USAGE_TYPE",
      header: "PT_ASSESSMENT_FLOW_RENT_SUB_USAGE_HEADER",
      cardText: "PT_ASSESSMENT_FLOW_SUBUSAGE_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "units",
    withoutLabel: true,
    nextStep: "rental-details",
    hideInEmployee: true
  }, {
    type: "component",
    route: "is-any-part-of-this-floor-unoccupied",
    isMandatory: true,
    component: "IsAnyPartOfThisFloorUnOccupied",
    texts: {
      header: "PT_ASSESSMENT_FLOW_ISUNOCCUPIED_HEADER",
      cardText: "PT_ASSESSMENT_FLOW_ISUNOCCUPIED_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "units",
    withoutLabel: true,
    nextStep: {
      PT_COMMON_NO: "map",
      PT_COMMON_YES: "un-occupied-area"
    },
    hideInEmployee: true
  }, {
    type: "component",
    route: "un-occupied-area",
    isMandatory: true,
    component: "UnOccupiedArea",
    texts: {
      header: "PT_ASSESSMENT_FLOW_UNOCCUPIED_AREA_HEADER",
      cardText: "PT_ASSESSMENT_FLOW_UNOCCUPIED_AREA_TEXT",
      submitBarLabel: "PT_COMMON_NEXT",
      skipText: ""
    },
    key: "units",
    withoutLabel: true,
    nextStep: "map",
    hideInEmployee: true
  }]
}, {
  head: "ES_NEW_APPLICATION_OWNERSHIP_DETAILS",
  body: [{
    type: "component",
    route: "owner-ship-details@0",
    isMandatory: true,
    component: "SelectOwnerShipDetails",
    texts: {
      headerCaption: "PT_PROPERTIES_OWNERSHIP",
      header: "PT_PROVIDE_OWNERSHIP_DETAILS",
      cardText: "PT_PROVIDE_OWNERSHI_DETAILS_SUB_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "ownershipCategory",
    withoutLabel: true,
    nextStep: {
      INSTITUTIONALPRIVATE: "inistitution-details",
      INSTITUTIONALGOVERNMENT: "inistitution-details",
      "INDIVIDUAL.SINGLEOWNER": "owner-details",
      "INDIVIDUAL.MULTIPLEOWNERS": "owner-details"
    }
  }, {
    isMandatory: true,
    type: "component",
    route: "owner-details",
    key: "owners",
    component: "SelectOwnerDetails",
    texts: {
      headerCaption: "",
      header: "PT_OWNERSHIP_INFO_SUB_HEADER",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    withoutLabel: true,
    nextStep: "special-owner-category",
    hideInEmployee: true
  }, {
    type: "component",
    route: "special-owner-category",
    isMandatory: true,
    component: "SelectSpecialOwnerCategoryType",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_SPECIAL_OWNER_CATEGORY",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "owner-address",
    hideInEmployee: true
  }, {
    type: "component",
    route: "owner-address",
    isMandatory: true,
    component: "SelectOwnerAddress",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_OWNERS_ADDRESS",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "special-owner-category-proof",
    hideInEmployee: true
  }, {
    type: "component",
    component: "SelectAltContactNumber",
    key: "owners",
    withoutLabel: true,
    hideInEmployee: true
  }, {
    type: "component",
    route: "special-owner-category-proof",
    isMandatory: true,
    component: "SelectSpecialProofIdentity",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_SPECIAL_OWNER_CATEGORY_PROOF_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "proof-of-identity",
    hideInEmployee: true
  }, {
    type: "component",
    route: "proof-of-identity",
    isMandatory: true,
    component: "SelectProofIdentity",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_PROOF_IDENTITY_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT",
      addMultipleText: "PT_COMMON_ADD_APPLICANT_LABEL"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: null,
    hideInEmployee: true
  }, {
    type: "component",
    route: "inistitution-details",
    isMandatory: true,
    component: "SelectInistitutionOwnerDetails",
    texts: {
      headerCaption: "",
      header: "PT_INSTITUTION_DETAILS_HEADER",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "institutional-owner-address",
    hideInEmployee: true
  }, {
    type: "component",
    route: "institutional-owner-address",
    isMandatory: true,
    component: "SelectOwnerAddress",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_OWNERS_ADDRESS",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "institutional-proof-of-identity",
    hideInEmployee: true
  }, {
    type: "component",
    route: "institutional-proof-of-identity",
    isMandatory: true,
    component: "SelectProofIdentity",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_PROOF_IDENTITY_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: null,
    hideInEmployee: true
  }, {
    type: "component",
    component: "PTEmployeeOwnershipDetails",
    key: "owners",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "ES_NEW_APPLICATION_DOCUMENTS_REQUIRED",
  body: [{
    component: "SelectDocuments",
    withoutLabel: true,
    key: "documents",
    type: "component"
  }]
}];

var ActionButton = function ActionButton(_ref) {
  var jumpTo = _ref.jumpTo;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var history = useHistory();

  function routeTo() {
    history.push(jumpTo);
  }

  return /*#__PURE__*/React.createElement(LinkButton, {
    label: t("CS_COMMON_CHANGE"),
    className: "check-page-link-button",
    onClick: routeTo
  });
};

var CheckPage = function CheckPage(_ref2) {
  var _address$documents, _address$documents$Pr, _units$, _units$2, _units$3, _units$3$selfOccupied, _units$4, _units$5, _units$6, _units$6$selfOccupied, _units$7, _units$8, _units$9, _units$9$selfOccupied, _units$10, _units$11, _units$11$selfOccupie, _units$12, _units$13, _units$14, _units$14$IsAnyPartOf, _units$15, _units$16, _units$17, _units$17$selfOccupie, _units$18, _units$19, _units$20, _units$20$selfOccupie, _units$21, _units$22, _units$23, _units$23$selfOccupie, _units$24, _units$25, _units$25$selfOccupie, _units$26, _units$27, _units$28, _units$28$IsAnyPartOf, _units$29, _units$30;

  var onSubmit = _ref2.onSubmit,
      _ref2$value = _ref2.value,
      value = _ref2$value === void 0 ? {} : _ref2$value;

  var _useTranslation2 = useTranslation(),
      t = _useTranslation2.t;

  var history = useHistory();
  var address = value.address,
      isResdential = value.isResdential,
      PropertyType = value.PropertyType,
      noOfFloors = value.noOfFloors,
      noOofBasements = value.noOofBasements,
      _value$units = value.units,
      units = _value$units === void 0 ? [{}] : _value$units,
      landarea = value.landarea,
      UnOccupiedArea = value.UnOccupiedArea,
      Floorno = value.Floorno,
      ownershipCategory = value.ownershipCategory,
      Constructiondetails = value.Constructiondetails,
      IsAnyPartOfThisFloorUnOccupied = value.IsAnyPartOfThisFloorUnOccupied,
      selfOccupied = value.selfOccupied,
      floordetails = value.floordetails,
      owners = value.owners,
      isEditProperty = value.isEditProperty,
      isUpdateProperty = value.isUpdateProperty;
  var typeOfApplication = !isEditProperty && !isUpdateProperty ? "new-application" : "edit-application";

  if (isPropertyselfoccupied(selfOccupied === null || selfOccupied === void 0 ? void 0 : selfOccupied.i18nKey)) {

    if (ispropertyunoccupied(IsAnyPartOfThisFloorUnOccupied === null || IsAnyPartOfThisFloorUnOccupied === void 0 ? void 0 : IsAnyPartOfThisFloorUnOccupied.i18nKey)) ;
  } else {

    if (!ispropertyunoccupied(IsAnyPartOfThisFloorUnOccupied === null || IsAnyPartOfThisFloorUnOccupied === void 0 ? void 0 : IsAnyPartOfThisFloorUnOccupied.i18nKey)) ;
  }

  if (isPropertyIndependent(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey)) ;

  var _useState = useState(false),
      agree = _useState[0],
      setAgree = _useState[1];

  var setdeclarationhandler = function setdeclarationhandler() {
    setAgree(!agree);
  };

  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(CardHeader, null, t("PT_CHECK_CHECK_YOUR_ANSWERS")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardText, null, t("PT_CHECK_CHECK_YOUR_ANSWERS_TEXT")), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_PROPERTY_ADDRESS_SUB_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_SUB_HEADER"),
    text: (address !== null && address !== void 0 && address.doorNo ? (address === null || address === void 0 ? void 0 : address.doorNo) + ", " : "") + " " + (address !== null && address !== void 0 && address.street ? (address === null || address === void 0 ? void 0 : address.street) + ", " : "") + (address !== null && address !== void 0 && address.landmark ? (address === null || address === void 0 ? void 0 : address.landmark) + ", " : "") + t(address === null || address === void 0 ? void 0 : address.locality.code) + ", " + t(address === null || address === void 0 ? void 0 : address.city.code) + "," + (t(address === null || address === void 0 ? void 0 : address.pincode) ? "" + address.pincode : " "),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/pincode"
    })
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROOF_OF_ADDRESS_SUB_HEADER"),
    text: "" + ((address === null || address === void 0 ? void 0 : (_address$documents = address.documents) === null || _address$documents === void 0 ? void 0 : (_address$documents$Pr = _address$documents.ProofOfAddress) === null || _address$documents$Pr === void 0 ? void 0 : _address$documents$Pr.name) && getFixedFilename(address.documents.ProofOfAddress.name) || "na"),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/proof"
    })
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_OWNERSHIP_DETAILS_SUB_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_FORM3_OWNERSHIP_TYPE"),
    text: t(checkForNA("PT_OWNERSHIP_" + (ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.code))),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-ship-details@0"
    })
  })), /*#__PURE__*/React.createElement("div", null, owners && owners.map && owners.map(function (owner, index) {
    var _owner$inistitutetype, _owner$documents$proo, _owner$gender, _owner$relationship, _owner$ownerType, _owner$ownerType2, _owner$documents$spec, _owner$documents$proo2;

    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, owners.length != 1 && /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_OWNER_SUB_HEADER"), " - ", index + 1), (ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.value) == "INSTITUTIONALPRIVATE" || (ownershipCategory === null || ownershipCategory === void 0 ? void 0 : ownershipCategory.value) == "INSTITUTIONALGOVERNMENT" ? /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_COMMON_INSTITUTION_NAME"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.inistitutionName)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_TYPE_OF_INSTITUTION"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : (_owner$inistitutetype = owner.inistitutetype) === null || _owner$inistitutetype === void 0 ? void 0 : _owner$inistitutetype.code)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_OWNER_NAME"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.name)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_COMMON_AUTHORISED_PERSON_DESIGNATION"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.designation)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_FORM3_MOBILE_NUMBER"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.mobileNumber)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_OWNERSHIP_INFO_TEL_PHONE_NO"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.altContactNumber)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_FORM3_EMAIL_ID"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.emailId)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/inistitution-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_OWNERSHIP_INFO_CORR_ADDR"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.permanentAddress)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/institutional-owner-address/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_COMMON_SAME_AS_PROPERTY_ADDRESS"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.isCorrespondenceAddress)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/institutional-owner-address/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_PROOF_IDENTITY_HEADER"),
      text: "" + ((owner === null || owner === void 0 ? void 0 : (_owner$documents$proo = owner.documents["proofIdentity"]) === null || _owner$documents$proo === void 0 ? void 0 : _owner$documents$proo.name) && getFixedFilename(owner.documents["proofIdentity"].name) || "na"),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/institutional-proof-of-identity/") + index
      })
    }))) : /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_OWNER_NAME"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.name)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_GENDER"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : (_owner$gender = owner.gender) === null || _owner$gender === void 0 ? void 0 : _owner$gender.code)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_FORM3_MOBILE_NUMBER"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.mobileNumber)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_GUARDIAN_NAME"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_RELATIONSHIP"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : (_owner$relationship = owner.relationship) === null || _owner$relationship === void 0 ? void 0 : _owner$relationship.code)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-details/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_SPECIAL_OWNER_CATEGORY"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : (_owner$ownerType = owner.ownerType) === null || _owner$ownerType === void 0 ? void 0 : _owner$ownerType.code)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/special-owner-category/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_OWNERS_ADDRESS"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.permanentAddress)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-address/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: "" + t("PT_COMMON_SAME_AS_PROPERTY_ADDRESS"),
      text: "" + t(checkForNA(owner === null || owner === void 0 ? void 0 : owner.isCorrespondenceAddress)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/owner-address/") + index
      })
    }), (owner === null || owner === void 0 ? void 0 : (_owner$ownerType2 = owner.ownerType) === null || _owner$ownerType2 === void 0 ? void 0 : _owner$ownerType2.code) !== "NONE" ? /*#__PURE__*/React.createElement(Row, {
      label: t("PT_SPECIAL_OWNER_CATEGORY_PROOF_HEADER"),
      text: "" + ((owner === null || owner === void 0 ? void 0 : (_owner$documents$spec = owner.documents["specialProofIdentity"]) === null || _owner$documents$spec === void 0 ? void 0 : _owner$documents$spec.name) && getFixedFilename(owner.documents["specialProofIdentity"].name) || "na"),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/special-owner-category-proof/") + index
      })
    }) : "", /*#__PURE__*/React.createElement(Row, {
      label: t("PT_PROOF_IDENTITY_HEADER"),
      text: "" + ((owner === null || owner === void 0 ? void 0 : (_owner$documents$proo2 = owner.documents["proofIdentity"]) === null || _owner$documents$proo2 === void 0 ? void 0 : _owner$documents$proo2.name) && getFixedFilename(owner.documents["proofIdentity"].name) || "na"),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/proof-of-identity/") + index
      })
    }))));
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_ASSESMENT_INFO_SUB_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_RESIDENTIAL_PROP_LABEL"),
    text: "" + t(checkForNA(isResdential === null || isResdential === void 0 ? void 0 : isResdential.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/isResidential"
    })
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT1_PROPERTY_TYPE"),
    text: "" + t(checkForNA(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/property-type"
    })
  }), !isPropertyVacant(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && !isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_NO_OF_FLOOR"),
    text: "" + t(checkForNA(noOfFloors === null || noOfFloors === void 0 ? void 0 : noOfFloors.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/number-of-floors"
    })
  }), !isPropertyVacant(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && !isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_DETAILS_NO_OF_BASEMENTS_LABEL"),
    text: "" + t(checkForNA(noOofBasements === null || noOofBasements === void 0 ? void 0 : noOofBasements.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/number-of-basements@0"
    })
  }), isPropertyVacant(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && !isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT1_PLOT_SIZE"),
    text: t(checkForNA(landarea === null || landarea === void 0 ? void 0 : landarea.floorarea)) + " " + ((landarea === null || landarea === void 0 ? void 0 : landarea.floorarea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/area"
    })
  }), isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT1_PLOT_SIZE"),
    text: t(checkForNA(floordetails === null || floordetails === void 0 ? void 0 : floordetails.plotSize)) + " " + ((floordetails === null || floordetails === void 0 ? void 0 : floordetails.plotSize) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/floordetails"
    })
  }), isPropertyIndependent(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT1_PLOT_SIZE"),
    text: t(checkForNA((_units$ = units[0]) === null || _units$ === void 0 ? void 0 : _units$.plotSize)) + " " + (((_units$2 = units[0]) === null || _units$2 === void 0 ? void 0 : _units$2.plotSize) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/floordetails/0"
    })
  })), !isPropertyVacant(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(CardSubHeader, null, t(Floorno === null || Floorno === void 0 ? void 0 : Floorno.i18nKey) + " " + t("PT_DETAILS_HEADER")), !isPropertyVacant(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_OCCUPLANCY"),
    text: "" + t(checkForNA(selfOccupied === null || selfOccupied === void 0 ? void 0 : selfOccupied.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/is-this-floor-self-occupied"
    })
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_BUILT_UP_AREA_LABEL"),
    text: t(checkForNA(floordetails === null || floordetails === void 0 ? void 0 : floordetails.builtUpArea)) + " " + ((floordetails === null || floordetails === void 0 ? void 0 : floordetails.builtUpArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/floordetails"
    })
  }), !isPropertyselfoccupied(selfOccupied === null || selfOccupied === void 0 ? void 0 : selfOccupied.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_RENTED_AREA_LABEL"),
    text: t(checkForNA(Constructiondetails === null || Constructiondetails === void 0 ? void 0 : Constructiondetails.RentArea)) + " " + ((Constructiondetails === null || Constructiondetails === void 0 ? void 0 : Constructiondetails.RentArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details"
    })
  }), !isPropertyselfoccupied(selfOccupied === null || selfOccupied === void 0 ? void 0 : selfOccupied.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ANNUAL_RENT_LABEL"),
    text: "\u20B9" + t(checkForNA(Constructiondetails === null || Constructiondetails === void 0 ? void 0 : Constructiondetails.AnnualRent)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details"
    })
  }), isPropertyPartiallyrented(selfOccupied === null || selfOccupied === void 0 ? void 0 : selfOccupied.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PROPERTYTAX_OCCUPANCYTYPE_SELFOCCUPIED") + " " + t("PT_ASSESSMENT_FLOW_AREA_HEADER"),
    text: t(checkForNA(landarea === null || landarea === void 0 ? void 0 : landarea.floorarea)) + " " + ((landarea === null || landarea === void 0 ? void 0 : landarea.floorarea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/area"
    })
  }), ispropertyunoccupied(IsAnyPartOfThisFloorUnOccupied === null || IsAnyPartOfThisFloorUnOccupied === void 0 ? void 0 : IsAnyPartOfThisFloorUnOccupied.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_UNOCCUPIED_AREA_LABEL"),
    text: t(checkForNA(UnOccupiedArea === null || UnOccupiedArea === void 0 ? void 0 : UnOccupiedArea.UnOccupiedArea)) + " " + ((UnOccupiedArea === null || UnOccupiedArea === void 0 ? void 0 : UnOccupiedArea.UnOccupiedArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/un-occupied-area"
    })
  })), /*#__PURE__*/React.createElement("div", null, !isPropertyVacant(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && !isPropertyFlatorPartofBuilding(PropertyType === null || PropertyType === void 0 ? void 0 : PropertyType.i18nKey) && units && units.map && units.map(function (owner, index) {
    var _units$index, _units$index$selfOccu, _units$index2, _units$index3, _units$index4, _units$index4$selfOcc, _units$index5, _units$index6, _units$index7, _units$index7$selfOcc, _units$index8, _units$index9, _units$index9$selfOcc, _units$index10, _units$index11, _units$index12, _units$index12$IsAnyP, _units$index13, _units$index14;

    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("PROPERTYTAX_FLOOR_" + (units[index].floorNo ? units[index].floorNo : index)), " ", t("PT_DETAILS_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_ASSESMENT_INFO_OCCUPLANCY"),
      text: "" + t(checkForNA((_units$index = units[index]) === null || _units$index === void 0 ? void 0 : (_units$index$selfOccu = _units$index.selfOccupied) === null || _units$index$selfOccu === void 0 ? void 0 : _units$index$selfOccu.i18nKey)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/is-this-floor-self-occupied/") + index
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_BUILT_UP_AREA_LABEL"),
      text: t(checkForNA((_units$index2 = units[index]) === null || _units$index2 === void 0 ? void 0 : _units$index2.builtUpArea)) + " " + (((_units$index3 = units[index]) === null || _units$index3 === void 0 ? void 0 : _units$index3.builtUpArea) && "sq.ft" || ""),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/floordetails/") + index
      })
    }), !isPropertyselfoccupied((_units$index4 = units[index]) === null || _units$index4 === void 0 ? void 0 : (_units$index4$selfOcc = _units$index4.selfOccupied) === null || _units$index4$selfOcc === void 0 ? void 0 : _units$index4$selfOcc.i18nKey) && /*#__PURE__*/React.createElement(Row, {
      label: t("PT_PROPERTY_RENTED_AREA_LABEL"),
      text: t(checkForNA((_units$index5 = units[index]) === null || _units$index5 === void 0 ? void 0 : _units$index5.RentArea)) + " " + (((_units$index6 = units[index]) === null || _units$index6 === void 0 ? void 0 : _units$index6.RentArea) && "sq.ft" || ""),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details/") + index
      })
    }), !isPropertyselfoccupied((_units$index7 = units[index]) === null || _units$index7 === void 0 ? void 0 : (_units$index7$selfOcc = _units$index7.selfOccupied) === null || _units$index7$selfOcc === void 0 ? void 0 : _units$index7$selfOcc.i18nKey) && /*#__PURE__*/React.createElement(Row, {
      label: t("PT_PROPERTY_ANNUAL_RENT_LABEL"),
      text: "\u20B9" + t(checkForNA((_units$index8 = units[index]) === null || _units$index8 === void 0 ? void 0 : _units$index8.AnnualRent)),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details/") + index
      })
    }), isPropertyPartiallyrented((_units$index9 = units[index]) === null || _units$index9 === void 0 ? void 0 : (_units$index9$selfOcc = _units$index9.selfOccupied) === null || _units$index9$selfOcc === void 0 ? void 0 : _units$index9$selfOcc.i18nKey) && /*#__PURE__*/React.createElement(Row, {
      label: t("PROPERTYTAX_OCCUPANCYTYPE_SELFOCCUPIED") + " " + t("PT_ASSESSMENT_FLOW_AREA_HEADER"),
      text: t(checkForNA((_units$index10 = units[index]) === null || _units$index10 === void 0 ? void 0 : _units$index10.floorarea)) + " " + (((_units$index11 = units[index]) === null || _units$index11 === void 0 ? void 0 : _units$index11.floorarea) && "sq.ft" || ""),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/area/") + index
      })
    }), ispropertyunoccupied((_units$index12 = units[index]) === null || _units$index12 === void 0 ? void 0 : (_units$index12$IsAnyP = _units$index12.IsAnyPartOfThisFloorUnOccupied) === null || _units$index12$IsAnyP === void 0 ? void 0 : _units$index12$IsAnyP.i18nKey) && /*#__PURE__*/React.createElement(Row, {
      label: t("PT_PROPERTY_UNOCCUPIED_AREA_LABEL"),
      text: t(checkForNA((_units$index13 = units[index]) === null || _units$index13 === void 0 ? void 0 : _units$index13.UnOccupiedArea)) + " " + (((_units$index14 = units[index]) === null || _units$index14 === void 0 ? void 0 : _units$index14.UnOccupiedArea) && "sq.ft" || ""),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "" + ("/digit-ui/citizen/pt/property/" + typeOfApplication + "/un-occupied-area/") + index
      })
    })));
  })), /*#__PURE__*/React.createElement("div", null, (isthere1Basement(noOofBasements === null || noOofBasements === void 0 ? void 0 : noOofBasements.i18nKey) || isthere2Basement(noOofBasements === null || noOofBasements === void 0 ? void 0 : noOofBasements.i18nKey)) && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardSubHeader, null, t("PROPERTYTAX_FLOOR__1"), " ", t("PT_DETAILS_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_OCCUPLANCY"),
    text: "" + t(checkForNA((_units$3 = units["-1"]) === null || _units$3 === void 0 ? void 0 : (_units$3$selfOccupied = _units$3.selfOccupied) === null || _units$3$selfOccupied === void 0 ? void 0 : _units$3$selfOccupied.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/is-this-floor-self-occupied/-1"
    })
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_BUILT_UP_AREA_LABEL"),
    text: t(checkForNA((_units$4 = units["-1"]) === null || _units$4 === void 0 ? void 0 : _units$4.builtUpArea)) + " " + (((_units$5 = units["-1"]) === null || _units$5 === void 0 ? void 0 : _units$5.builtUpArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/floordetails/-1"
    })
  }), !isPropertyselfoccupied((_units$6 = units["-1"]) === null || _units$6 === void 0 ? void 0 : (_units$6$selfOccupied = _units$6.selfOccupied) === null || _units$6$selfOccupied === void 0 ? void 0 : _units$6$selfOccupied.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_RENTED_AREA_LABEL"),
    text: t(checkForNA((_units$7 = units["-1"]) === null || _units$7 === void 0 ? void 0 : _units$7.RentArea)) + " " + (((_units$8 = units["-1"]) === null || _units$8 === void 0 ? void 0 : _units$8.RentArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details/-1"
    })
  }), !isPropertyselfoccupied((_units$9 = units["-1"]) === null || _units$9 === void 0 ? void 0 : (_units$9$selfOccupied = _units$9.selfOccupied) === null || _units$9$selfOccupied === void 0 ? void 0 : _units$9$selfOccupied.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ANNUAL_RENT_LABEL"),
    text: "\u20B9" + t(checkForNA((_units$10 = units["-1"]) === null || _units$10 === void 0 ? void 0 : _units$10.AnnualRent)) + " || \"\"}",
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details/-1"
    })
  }), isPropertyPartiallyrented((_units$11 = units["-1"]) === null || _units$11 === void 0 ? void 0 : (_units$11$selfOccupie = _units$11.selfOccupied) === null || _units$11$selfOccupie === void 0 ? void 0 : _units$11$selfOccupie.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PROPERTYTAX_OCCUPANCYTYPE_SELFOCCUPIED") + " " + t("PT_ASSESSMENT_FLOW_AREA_HEADER"),
    text: t(checkForNA((_units$12 = units["-1"]) === null || _units$12 === void 0 ? void 0 : _units$12.floorarea)) + " " + (((_units$13 = units["-1"]) === null || _units$13 === void 0 ? void 0 : _units$13.floorarea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/area/-1"
    })
  }), ispropertyunoccupied((_units$14 = units["-1"]) === null || _units$14 === void 0 ? void 0 : (_units$14$IsAnyPartOf = _units$14.IsAnyPartOfThisFloorUnOccupied) === null || _units$14$IsAnyPartOf === void 0 ? void 0 : _units$14$IsAnyPartOf.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_UNOCCUPIED_AREA_LABEL"),
    text: t(checkForNA((_units$15 = units["-1"]) === null || _units$15 === void 0 ? void 0 : _units$15.UnOccupiedArea)) + " " + (((_units$16 = units["-1"]) === null || _units$16 === void 0 ? void 0 : _units$16.UnOccupiedArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/un-occupied-area/-1"
    })
  })))), /*#__PURE__*/React.createElement("div", null, isthere2Basement(noOofBasements === null || noOofBasements === void 0 ? void 0 : noOofBasements.i18nKey) && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(CardSubHeader, null, t("PROPERTYTAX_FLOOR__2"), " ", t("PT_DETAILS_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_OCCUPLANCY"),
    text: "" + t(checkForNA((_units$17 = units["-2"]) === null || _units$17 === void 0 ? void 0 : (_units$17$selfOccupie = _units$17.selfOccupied) === null || _units$17$selfOccupie === void 0 ? void 0 : _units$17$selfOccupie.i18nKey)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/is-this-floor-self-occupied/-2"
    })
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_BUILT_UP_AREA_LABEL"),
    text: t(checkForNA((_units$18 = units["-2"]) === null || _units$18 === void 0 ? void 0 : _units$18.builtUpArea)) + " " + (((_units$19 = units["-2"]) === null || _units$19 === void 0 ? void 0 : _units$19.builtUpArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/floordetails/-2"
    })
  }), !isPropertyselfoccupied((_units$20 = units["-2"]) === null || _units$20 === void 0 ? void 0 : (_units$20$selfOccupie = _units$20.selfOccupied) === null || _units$20$selfOccupie === void 0 ? void 0 : _units$20$selfOccupie.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_RENTED_AREA_LABEL"),
    text: t(checkForNA((_units$21 = units["-2"]) === null || _units$21 === void 0 ? void 0 : _units$21.RentArea)) + " " + (((_units$22 = units["-2"]) === null || _units$22 === void 0 ? void 0 : _units$22.RentArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details/-2"
    })
  }), !isPropertyselfoccupied((_units$23 = units["-2"]) === null || _units$23 === void 0 ? void 0 : (_units$23$selfOccupie = _units$23.selfOccupied) === null || _units$23$selfOccupie === void 0 ? void 0 : _units$23$selfOccupie.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ANNUAL_RENT_LABEL"),
    text: "\u20B9" + t(checkForNA((_units$24 = units["-2"]) === null || _units$24 === void 0 ? void 0 : _units$24.AnnualRent)),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/rental-details/-2"
    })
  }), isPropertyPartiallyrented((_units$25 = units["-2"]) === null || _units$25 === void 0 ? void 0 : (_units$25$selfOccupie = _units$25.selfOccupied) === null || _units$25$selfOccupie === void 0 ? void 0 : _units$25$selfOccupie.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PROPERTYTAX_OCCUPANCYTYPE_SELFOCCUPIED") + " " + t("PT_ASSESSMENT_FLOW_AREA_HEADER"),
    text: t(checkForNA((_units$26 = units["-2"]) === null || _units$26 === void 0 ? void 0 : _units$26.floorarea)) + " " + (((_units$27 = units["-2"]) === null || _units$27 === void 0 ? void 0 : _units$27.floorarea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/area/-2"
    })
  }), ispropertyunoccupied((_units$28 = units["-2"]) === null || _units$28 === void 0 ? void 0 : (_units$28$IsAnyPartOf = _units$28.IsAnyPartOfThisFloorUnOccupied) === null || _units$28$IsAnyPartOf === void 0 ? void 0 : _units$28$IsAnyPartOf.i18nKey) && /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_UNOCCUPIED_AREA_LABEL"),
    text: t(checkForNA((_units$29 = units["-2"]) === null || _units$29 === void 0 ? void 0 : _units$29.UnOccupiedArea)) + " " + (((_units$30 = units["-2"]) === null || _units$30 === void 0 ? void 0 : _units$30.UnOccupiedArea) && "sq.ft" || ""),
    actionButton: /*#__PURE__*/React.createElement(ActionButton, {
      jumpTo: "/digit-ui/citizen/pt/property/" + typeOfApplication + "/un-occupied-area/-2"
    })
  })))), /*#__PURE__*/React.createElement(CheckBox, {
    label: t("PT_FINAL_DECLARATION_MESSAGE"),
    onChange: setdeclarationhandler,
    styles: {
      height: "auto"
    }
  })), /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_COMMON_BUTTON_SUBMIT"),
    onSubmit: onSubmit,
    disabled: !agree
  }));
};

var capitalize = function capitalize(text) {
  return text.substr(0, 1).toUpperCase() + text.substr(1);
};

var ulbCamel = function ulbCamel(ulb) {
  return ulb.toLowerCase().split(" ").map(capitalize).join(" ");
};

var getOwner = function getOwner(application, t, customTitle) {
  console.log(customTitle, application, "inside owner details");
  var owners = [];
  if (customTitle && customTitle.includes("TRANSFEROR")) owners = [].concat((application === null || application === void 0 ? void 0 : application.owners.filter(function (owner) {
    return owner.status == "INACTIVE";
  })) || []);else owners = [].concat((application === null || application === void 0 ? void 0 : application.owners.filter(function (owner) {
    return owner.status == "ACTIVE";
  })) || []);

  if ((application === null || application === void 0 ? void 0 : application.ownershipCategory) == "INDIVIDUAL.SINGLEOWNER") {
    var _owners$, _owners$2, _owners$3, _owners$4, _owners$5, _owners$6, _owners$7;

    return {
      title: t(customTitle || "PT_OWNERSHIP_INFO_SUB_HEADER"),
      values: [{
        title: t("PT_OWNERSHIP_INFO_NAME"),
        value: ((_owners$ = owners[0]) === null || _owners$ === void 0 ? void 0 : _owners$.name) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_MOBILE_NO"),
        value: ((_owners$2 = owners[0]) === null || _owners$2 === void 0 ? void 0 : _owners$2.mobileNumber) || t("CS_NA")
      }, {
        title: t("PT_SEARCHPROPERTY_TABEL_GUARDIANNAME"),
        value: ((_owners$3 = owners[0]) === null || _owners$3 === void 0 ? void 0 : _owners$3.fatherOrHusbandName) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_GENDER"),
        value: t((_owners$4 = owners[0]) === null || _owners$4 === void 0 ? void 0 : _owners$4.gender) || t("CS_NA")
      }, {
        title: t("PT_FORM3_OWNERSHIP_TYPE"),
        value: t(application === null || application === void 0 ? void 0 : application.ownershipCategory) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_EMAIL_ID"),
        value: ((_owners$5 = owners[0]) === null || _owners$5 === void 0 ? void 0 : _owners$5.emailId) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_USER_CATEGORY"),
        value: t(getPropertyOwnerTypeLocale((_owners$6 = owners[0]) === null || _owners$6 === void 0 ? void 0 : _owners$6.ownerType)) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_CORR_ADDR"),
        value: ((_owners$7 = owners[0]) === null || _owners$7 === void 0 ? void 0 : _owners$7.permanentAddress) || t("CS_NA")
      }]
    };
  } else if (application !== null && application !== void 0 && application.ownershipCategory.includes("INDIVIDUAL")) {
    var values = [];
    owners.map(function (owner) {
      var doc = [{
        title: t("PT_OWNERSHIP_INFO_NAME"),
        value: (owner === null || owner === void 0 ? void 0 : owner.name) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_MOBILE_NO"),
        value: (owner === null || owner === void 0 ? void 0 : owner.mobileNumber) || t("CS_NA")
      }, {
        title: t("PT_SEARCHPROPERTY_TABEL_GUARDIANNAME"),
        value: (owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_GENDER"),
        value: t(owner === null || owner === void 0 ? void 0 : owner.gender) || t("CS_NA")
      }, {
        title: t("PT_FORM3_OWNERSHIP_TYPE"),
        value: t(application === null || application === void 0 ? void 0 : application.ownershipCategory) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_EMAIL_ID"),
        value: (owner === null || owner === void 0 ? void 0 : owner.emailId) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_USER_CATEGORY"),
        value: t(getPropertyOwnerTypeLocale(owner === null || owner === void 0 ? void 0 : owner.ownerType)) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_CORR_ADDR"),
        value: (owner === null || owner === void 0 ? void 0 : owner.permanentAddress) || t("CS_NA")
      }];
      values.push.apply(values, doc);
    });
    return {
      title: t(customTitle || "PT_OWNERSHIP_INFO_SUB_HEADER"),
      values: values
    };
  } else if (application !== null && application !== void 0 && application.ownershipCategory.includes("INSTITUTIONAL")) {
    var _application$institut, _application$institut2, _application$institut3, _application$institut4, _owners$8, _owners$9, _owners$10;

    return {
      title: t("PT_OWNERSHIP_INFO_SUB_HEADER"),
      values: [{
        title: t("PT_COMMON_INSTITUTION_NAME"),
        value: (application === null || application === void 0 ? void 0 : (_application$institut = application.institution) === null || _application$institut === void 0 ? void 0 : _application$institut.name) || t("CS_NA")
      }, {
        title: t("PT_TYPE_OF_INSTITUTION"),
        value: (application === null || application === void 0 ? void 0 : (_application$institut2 = application.institution) === null || _application$institut2 === void 0 ? void 0 : _application$institut2.type) || t("CS_NA")
      }, {
        title: t("PT_OWNER_NAME"),
        value: (application === null || application === void 0 ? void 0 : (_application$institut3 = application.institution) === null || _application$institut3 === void 0 ? void 0 : _application$institut3.nameOfAuthorizedPerson) || t("CS_NA")
      }, {
        title: t("PT_COMMON_AUTHORISED_PERSON_DESIGNATION"),
        value: (application === null || application === void 0 ? void 0 : (_application$institut4 = application.institution) === null || _application$institut4 === void 0 ? void 0 : _application$institut4.designation) || t("CS_NA")
      }, {
        title: t("PT_FORM3_MOBILE_NUMBER"),
        value: ((_owners$8 = owners[0]) === null || _owners$8 === void 0 ? void 0 : _owners$8.mobileNumber) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_TEL_PHONE_NO"),
        value: ((_owners$9 = owners[0]) === null || _owners$9 === void 0 ? void 0 : _owners$9.altContactNumber) || t("CS_NA")
      }, {
        title: t("PT_OWNERSHIP_INFO_CORR_ADDR"),
        value: ((_owners$10 = owners[0]) === null || _owners$10 === void 0 ? void 0 : _owners$10.correspondenceAddress) || t("CS_NA")
      }, {
        title: t("PT_FORM3_OWNERSHIP_TYPE"),
        value: t(application === null || application === void 0 ? void 0 : application.ownershipCategory) || t("CS_NA")
      }]
    };
  } else {
    return {
      title: t("PT_OWNERSHIP_INFO_SUB_HEADER"),
      values: [{
        title: t("PT_NO_OWNERS"),
        value: t("CS_NA")
      }]
    };
  }
};

var getAssessmentInfo = function getAssessmentInfo(application, t) {
  var _application$units, _application$units$;

  var values = [{
    title: t("PT_ASSESMENT_INFO_USAGE_TYPE"),
    value: t(getPropertyUsageTypeLocale(application === null || application === void 0 ? void 0 : application.usageCategory)) || t("CS_NA")
  }, {
    title: t("PT_ASSESMENT_INFO_TYPE_OF_BUILDING"),
    value: t(getPropertyTypeLocale(application === null || application === void 0 ? void 0 : application.propertyType)) || t("CS_NA")
  }, {
    title: t("PT_ASSESMENT_INFO_PLOT_SIZE"),
    value: t(application === null || application === void 0 ? void 0 : application.landArea) || t("CS_NA")
  }, {
    title: t("PT_ASSESMENT_INFO_NO_OF_FLOOR"),
    value: t(application === null || application === void 0 ? void 0 : application.noOfFloors) || t("CS_NA")
  }];
  application.units = (application === null || application === void 0 ? void 0 : (_application$units = application.units) === null || _application$units === void 0 ? void 0 : _application$units.filter(function (unit) {
    return unit.active == true;
  })) || [];
  var flrno,
      i = 0;
  flrno = application.units && ((_application$units$ = application.units[0]) === null || _application$units$ === void 0 ? void 0 : _application$units$.floorNo);
  application.units.map(function (unit) {
    var _unit$constructionDet;

    var doc = [{
      title: (flrno !== (unit === null || unit === void 0 ? void 0 : unit.floorNo) ? i = 1 : i = i + 1) && i === 1 ? t("PROPERTYTAX_FLOOR_" + (unit === null || unit === void 0 ? void 0 : unit.floorNo)) : ""
    }, {
      title: t("")
    }, {
      title: t("")
    }, {
      title: t("")
    }, {
      title: t("PT_UNIT") + " " + i
    }, {
      title: t("")
    }, {
      title: t("")
    }, {
      title: t("")
    }, {
      title: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t("PT_ASSESSMENT_UNIT_USAGE_TYPE") : "",
      value: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t(getPropertySubUsageTypeLocale(unit === null || unit === void 0 ? void 0 : unit.usageCategory)) || t("CS_NA") : ""
    }, {
      title: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t("PT_ASSESMENT_INFO_OCCUPLANCY") : "",
      value: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t(getPropertyOccupancyTypeLocale(unit === null || unit === void 0 ? void 0 : unit.occupancyType)) || t("CS_NA") : ""
    }, {
      title: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t("PT_FORM2_BUILT_AREA") : "",
      value: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t(unit === null || unit === void 0 ? void 0 : (_unit$constructionDet = unit.constructionDetail) === null || _unit$constructionDet === void 0 ? void 0 : _unit$constructionDet.builtUpArea) || t("CS_NA") : ""
    }, {
      title: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t(getPropertyOccupancyTypeLocale(unit === null || unit === void 0 ? void 0 : unit.occupancyType)) === "Rented" ? t("PT_FORM2_TOTAL_ANNUAL_RENT") : t("") : "",
      value: (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 ? t(getPropertyOccupancyTypeLocale(unit === null || unit === void 0 ? void 0 : unit.occupancyType)) === "Rented" ? (unit === null || unit === void 0 ? void 0 : unit.arv) && "\u20B9" + t(unit === null || unit === void 0 ? void 0 : unit.arv) || "NA" : t("") : ""
    }];
    values.push.apply(values, doc);
  });
  return {
    title: t("PT_ASSESMENT_INFO_SUB_HEADER"),
    values: values
  };
};

var getMutationDetails = function getMutationDetails(application, t) {
  var _application$addition, _application$addition2, _application$addition3, _application$addition4, _application$addition5;

  return {
    title: t("PT_MUTATION_DETAILS"),
    values: [{
      title: t("PT_MUTATION_COURT_PENDING_OR_NOT"),
      value: application !== null && application !== void 0 && (_application$addition = application.additionalDetails) !== null && _application$addition !== void 0 && _application$addition.isMutationInCourt ? t("PT_MUTATION_PENDING_" + (application === null || application === void 0 ? void 0 : application.additionalDetails.isMutationInCourt)) : t("CS_NA")
    }, {
      title: t("PT_MUTATION_COURT_CASE_DETAILS"),
      value: (application === null || application === void 0 ? void 0 : (_application$addition2 = application.additionalDetails) === null || _application$addition2 === void 0 ? void 0 : _application$addition2.caseDetails) || t("CS_NA")
    }, {
      title: t("PT_MUTATION_STATE_ACQUISITION"),
      value: application !== null && application !== void 0 && (_application$addition3 = application.additionalDetails) !== null && _application$addition3 !== void 0 && _application$addition3.isPropertyUnderGovtPossession ? t("PT_MUTATION_STATE_ACQUISITION_" + (application === null || application === void 0 ? void 0 : (_application$addition4 = application.additionalDetails) === null || _application$addition4 === void 0 ? void 0 : _application$addition4.isPropertyUnderGovtPossession)) : t("CS_NA")
    }, {
      title: t("PT_MUTATION_GOVT_ACQUISITION_DETAILS"),
      value: (application === null || application === void 0 ? void 0 : (_application$addition5 = application.additionalDetails) === null || _application$addition5 === void 0 ? void 0 : _application$addition5.govtAcquisitionDetails) || t("CS_NA")
    }]
  };
};

var mutationRegistrationDetails = function mutationRegistrationDetails(application, t) {
  var _application$addition6, _application$addition7, _application$addition8, _application$addition9, _application$addition10, _application$addition11, _application$addition12;

  return {
    title: t("PT_MUTATION_REGISTRATION_DETAILS"),
    values: [{
      title: t("PT_MUTATION_TRANSFER_REASON"),
      value: t("PROPERTYTAX_REASONFORTRANSFER_" + (application === null || application === void 0 ? void 0 : (_application$addition6 = application.additionalDetails) === null || _application$addition6 === void 0 ? void 0 : _application$addition6.reasonForTransfer.replaceAll(".", "_")))
    }, {
      title: t("PT_MUTATION_MARKET_VALUE"),
      value: (application === null || application === void 0 ? void 0 : (_application$addition7 = application.additionalDetails) === null || _application$addition7 === void 0 ? void 0 : _application$addition7.marketValue) || t("CS_NA")
    }, {
      title: t("PT_MUTATION_DOCUMENT_NO"),
      value: (application === null || application === void 0 ? void 0 : (_application$addition8 = application.additionalDetails) === null || _application$addition8 === void 0 ? void 0 : _application$addition8.documentNumber) || t("CS_NA")
    }, {
      title: t("PT_MUTATION_DOCUMENT_VALUE"),
      value: (application === null || application === void 0 ? void 0 : (_application$addition9 = application.additionalDetails) === null || _application$addition9 === void 0 ? void 0 : _application$addition9.documentValue) || t("CS_NA")
    }, {
      title: t("PT_MUTATION_DOCUMENT_ISSUE_DATE"),
      value: application !== null && application !== void 0 && (_application$addition10 = application.additionalDetails) !== null && _application$addition10 !== void 0 && _application$addition10.documentDate ? new Date(application === null || application === void 0 ? void 0 : (_application$addition11 = application.additionalDetails) === null || _application$addition11 === void 0 ? void 0 : _application$addition11.documentDate).toDateString() : t("CS_NA")
    }, {
      title: t("")
    }, {
      title: t("PT_MUTATION_REMARKS"),
      value: (application === null || application === void 0 ? void 0 : (_application$addition12 = application.additionalDetails) === null || _application$addition12 === void 0 ? void 0 : _application$addition12.remarks) || t("CS_NA")
    }]
  };
};

var getPTAcknowledgementData = function getPTAcknowledgementData(application, tenantInfo, t) {
  try {
    var _application$document;

    console.log(application, "inside acknowledgement data");
    var filesArray = application === null || application === void 0 ? void 0 : (_application$document = application.documents) === null || _application$document === void 0 ? void 0 : _application$document.map(function (value) {
      return value === null || value === void 0 ? void 0 : value.fileStoreId;
    });
    return Promise.resolve(Digit.UploadServices.Filefetch(filesArray, application === null || application === void 0 ? void 0 : application.tenantId.split(".")[0])).then(function (res) {
      var _tenantInfo$city, _application$auditDet, _application$address, _application$address2, _application$address3, _application$address4, _application$address5, _application$address6, _tenantInfo$city2, _application$auditDet2, _application$address7, _application$address8, _application$address9, _application$address10, _application$address11, _application$address12;

      return application.creationReason === "MUTATION" ? {
        t: t,
        tenantId: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.code,
        name: t(tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.i18nKey) + " " + ulbCamel(t("ULBGRADE_" + (tenantInfo === null || tenantInfo === void 0 ? void 0 : (_tenantInfo$city = tenantInfo.city) === null || _tenantInfo$city === void 0 ? void 0 : _tenantInfo$city.ulbGrade.toUpperCase().replace(" ", "_").replace(".", "_")))),
        email: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.emailId,
        phoneNumber: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.contactNumber,
        heading: t("PT_ACKNOWLEDGEMENT"),
        details: [{
          title: t("CS_TITLE_APPLICATION_DETAILS"),
          values: [{
            title: t("PT_APPLICATION_NO"),
            value: application === null || application === void 0 ? void 0 : application.acknowldgementNumber
          }, {
            title: t("PT_PROPERRTYID"),
            value: application === null || application === void 0 ? void 0 : application.propertyId
          }, {
            title: t("CS_APPLICATION_DETAILS_APPLICATION_DATE"),
            value: Digit.DateUtils.ConvertTimestampToDate(application === null || application === void 0 ? void 0 : (_application$auditDet = application.auditDetails) === null || _application$auditDet === void 0 ? void 0 : _application$auditDet.createdTime, "dd/MM/yyyy")
          }]
        }, {
          title: t("PT_PROPERTY_ADDRESS_SUB_HEADER"),
          values: [{
            title: t("PT_PROPERTY_ADDRESS_PINCODE"),
            value: (application === null || application === void 0 ? void 0 : (_application$address = application.address) === null || _application$address === void 0 ? void 0 : _application$address.pincode) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_CITY"),
            value: t(getCityLocale(application === null || application === void 0 ? void 0 : application.tenantId)) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_MOHALLA"),
            value: t("" + getMohallaLocale(application === null || application === void 0 ? void 0 : (_application$address2 = application.address) === null || _application$address2 === void 0 ? void 0 : (_application$address3 = _application$address2.locality) === null || _application$address3 === void 0 ? void 0 : _application$address3.code, application === null || application === void 0 ? void 0 : application.tenantId)) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_STREET_NAME"),
            value: (application === null || application === void 0 ? void 0 : (_application$address4 = application.address) === null || _application$address4 === void 0 ? void 0 : _application$address4.street) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_HOUSE_NO"),
            value: (application === null || application === void 0 ? void 0 : (_application$address5 = application.address) === null || _application$address5 === void 0 ? void 0 : _application$address5.doorNo) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_LANDMARK"),
            value: (application === null || application === void 0 ? void 0 : (_application$address6 = application.address) === null || _application$address6 === void 0 ? void 0 : _application$address6.landmark) || t("CS_NA")
          }]
        }, getOwner(application, t, "PT_MUTATION_TRANSFEROR_DETAILS"), getOwner(application, t, "PT_MUTATION_TRANSFEREE_DETAILS_HEADER"), getMutationDetails(application, t), mutationRegistrationDetails(application, t)]
      } : {
        t: t,
        tenantId: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.code,
        name: t(tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.i18nKey) + " " + ulbCamel(t("ULBGRADE_" + (tenantInfo === null || tenantInfo === void 0 ? void 0 : (_tenantInfo$city2 = tenantInfo.city) === null || _tenantInfo$city2 === void 0 ? void 0 : _tenantInfo$city2.ulbGrade.toUpperCase().replace(" ", "_").replace(".", "_")))),
        email: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.emailId,
        phoneNumber: tenantInfo === null || tenantInfo === void 0 ? void 0 : tenantInfo.contactNumber,
        heading: t("PT_ACKNOWLEDGEMENT"),
        details: [{
          title: t("CS_TITLE_APPLICATION_DETAILS"),
          values: [{
            title: t("PT_APPLICATION_NO"),
            value: application === null || application === void 0 ? void 0 : application.acknowldgementNumber
          }, {
            title: t("PT_PROPERRTYID"),
            value: application === null || application === void 0 ? void 0 : application.propertyId
          }, {
            title: t("CS_APPLICATION_DETAILS_APPLICATION_DATE"),
            value: Digit.DateUtils.ConvertTimestampToDate(application === null || application === void 0 ? void 0 : (_application$auditDet2 = application.auditDetails) === null || _application$auditDet2 === void 0 ? void 0 : _application$auditDet2.createdTime, "dd/MM/yyyy")
          }]
        }, getOwner(application, t), getAssessmentInfo(application, t), {
          title: t("PT_PROPERTY_ADDRESS_SUB_HEADER"),
          values: [{
            title: t("PT_PROPERTY_ADDRESS_PINCODE"),
            value: (application === null || application === void 0 ? void 0 : (_application$address7 = application.address) === null || _application$address7 === void 0 ? void 0 : _application$address7.pincode) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_CITY"),
            value: t(getCityLocale(application === null || application === void 0 ? void 0 : application.tenantId)) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_MOHALLA"),
            value: t("" + getMohallaLocale(application === null || application === void 0 ? void 0 : (_application$address8 = application.address) === null || _application$address8 === void 0 ? void 0 : (_application$address9 = _application$address8.locality) === null || _application$address9 === void 0 ? void 0 : _application$address9.code, application === null || application === void 0 ? void 0 : application.tenantId)) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_STREET_NAME"),
            value: (application === null || application === void 0 ? void 0 : (_application$address10 = application.address) === null || _application$address10 === void 0 ? void 0 : _application$address10.street) || t("CS_NA")
          }, {
            title: t("PT_PROPERTY_ADDRESS_HOUSE_NO"),
            value: (application === null || application === void 0 ? void 0 : (_application$address11 = application.address) === null || _application$address11 === void 0 ? void 0 : _application$address11.doorNo) || t("CS_NA")
          }, (application === null || application === void 0 ? void 0 : application.channel) === "CITIZEN" ? {
            title: t("PT_PROPERTY_ADDRESS_LANDMARK"),
            value: (application === null || application === void 0 ? void 0 : (_application$address12 = application.address) === null || _application$address12 === void 0 ? void 0 : _application$address12.landmark) || t("CS_NA")
          } : {}]
        }, {
          title: t("PT_COMMON_DOCS"),
          values: application.documents.length > 0 ? application.documents.map(function (document, index) {
            var documentLink = pdfDownloadLink(res === null || res === void 0 ? void 0 : res.data, document === null || document === void 0 ? void 0 : document.fileStoreId);
            return {
              title: t((document === null || document === void 0 ? void 0 : document.documentType) || t("CS_NA")),
              value: pdfDocumentName(documentLink, index) || t("CS_NA")
            };
          }) : "NA"
        }]
      };
    });
  } catch (e) {
    return Promise.reject(e);
  }
};

var GetActionMessage = function GetActionMessage(props) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  if (props.isSuccess) {
    return !window.location.href.includes("edit-application") ? t("CS_PROPERTY_APPLICATION_SUCCESS") : t("CS_PROPERTY_UPDATE_APPLICATION_SUCCESS");
  } else if (props.isLoading) {
    return !window.location.href.includes("edit-application") ? t("CS_PROPERTY_APPLICATION_PENDING") : t("CS_PROPERTY_UPDATE_APPLICATION_PENDING");
  } else if (!props.isSuccess) {
    return !window.location.href.includes("edit-application") ? t("CS_PROPERTY_APPLICATION_FAILED") : t("CS_PROPERTY_UPDATE_APPLICATION_FAILED");
  }
};

var rowContainerStyle = {
  padding: "4px 0px",
  justifyContent: "space-between"
};

var BannerPicker = function BannerPicker(props) {
  var _props$data;

  return /*#__PURE__*/React.createElement(Banner, {
    message: GetActionMessage(props),
    applicationNumber: (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.Properties[0].acknowldgementNumber,
    info: props.isSuccess ? props.t("PT_APPLICATION_NO") : "",
    successful: props.isSuccess
  });
};

var PTAcknowledgement = function PTAcknowledgement(_ref) {
  var _data$address, _data$address2, _data$address2$city, _mutation$data, _mutation$data$Proper2;

  var data = _ref.data,
      onSuccess = _ref.onSuccess;

  var _useTranslation2 = useTranslation(),
      t = _useTranslation2.t;

  var isPropertyMutation = window.location.href.includes("property-mutation");
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var mutation = Digit.Hooks.pt.usePropertyAPI(data !== null && data !== void 0 && (_data$address = data.address) !== null && _data$address !== void 0 && _data$address.city ? (_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : (_data$address2$city = _data$address2.city) === null || _data$address2$city === void 0 ? void 0 : _data$address2$city.code : tenantId, !window.location.href.includes("edit-application") && !isPropertyMutation);

  var _Digit$Hooks$useStore = Digit.Hooks.useStore.getInitData(),
      storeData = _Digit$Hooks$useStore.data;

  var _ref2 = storeData || {},
      tenants = _ref2.tenants;

  useEffect(function () {
    try {
      var _data$Property, _data$address3, _data$address4, _data$address4$city, _formdata$Property;

      var _tenantId = isPropertyMutation ? (_data$Property = data.Property) === null || _data$Property === void 0 ? void 0 : _data$Property.address.tenantId : data !== null && data !== void 0 && (_data$address3 = data.address) !== null && _data$address3 !== void 0 && _data$address3.city ? (_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : (_data$address4$city = _data$address4.city) === null || _data$address4$city === void 0 ? void 0 : _data$address4$city.code : _tenantId;

      data.tenantId = _tenantId;
      var formdata = !window.location.href.includes("edit-application") ? isPropertyMutation ? data : convertToProperty(data) : convertToUpdateProperty(data);
      formdata.Property.tenantId = (formdata === null || formdata === void 0 ? void 0 : (_formdata$Property = formdata.Property) === null || _formdata$Property === void 0 ? void 0 : _formdata$Property.tenantId) || _tenantId;
      mutation.mutate(formdata, {
        onSuccess: onSuccess
      });
    } catch (err) {
      console.log(err, "inside ack");
    }
  }, []);

  var handleDownloadPdf = function handleDownloadPdf() {
    try {
      var _mutation$data$Proper = mutation.data.Properties,
          Properties = _mutation$data$Proper === void 0 ? [] : _mutation$data$Proper;
      var Property = Properties && Properties[0] || {};
      var tenantInfo = tenants.find(function (tenant) {
        return tenant.code === Property.tenantId;
      });
      return Promise.resolve(getPTAcknowledgementData(_extends({}, Property), tenantInfo, t)).then(function (data) {
        Digit.Utils.pdf.generate(data);
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  return mutation.isLoading || mutation.isIdle ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(BannerPicker, {
    t: t,
    data: mutation.data,
    isSuccess: mutation.isSuccess,
    isLoading: mutation.isIdle || mutation.isLoading
  }), mutation.isSuccess && /*#__PURE__*/React.createElement(CardText, null, t("CS_FILE_PROPERTY_RESPONSE")), !mutation.isSuccess && /*#__PURE__*/React.createElement(CardText, null, t("CS_FILE_PROPERTY_FAILED_RESPONSE")), /*#__PURE__*/React.createElement(StatusTable, null, mutation.isSuccess && /*#__PURE__*/React.createElement(Row, {
    rowContainerStyle: rowContainerStyle,
    last: true,
    label: t("PT_COMMON_TABLE_COL_PT_ID"),
    text: mutation === null || mutation === void 0 ? void 0 : (_mutation$data = mutation.data) === null || _mutation$data === void 0 ? void 0 : (_mutation$data$Proper2 = _mutation$data.Properties[0]) === null || _mutation$data$Proper2 === void 0 ? void 0 : _mutation$data$Proper2.propertyId,
    textStyle: {
      whiteSpace: "pre",
      width: "60%"
    }
  })), mutation.isSuccess && /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_DOWNLOAD_ACK_FORM"),
    onSubmit: handleDownloadPdf
  }), /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen"
  }, /*#__PURE__*/React.createElement(LinkButton, {
    label: t("CORE_COMMON_GO_TO_HOME")
  })));
};

var CreateProperty = function CreateProperty(_ref) {
  var queryClient = useQueryClient();
  var match = useRouteMatch();

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var history = useHistory();
  var config = [];

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_CREATE_PROPERTY", {}),
      params = _Digit$Hooks$useSessi[0],
      setParams = _Digit$Hooks$useSessi[1],
      clearParams = _Digit$Hooks$useSessi[2];

  var goNext = function goNext(skipStep, index, isAddMultiple, key) {
    var currentPath = pathname.split("/").pop(),
        lastchar = currentPath.charAt(currentPath.length - 1),
        isMultiple = false,
        nextPage;

    if (Number(parseInt(currentPath)) || currentPath == "0" || currentPath == "-1") {
      if (currentPath == "-1" || currentPath == "-2") {
        currentPath = pathname.slice(0, -3);
        currentPath = currentPath.split("/").pop();
        isMultiple = true;
      } else {
        currentPath = pathname.slice(0, -2);
        currentPath = currentPath.split("/").pop();
        isMultiple = true;
      }
    } else {
      isMultiple = false;
    }

    if (!isNaN(lastchar)) {
      isMultiple = true;
    }

    var _config$find = config.find(function (routeObj) {
      return routeObj.route === currentPath;
    }),
        _config$find$nextStep = _config$find.nextStep,
        nextStep = _config$find$nextStep === void 0 ? {} : _config$find$nextStep;

    if (typeof nextStep == "object" && nextStep != null && isMultiple != false) {
      if (nextStep[sessionStorage.getItem("ownershipCategory")]) {
        nextStep = nextStep[sessionStorage.getItem("ownershipCategory")] + "/" + index;
      } else if (nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")]) {
        if ("" + nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] === "un-occupied-area") {
          nextStep = nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] + "/" + index;
        } else {
          nextStep = "" + nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")];
        }
      } else if (nextStep[sessionStorage.getItem("subusagetypevar")]) {
        nextStep = nextStep[sessionStorage.getItem("subusagetypevar")] + "/" + index;
      } else if (nextStep[sessionStorage.getItem("area")]) {
        if ("" + nextStep[sessionStorage.getItem("area")] !== "map") {
          nextStep = nextStep[sessionStorage.getItem("area")] + "/" + index;
        } else {
          nextStep = "" + nextStep[sessionStorage.getItem("area")];
        }
      } else if (nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")]) {
        nextStep = nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")] + "/" + index;
      } else {
        nextStep = nextStep[sessionStorage.getItem("noOofBasements")] + "/" + index;
      }
    }

    if (typeof nextStep == "object" && nextStep != null && isMultiple == false) {
      if (nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] && (nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] == "map" || nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] == "un-occupied-area")) {
        nextStep = "" + nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")];
      } else if (nextStep[sessionStorage.getItem("subusagetypevar")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("subusagetypevar")];
      } else if (nextStep[sessionStorage.getItem("area")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("area")];
      } else if (nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")];
      } else if (nextStep[sessionStorage.getItem("PropertyType")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("PropertyType")];
      } else if (nextStep[sessionStorage.getItem("isResdential")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("isResdential")];
      }
    }

    var redirectWithHistory = history.push;

    if (skipStep) {
      redirectWithHistory = history.replace;
    }

    if (isAddMultiple) {
      nextStep = key;
    }

    if (nextStep === null) {
      return redirectWithHistory(match.path + "/check");
    }

    if (!isNaN(nextStep.split("/").pop())) {
      nextPage = match.path + "/" + nextStep;
    } else {
      nextPage = isMultiple && nextStep !== "map" ? match.path + "/" + nextStep + "/" + index : match.path + "/" + nextStep;
    }

    redirectWithHistory(nextPage);
  };

  var createProperty = function createProperty() {
    try {
      history.push(match.path + "/acknowledgement");
      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };

  function handleSelect(key, data, skipStep, index, isAddMultiple) {
    if (isAddMultiple === void 0) {
      isAddMultiple = false;
    }

    if (key === "owners") {
      var _extends2;

      var owners = params.owners || [];
      owners[index] = data;
      setParams(_extends({}, params, (_extends2 = {}, _extends2[key] = [].concat(owners), _extends2)));
    } else if (key === "units") {
      var units = params.units || [];
      units[index] = data;
      setParams(_extends({}, params, {
        units: units
      }));
    } else {
      var _extends3;

      setParams(_extends({}, params, (_extends3 = {}, _extends3[key] = _extends({}, params[key], data), _extends3)));
    }

    goNext(skipStep, index, isAddMultiple, key);
  }

  var handleSkip = function handleSkip() {};

  var handleMultiple = function handleMultiple() {};

  var onSuccess = function onSuccess() {
    clearParams();
    queryClient.invalidateQueries("PT_CREATE_PROPERTY");
  };

  newConfig.forEach(function (obj) {
    config = config.concat(obj.body.filter(function (a) {
      return !a.hideInCitizen;
    }));
  });
  config.indexRoute = "info";
  return /*#__PURE__*/React.createElement(Switch, null, config.map(function (routeObj, index) {
    var component = routeObj.component,
        texts = routeObj.texts,
        inputs = routeObj.inputs,
        key = routeObj.key;
    var Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      path: match.path + "/" + routeObj.route,
      key: index
    }, /*#__PURE__*/React.createElement(Component, {
      config: {
        texts: texts,
        inputs: inputs,
        key: key
      },
      onSelect: handleSelect,
      onSkip: handleSkip,
      t: t,
      formData: params,
      onAdd: handleMultiple
    }));
  }), /*#__PURE__*/React.createElement(Route, {
    path: match.path + "/check"
  }, /*#__PURE__*/React.createElement(CheckPage, {
    onSubmit: createProperty,
    value: params
  })), /*#__PURE__*/React.createElement(Route, {
    path: match.path + "/acknowledgement"
  }, /*#__PURE__*/React.createElement(PTAcknowledgement, {
    data: params,
    onSuccess: onSuccess
  })), /*#__PURE__*/React.createElement(Route, null, /*#__PURE__*/React.createElement(Redirect, {
    to: match.path + "/" + config.indexRoute
  })));
};

var PTApplication = function PTApplication(_ref) {
  var application = _ref.application;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_APPLICATION_NO_LABEL"),
    note: application === null || application === void 0 ? void 0 : application.acknowldgementNumber
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_APPLICATION_CATEGORY"),
    note: t("PROPERTY_TAX")
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_SEARCHPROPERTY_TABEL_PTUID"),
    note: application === null || application === void 0 ? void 0 : application.propertyId
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_COMMON_TABLE_COL_APP_TYPE"),
    note: (application === null || application === void 0 ? void 0 : application.creationReason) && t("PT." + application.creationReason) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_COMMON_TABLE_COL_STATUS_LABEL"),
    note: t("PT_COMMON_" + (application === null || application === void 0 ? void 0 : application.status))
  }), /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen/pt/property/application/" + (application === null || application === void 0 ? void 0 : application.acknowldgementNumber)
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_MY_APPLICATION_TRACK")
  })));
};

var PTMyApplications = function PTMyApplications() {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var filter = window.location.href.split("/").pop();
  var t1;
  var off;

  if (!isNaN(parseInt(filter))) {
    off = filter;
    t1 = parseInt(filter) + 50;
  } else {
    t1 = 4;
  }

  var filter1 = !isNaN(parseInt(filter)) ? {
    limit: "50",
    sortOrder: "ASC",
    sortBy: "createdTime",
    offset: off
  } : {
    limit: "4",
    sortOrder: "ASC",
    sortBy: "createdTime",
    offset: "0"
  };

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    filters: filter1
  }, {
    filters: filter1
  }),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  var _ref = data || {},
      applicationsList = _ref.Properties;

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("CS_TITLE_MY_APPLICATIONS") + " " + (applicationsList ? "(" + applicationsList.length + ")" : "")), /*#__PURE__*/React.createElement("div", null, (applicationsList === null || applicationsList === void 0 ? void 0 : applicationsList.length) > 0 && applicationsList.map(function (application, index) {
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(PTApplication, {
      application: application
    }));
  }), !(applicationsList !== null && applicationsList !== void 0 && applicationsList.length) > 0 && /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_NO_APPLICATION_FOUND_MSG")), (applicationsList === null || applicationsList === void 0 ? void 0 : applicationsList.length) !== 0 && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_LOAD_MORE_MSG"), " ", /*#__PURE__*/React.createElement("span", {
    className: "link"
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen/pt/property/my-applications/" + t1
  }, t("PT_COMMON_CLICK_HERE")))))), /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_TEXT_NOT_ABLE_TO_FIND_THE_APPLICATION"), " ", /*#__PURE__*/React.createElement("span", {
    className: "link",
    style: {
      display: "block"
    }
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen/pt/property/new-application/info"
  }, t("PT_COMMON_CLICK_HERE_TO_REGISTER_NEW_PROPERTY")))));
};

var MyProperty = function MyProperty(_ref) {
  var application = _ref.application;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var address = application === null || application === void 0 ? void 0 : application.address;
  var owners = application === null || application === void 0 ? void 0 : application.owners;
  return /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_COMMON_TABLE_COL_PT_ID"),
    note: application.propertyId
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_COMMON_TABLE_COL_OWNER_NAME"),
    note: owners.map(function (owners, index) {
      return /*#__PURE__*/React.createElement("div", {
        key: "index"
      }, index == owners.length - 1 ? (owners === null || owners === void 0 ? void 0 : owners.name) + "," : owners.name);
    })
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_COMMON_COL_ADDRESS"),
    note: t(address === null || address === void 0 ? void 0 : address.locality.name) + ", " + t(address === null || address === void 0 ? void 0 : address.city) + "," + (t(address === null || address === void 0 ? void 0 : address.pincode) ? "" + address.pincode : " ") || "CS_APPLICATION_TYPE_PT"
  }), /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_COMMON_TABLE_COL_STATUS_LABEL"),
    note: t("PT_COMMON_" + application.status)
  }), /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen/pt/property/properties/" + application.propertyId
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_VIEW_DETAILS")
  })));
};

var MyProperties = function MyProperties() {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var filter = window.location.href.split("/").pop();
  var t1;
  var off;

  if (!isNaN(parseInt(filter))) {
    off = filter;
    t1 = parseInt(filter) + 50;
  } else {
    t1 = 4;
  }

  var filter1 = !isNaN(parseInt(filter)) ? {
    limit: "50",
    sortOrder: "ASC",
    sortBy: "createdTime",
    offset: off
  } : {
    limit: "4",
    sortOrder: "ASC",
    sortBy: "createdTime",
    offset: "0"
  };

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    filters: filter1,
    searchedFrom: "myPropertyCitizen"
  }, {
    filters: filter1
  }),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  var _ref = data || {},
      applicationsList = _ref.Properties;

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("PT_MY_PROPERTIES_HEADER") + " " + (applicationsList ? "(" + applicationsList.length + ")" : "")), /*#__PURE__*/React.createElement("div", null, (applicationsList === null || applicationsList === void 0 ? void 0 : applicationsList.length) > 0 && applicationsList.map(function (application, index) {
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(MyProperty, {
      application: application
    }));
  }), !(applicationsList !== null && applicationsList !== void 0 && applicationsList.length) > 0 && /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_NO_PROP_FOUND_MSG")), (applicationsList === null || applicationsList === void 0 ? void 0 : applicationsList.length) !== 0 && /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_LOAD_MORE_MSG"), " ", /*#__PURE__*/React.createElement("span", {
    className: "link"
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen/pt/property/my-properties/" + t1
  }, t("PT_COMMON_CLICK_HERE")))))), /*#__PURE__*/React.createElement("p", {
    style: {
      marginLeft: "16px",
      marginTop: "16px"
    }
  }, t("PT_TEXT_NOT_ABLE_TO_FIND_THE_APPLICATION"), " ", /*#__PURE__*/React.createElement("span", {
    className: "link",
    style: {
      display: "block"
    }
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/citizen/pt/property/new-application/info"
  }, t("PT_COMMON_CLICK_HERE_TO_REGISTER_NEW_PROPERTY")))));
};

var PDFSvg = function PDFSvg(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === void 0 ? 20 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 20 : _ref$height,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("svg", {
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    width: width,
    height: height,
    viewBox: "0 0 20 20",
    fill: "gray"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z"
  }));
};

function PropertyDocument(_ref2) {
  var _ref2$property = _ref2.property,
      property = _ref2$property === void 0 ? {} : _ref2$property;

  var _useTranslation = useTranslation();

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyDocumentSearch({
    property: property
  }),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  var documents = (property === null || property === void 0 ? void 0 : property.documents) || [];

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      display: "flex",
      flexWrap: "wrap"
    }
  }, documents === null || documents === void 0 ? void 0 : documents.map(function (document, index) {
    var documentLink = pdfDownloadLink(data.pdfFiles, document === null || document === void 0 ? void 0 : document.fileStoreId);
    return /*#__PURE__*/React.createElement("a", {
      target: "_",
      href: documentLink,
      style: {
        minWidth: "160px"
      },
      key: index
    }, /*#__PURE__*/React.createElement(PDFSvg, {
      width: 85,
      height: 100,
      style: {
        background: "#f6f6f6",
        padding: "8px"
      }
    }), /*#__PURE__*/React.createElement("p", {
      style: {
        marginTop: "8px"
      }
    }, pdfDocumentName(documentLink, index)));
  }))));
}

var setBillData = function setBillData(tenantId, propertyIds, updatefetchBillData, updateCanFetchBillData) {
  try {
    return Promise.resolve(Digit.PTService.assessmentSearch({
      tenantId: tenantId,
      filters: {
        propertyIds: propertyIds
      }
    })).then(function (assessmentData) {
      function _temp2() {
        updatefetchBillData(billData);
        updateCanFetchBillData({
          loading: false,
          loaded: true,
          canLoad: true
        });
      }

      var billData = {};

      var _temp = function () {
        var _assessmentData$Asses;

        if ((assessmentData === null || assessmentData === void 0 ? void 0 : (_assessmentData$Asses = assessmentData.Assessments) === null || _assessmentData$Asses === void 0 ? void 0 : _assessmentData$Asses.length) > 0) {
          return Promise.resolve(Digit.PaymentService.fetchBill(tenantId, {
            businessService: "PT",
            consumerCode: propertyIds
          })).then(function (_Digit$PaymentService) {
            billData = _Digit$PaymentService;
          });
        }
      }();

      return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);
    });
  } catch (e) {
    return Promise.reject(e);
  }
};

var getBillAmount = function getBillAmount(fetchBillData) {
  var _fetchBillData, _fetchBillData$Bill$;

  if (fetchBillData === void 0) {
    fetchBillData = null;
  }

  if (fetchBillData == null) return "CS_NA";
  return fetchBillData ? (_fetchBillData = fetchBillData) !== null && _fetchBillData !== void 0 && _fetchBillData.Bill && fetchBillData.Bill[0] ? (_fetchBillData$Bill$ = fetchBillData.Bill[0]) === null || _fetchBillData$Bill$ === void 0 ? void 0 : _fetchBillData$Bill$.totalAmount : "CS_NA" : "CS_NA";
};

var PropertyInformation = function PropertyInformation() {
  var _units$, _property$address, _property$address2, _property$address3, _property$address3$lo, _property$address4, _property$usageCatego, _property$usageCatego2;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useParams = useParams(),
      propertyIds = _useParams.propertyIds;

  var _useState = useState(false),
      enableAudit = _useState[0],
      setEnableAudit = _useState[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    filters: {
      propertyIds: propertyIds
    }
  }, {
    filters: {
      propertyIds: propertyIds
    }
  }),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  var _Digit$Hooks$pt$usePr2 = Digit.Hooks.pt.usePropertySearch({
    tenantId: tenantId,
    filters: {
      propertyIds: propertyIds,
      audit: true
    }
  }, {
    enabled: enableAudit,
    select: function select(d) {
      var _d$Properties$filter;

      return (_d$Properties$filter = d.Properties.filter(function (e) {
        return e.status === "ACTIVE";
      })) === null || _d$Properties$filter === void 0 ? void 0 : _d$Properties$filter.sort(function (a, b) {
        return b.auditDetails.lastModifiedTime - a.auditDetails.lastModifiedTime;
      });
    }
  }),
      auditData = _Digit$Hooks$pt$usePr2.data;

  var _useState2 = useState({
    loading: false,
    loaded: false,
    canLoad: false
  }),
      billData = _useState2[0],
      updateCanFetchBillData = _useState2[1];

  var _useState3 = useState({}),
      fetchBillData = _useState3[0],
      updatefetchBillData = _useState3[1];

  var _useState4 = useState(function () {
    return (data === null || data === void 0 ? void 0 : data.Properties[0]) || " ";
  }),
      property = _useState4[0],
      setProperty = _useState4[1];

  useEffect(function () {
    if (data) {
      var _data$Properties$;

      setProperty(data === null || data === void 0 ? void 0 : data.Properties[0]);
      if ((data === null || data === void 0 ? void 0 : (_data$Properties$ = data.Properties[0]) === null || _data$Properties$ === void 0 ? void 0 : _data$Properties$.status) !== "ACTIVE") setEnableAudit(true);
    }
  }, [data]);
  useEffect(function () {
    if (auditData !== null && auditData !== void 0 && auditData[0]) {
      var _property$owners;

      var _property = (auditData === null || auditData === void 0 ? void 0 : auditData[0]) || {};

      _property.owners = _property === null || _property === void 0 ? void 0 : (_property$owners = _property.owners) === null || _property$owners === void 0 ? void 0 : _property$owners.filter(function (owner) {
        return owner.status == "ACTIVE";
      });
      setProperty(_property);
    }
  }, [enableAudit, auditData]);
  sessionStorage.setItem("pt-property", JSON.stringify(property));
  var docs = [];
  docs = property === null || property === void 0 ? void 0 : property.documents;
  var units = [];
  var owners = [];
  owners = property === null || property === void 0 ? void 0 : property.owners;
  units = property === null || property === void 0 ? void 0 : property.units;
  units && units.sort(function (x, y) {
    var a = x.floorNo,
        b = y.floorNo;

    if (x.floorNo < 0) {
      a = x.floorNo * -20;
    }

    if (y.floorNo < 0) {
      b = y.floorNo * -20;
    }

    if (a > b) {
      return 1;
    } else {
      return -1;
    }
  });

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  if ((property === null || property === void 0 ? void 0 : property.status) == "ACTIVE" && !billData.loading && !billData.loaded && !billData.canLoad) {
    updateCanFetchBillData({
      loading: false,
      loaded: false,
      canLoad: true
    });
  }

  if (billData !== null && billData !== void 0 && billData.canLoad && !billData.loading && !billData.loaded) {
    updateCanFetchBillData({
      loading: true,
      loaded: false,
      canLoad: true
    });
    setBillData((property === null || property === void 0 ? void 0 : property.tenantId) || tenantId, propertyIds, updatefetchBillData, updateCanFetchBillData);
  }

  var flrno,
      i = 0;
  flrno = units && ((_units$ = units[0]) === null || _units$ === void 0 ? void 0 : _units$.floorNo);

  var ActionButton = function ActionButton(_ref) {
    var jumpTo = _ref.jumpTo;

    var _useTranslation2 = useTranslation(),
        t = _useTranslation2.t;

    var history = useHistory();

    function routeTo() {
      history.push(jumpTo);
    }

    return /*#__PURE__*/React.createElement(LinkButton, {
      label: t("PT_OWNER_HISTORY"),
      className: "check-page-link-button",
      onClick: routeTo
    });
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("PT_PROPERTY_INFORMATION")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_PTUID"),
    text: "" + (property.propertyId || t("CS_NA")),
    textStyle: {
      whiteSpace: "pre"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("CS_COMMON_TOTAL_AMOUNT_DUE"),
    text: "" + t(getBillAmount(fetchBillData))
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_PROPERTY_ADDRESS_SUB_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_COLONY_NAME"),
    text: "" + (((_property$address = property.address) === null || _property$address === void 0 ? void 0 : _property$address.buildingName) || t("CS_NA"))
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_STREET_NAME"),
    text: "" + (((_property$address2 = property.address) === null || _property$address2 === void 0 ? void 0 : _property$address2.street) || t("CS_NA"))
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_COMMON_LOCALITY_OR_MOHALLA"),
    text: "" + t(property === null || property === void 0 ? void 0 : (_property$address3 = property.address) === null || _property$address3 === void 0 ? void 0 : (_property$address3$lo = _property$address3.locality) === null || _property$address3$lo === void 0 ? void 0 : _property$address3$lo.name) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_COMMON_CITY"),
    text: "" + (t(getCityLocale(property === null || property === void 0 ? void 0 : property.tenantId)) || t("CS_NA"))
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_PINCODE"),
    text: "" + (((_property$address4 = property.address) === null || _property$address4 === void 0 ? void 0 : _property$address4.pincode) || t("CS_NA"))
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_PROPERTY_ASSESSMENT_DETAILS_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_USAGE_TYPE"),
    text: "" + t((property.usageCategory !== "RESIDENTIAL" ? "COMMON_PROPUSGTYPE_NONRESIDENTIAL_" : "COMMON_PROPSUBUSGTYPE_") + (property !== null && property !== void 0 && (_property$usageCatego = property.usageCategory) !== null && _property$usageCatego !== void 0 && _property$usageCatego.split(".")[1] ? property === null || property === void 0 ? void 0 : (_property$usageCatego2 = property.usageCategory) === null || _property$usageCatego2 === void 0 ? void 0 : _property$usageCatego2.split(".")[1] : property.usageCategory)) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_COMMON_PROPERTY_TYPE"),
    text: "" + t(getPropertyTypeLocale(property === null || property === void 0 ? void 0 : property.propertyType)) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT1_PLOT_SIZE"),
    text: property.landArea + " sq.ft" || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_NO_OF_FLOOR"),
    text: "" + (property.noOfFloors || t("CS_NA"))
  })), /*#__PURE__*/React.createElement("div", null, Array.isArray(units) && units.length > 0 && units.map(function (unit, index) {
    var _property$usageCatego3, _property$usageCatego4, _unit$constructionDet;

    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, (flrno !== (unit === null || unit === void 0 ? void 0 : unit.floorNo) ? i = 1 : i = i + 1) && i === 1 && /*#__PURE__*/React.createElement(CardSubHeader, null, t("PROPERTYTAX_FLOOR_" + (unit === null || unit === void 0 ? void 0 : unit.floorNo))), /*#__PURE__*/React.createElement("div", {
      style: {
        border: "groove"
      }
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("ES_APPLICATION_DETAILS_UNIT"), " ", i), (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -5 && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_ASSESSMENT_UNIT_USAGE_TYPE"),
      text: "" + t((property.usageCategory !== "RESIDENTIAL" ? "COMMON_PROPSUBUSGTYPE_NONRESIDENTIAL_" : "COMMON_PROPSUBUSGTYPE_") + (property !== null && property !== void 0 && (_property$usageCatego3 = property.usageCategory) !== null && _property$usageCatego3 !== void 0 && _property$usageCatego3.split(".")[1] ? property === null || property === void 0 ? void 0 : (_property$usageCatego4 = property.usageCategory) === null || _property$usageCatego4 === void 0 ? void 0 : _property$usageCatego4.split(".")[1] : property.usageCategory) + (property.usageCategory !== "RESIDENTIAL" ? "_" + (unit === null || unit === void 0 ? void 0 : unit.usageCategory.split(".").pop()) : "")) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_OCCUPANY_TYPE_LABEL"),
      text: "" + t("PROPERTYTAX_OCCUPANCYTYPE_" + (unit === null || unit === void 0 ? void 0 : unit.occupancyType)) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_BUILTUP_AREA_LABEL"),
      text: "" + ((unit === null || unit === void 0 ? void 0 : (_unit$constructionDet = unit.constructionDetail) === null || _unit$constructionDet === void 0 ? void 0 : _unit$constructionDet.builtUpArea) + " sq.ft" || t("CS_NA"))
    }), unit.occupancyType == "RENTED" && /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM2_TOTAL_ANNUAL_RENT"),
      text: "" + ((unit === null || unit === void 0 ? void 0 : unit.arv) && "\u20B9" + (unit === null || unit === void 0 ? void 0 : unit.arv) || t("CS_NA"))
    }))));
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_COMMON_PROPERTY_OWNERSHIP_DETAILS_HEADER")), /*#__PURE__*/React.createElement("div", null, Array.isArray(owners) && owners.map(function (owner, index) {
    var _owners;

    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, owners.length != 1 && /*#__PURE__*/React.createElement("span", null, t("PT_OWNER_SUB_HEADER"), " - ", index + 1, " ")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_COMMON_APPLICANT_NAME_LABEL"),
      text: "" + ((owner === null || owner === void 0 ? void 0 : owner.name) || t("CS_NA")),
      actionButton: /*#__PURE__*/React.createElement(ActionButton, {
        jumpTo: "/digit-ui/citizen/pt/property/owner-history/" + property.tenantId + "/" + property.propertyId
      })
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_GUARDIAN_NAME"),
      text: "" + ((owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) || t("CS_NA"))
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_COMMON_GENDER_LABEL"),
      text: "" + (owner !== null && owner !== void 0 && owner.gender ? owner === null || owner === void 0 ? void 0 : owner.gender.toLowerCase() : t("CS_NA"))
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_OWNERSHIP_TYPE"),
      text: "" + (property !== null && property !== void 0 && property.ownershipCategory ? t("PT_OWNERSHIP_" + (property === null || property === void 0 ? void 0 : property.ownershipCategory)) : t("CS_NA"))
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_MOBILE_NUMBER"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.mobileNumber) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_MUTATION_AUTHORISED_EMAIL"),
      text: "" + t(t("CS_NA"))
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_MUTATION_TRANSFEROR_SPECIAL_CATEGORY"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.ownerType).toLowerCase() || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_OWNERSHIP_INFO_CORR_ADDR"),
      text: "" + t((_owners = owners) === null || _owners === void 0 ? void 0 : _owners.correspondenceAddress) || t("CS_NA")
    })));
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_COMMON_DOCS")), /*#__PURE__*/React.createElement("div", null, Array.isArray(docs) ? docs.length > 0 && /*#__PURE__*/React.createElement(PropertyDocument, {
    property: property
  }) : /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    text: "PT_NO_DOCUMENTS_MSG"
  }))), /*#__PURE__*/React.createElement("div", null, (property === null || property === void 0 ? void 0 : property.status) === "ACTIVE" && !enableAudit && /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "1em",
      bottom: "0px",
      width: "100%",
      marginBottom: "1.2em"
    }
  }, /*#__PURE__*/React.createElement(Link, {
    to: {
      pathname: "/digit-ui/citizen/pt/property/edit-application/action=UPDATE/" + property.propertyId
    }
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_UPDATE_PROPERTY_BUTTON")
  })))))));
};

var PTApplicationDetails = function PTApplicationDetails() {
  var _units$, _application$address, _application$address2, _application$address3, _application$address4, _application$address5, _application$usageCat, _application$usageCat2;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useParams = useParams(),
      acknowledgementIds = _useParams.acknowledgementIds;

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _Digit$Hooks$useStore = Digit.Hooks.useStore.getInitData(),
      storeData = _Digit$Hooks$useStore.data;

  var _ref = storeData || {},
      tenants = _ref.tenants;

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    filters: {
      acknowledgementIds: acknowledgementIds
    }
  }, {
    filters: {
      acknowledgementIds: acknowledgementIds
    }
  }),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  var application = data === null || data === void 0 ? void 0 : data.Properties[0];
  sessionStorage.setItem("pt-property", JSON.stringify(application));
  var units = [];
  units = application === null || application === void 0 ? void 0 : application.units;
  units && units.sort(function (x, y) {
    var a = x.floorNo,
        b = y.floorNo;

    if (x.floorNo < 0) {
      a = x.floorNo * -20;
    }

    if (y.floorNo < 0) {
      b = y.floorNo * -20;
    }

    if (a > b) {
      return 1;
    } else {
      return -1;
    }
  });
  var owners = [];
  owners = application === null || application === void 0 ? void 0 : application.owners;
  var docs = [];
  docs = application === null || application === void 0 ? void 0 : application.documents;

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  var flrno,
      i = 0;
  flrno = units && ((_units$ = units[0]) === null || _units$ === void 0 ? void 0 : _units$.floorNo);

  var handleDownloadPdf = function handleDownloadPdf() {
    try {
      var applications = application || {};
      var tenantInfo = tenants.find(function (tenant) {
        return tenant.code === applications.tenantId;
      });
      return Promise.resolve(getPTAcknowledgementData(_extends({}, applications), tenantInfo, t)).then(function (pdfData) {
        Digit.Utils.pdf.generate(pdfData);
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("PT_MUTATION_APPLICATION_DETAILS")), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(LinkButton, {
    label: t("CS_COMMON_DOWNLOAD"),
    className: "check-page-link-button pt-application-download-btn",
    onClick: handleDownloadPdf
  })), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_APPLICATION_NUMBER_LABEL"),
    text: application === null || application === void 0 ? void 0 : application.acknowldgementNumber,
    textStyle: {
      whiteSpace: "pre"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_SEARCHPROPERTY_TABEL_PTUID"),
    text: application === null || application === void 0 ? void 0 : application.propertyId,
    textStyle: {
      whiteSpace: "pre"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_APPLICATION_CHANNEL_LABEL"),
    text: t("ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + (application === null || application === void 0 ? void 0 : application.channel))
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_PROPERTY_ADDRESS_SUB_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_PINCODE"),
    text: "" + t(application === null || application === void 0 ? void 0 : (_application$address = application.address) === null || _application$address === void 0 ? void 0 : _application$address.pincode) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_COMMON_CITY"),
    text: "" + t(getCityLocale(application === null || application === void 0 ? void 0 : application.tenantId)) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_COMMON_LOCALITY_OR_MOHALLA"),
    text: t("" + getMohallaLocale(application === null || application === void 0 ? void 0 : (_application$address2 = application.address) === null || _application$address2 === void 0 ? void 0 : (_application$address3 = _application$address2.locality) === null || _application$address3 === void 0 ? void 0 : _application$address3.code, application === null || application === void 0 ? void 0 : application.tenantId)) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_STREET_NAME"),
    text: "" + t(application === null || application === void 0 ? void 0 : (_application$address4 = application.address) === null || _application$address4 === void 0 ? void 0 : _application$address4.street) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_PROPERTY_ADDRESS_COLONY_NAME"),
    text: "" + t(application === null || application === void 0 ? void 0 : (_application$address5 = application.address) === null || _application$address5 === void 0 ? void 0 : _application$address5.buildingName) || t("CS_NA")
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_PROPERTY_ASSESSMENT_DETAILS_HEADER")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_USAGE_TYPE"),
    text: "" + t((application.usageCategory !== "RESIDENTIAL" ? "COMMON_PROPUSGTYPE_NONRESIDENTIAL_" : "COMMON_PROPSUBUSGTYPE_") + (application !== null && application !== void 0 && (_application$usageCat = application.usageCategory) !== null && _application$usageCat !== void 0 && _application$usageCat.split(".")[1] ? application === null || application === void 0 ? void 0 : (_application$usageCat2 = application.usageCategory) === null || _application$usageCat2 === void 0 ? void 0 : _application$usageCat2.split(".")[1] : application.usageCategory)) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_COMMON_PROPERTY_TYPE"),
    text: "" + t(getPropertyTypeLocale(application === null || application === void 0 ? void 0 : application.propertyType)) || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT1_PLOT_SIZE"),
    text: (application === null || application === void 0 ? void 0 : application.landArea) && "" + t((application === null || application === void 0 ? void 0 : application.landArea) + " sq.ft") || t("CS_NA")
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("PT_ASSESMENT_INFO_NO_OF_FLOOR"),
    text: "" + t(application === null || application === void 0 ? void 0 : application.noOfFloors) || t("CS_NA")
  })), /*#__PURE__*/React.createElement("div", null, Array.isArray(units) && units.length > 0 && units.map(function (unit, index) {
    var _application$usageCat3, _application$usageCat4, _unit$constructionDet;

    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, (flrno !== (unit === null || unit === void 0 ? void 0 : unit.floorNo) ? i = 1 : i = i + 1) && i === 1 && /*#__PURE__*/React.createElement(CardSubHeader, null, t("PROPERTYTAX_FLOOR_" + (unit === null || unit === void 0 ? void 0 : unit.floorNo))), /*#__PURE__*/React.createElement("div", {
      style: {
        border: "groove"
      }
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, t("ES_APPLICATION_DETAILS_UNIT"), " ", i), (flrno = unit === null || unit === void 0 ? void 0 : unit.floorNo) > -3 && /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_ASSESSMENT_UNIT_USAGE_TYPE"),
      text: "" + t((application.usageCategory !== "RESIDENTIAL" ? "COMMON_PROPSUBUSGTYPE_NONRESIDENTIAL_" : "COMMON_PROPSUBUSGTYPE_") + (application !== null && application !== void 0 && (_application$usageCat3 = application.usageCategory) !== null && _application$usageCat3 !== void 0 && _application$usageCat3.split(".")[1] ? application === null || application === void 0 ? void 0 : (_application$usageCat4 = application.usageCategory) === null || _application$usageCat4 === void 0 ? void 0 : _application$usageCat4.split(".")[1] : application.usageCategory) + (application.usageCategory !== "RESIDENTIAL" ? "_" + (unit === null || unit === void 0 ? void 0 : unit.usageCategory.split(".").pop()) : "")) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_OCCUPANY_TYPE_LABEL"),
      text: "" + t("PROPERTYTAX_OCCUPANCYTYPE_" + (unit === null || unit === void 0 ? void 0 : unit.occupancyType)) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_BUILTUP_AREA_LABEL"),
      text: "" + ((unit === null || unit === void 0 ? void 0 : (_unit$constructionDet = unit.constructionDetail) === null || _unit$constructionDet === void 0 ? void 0 : _unit$constructionDet.builtUpArea) + " sq.ft" || t("CS_NA"))
    }), unit.occupancyType == "RENTED" && /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM2_TOTAL_ANNUAL_RENT"),
      text: "" + ((unit === null || unit === void 0 ? void 0 : unit.arv) && "\u20B9" + (unit === null || unit === void 0 ? void 0 : unit.arv) || t("CS_NA"))
    }))));
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_COMMON_PROPERTY_OWNERSHIP_DETAILS_HEADER")), /*#__PURE__*/React.createElement("div", null, Array.isArray(owners) && owners.map(function (owner, index) {
    return /*#__PURE__*/React.createElement("div", {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, null, owners.length != 1 && /*#__PURE__*/React.createElement("span", null, t("PT_OWNER_SUB_HEADER"), " - ", index + 1, " ")), /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
      label: t("PT_COMMON_APPLICANT_NAME_LABEL"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.name) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_GUARDIAN_NAME"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_COMMON_GENDER_LABEL"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.gender) || t("CS_NA")
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_OWNERSHIP_TYPE"),
      text: "" + (application !== null && application !== void 0 && application.ownershipCategory ? t("PT_OWNERSHIP_" + (application === null || application === void 0 ? void 0 : application.ownershipCategory)) : t("CS_NA"))
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_FORM3_MOBILE_NUMBER"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.mobileNumber)
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_MUTATION_AUTHORISED_EMAIL"),
      text: "" + t(t("CS_NA"))
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_MUTATION_TRANSFEROR_SPECIAL_CATEGORY"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.ownerType).toLowerCase()
    }), /*#__PURE__*/React.createElement(Row, {
      label: t("PT_OWNERSHIP_INFO_CORR_ADDR"),
      text: "" + t(owner === null || owner === void 0 ? void 0 : owner.correspondenceAddress) || t("CS_NA")
    })));
  })), /*#__PURE__*/React.createElement(CardSubHeader, null, t("PT_COMMON_DOCS")), /*#__PURE__*/React.createElement("div", null, Array.isArray(docs) ? docs.length > 0 && /*#__PURE__*/React.createElement(PropertyDocument, {
    property: application
  }) : /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    text: "PT_NO_DOCUMENTS_MSG"
  }))), /*#__PURE__*/React.createElement(PTWFApplicationTimeline, {
    application: application,
    id: acknowledgementIds
  }))));
};

var config = [{
  texts: {
    header: "SEARCH_PROPERTY",
    submitButtonLabel: "PT_HOME_SEARCH_RESULTS_BUTTON_SEARCH",
    text: "CS_PT_HOME_SEARCH_RESULTS_DESC"
  },
  inputs: [{
    label: "PT_HOME_SEARCH_RESULTS_OWN_MOB_LABEL",
    type: "mobileNumber",
    name: "mobileNumber",
    error: "ERR_HRMS_INVALID_USER_ID"
  }, {
    label: "PT_PROPERTY_UNIQUE_ID",
    description: "CS_PROPERTY_ID_FORMAT_MUST_BE",
    type: "text",
    name: "propertyId",
    error: "ERR_HRMS_WRONG_PASSWORD"
  }, {
    label: "PT_EXISTING_PROPERTY_ID",
    type: "text",
    name: "oldPropertyId",
    error: "ERR_HRMS_INVALID_CITY"
  }]
}];

var b = "function" === typeof Symbol && Symbol.for,
    c = b ? Symbol.for("react.element") : 60103,
    d = b ? Symbol.for("react.portal") : 60106,
    e = b ? Symbol.for("react.fragment") : 60107,
    f = b ? Symbol.for("react.strict_mode") : 60108,
    g = b ? Symbol.for("react.profiler") : 60114,
    h = b ? Symbol.for("react.provider") : 60109,
    k = b ? Symbol.for("react.context") : 60110,
    l = b ? Symbol.for("react.async_mode") : 60111,
    m = b ? Symbol.for("react.concurrent_mode") : 60111,
    n = b ? Symbol.for("react.forward_ref") : 60112,
    p = b ? Symbol.for("react.suspense") : 60113,
    q = b ? Symbol.for("react.suspense_list") : 60120,
    r = b ? Symbol.for("react.memo") : 60115,
    t = b ? Symbol.for("react.lazy") : 60116,
    v = b ? Symbol.for("react.block") : 60121,
    w = b ? Symbol.for("react.fundamental") : 60117,
    x = b ? Symbol.for("react.responder") : 60118,
    y = b ? Symbol.for("react.scope") : 60119;

function z(a) {
  if ("object" === typeof a && null !== a) {
    var u = a.$$typeof;

    switch (u) {
      case c:
        switch (a = a.type, a) {
          case l:
          case m:
          case e:
          case g:
          case f:
          case p:
            return a;

          default:
            switch (a = a && a.$$typeof, a) {
              case k:
              case n:
              case t:
              case r:
              case h:
                return a;

              default:
                return u;
            }

        }

      case d:
        return u;
    }
  }
}

function A(a) {
  return z(a) === m;
}

var AsyncMode = l;
var ConcurrentMode = m;
var ContextConsumer = k;
var ContextProvider = h;
var Element = c;
var ForwardRef = n;
var Fragment = e;
var Lazy = t;
var Memo = r;
var Portal = d;
var Profiler = g;
var StrictMode = f;
var Suspense = p;

var isAsyncMode = function isAsyncMode(a) {
  return A(a) || z(a) === l;
};

var isConcurrentMode = A;

var isContextConsumer = function isContextConsumer(a) {
  return z(a) === k;
};

var isContextProvider = function isContextProvider(a) {
  return z(a) === h;
};

var isElement = function isElement(a) {
  return "object" === typeof a && null !== a && a.$$typeof === c;
};

var isForwardRef = function isForwardRef(a) {
  return z(a) === n;
};

var isFragment = function isFragment(a) {
  return z(a) === e;
};

var isLazy = function isLazy(a) {
  return z(a) === t;
};

var isMemo = function isMemo(a) {
  return z(a) === r;
};

var isPortal = function isPortal(a) {
  return z(a) === d;
};

var isProfiler = function isProfiler(a) {
  return z(a) === g;
};

var isStrictMode = function isStrictMode(a) {
  return z(a) === f;
};

var isSuspense = function isSuspense(a) {
  return z(a) === p;
};

var isValidElementType = function isValidElementType(a) {
  return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
};

var typeOf = z;
var reactIs_production_min = {
  AsyncMode: AsyncMode,
  ConcurrentMode: ConcurrentMode,
  ContextConsumer: ContextConsumer,
  ContextProvider: ContextProvider,
  Element: Element,
  ForwardRef: ForwardRef,
  Fragment: Fragment,
  Lazy: Lazy,
  Memo: Memo,
  Portal: Portal,
  Profiler: Profiler,
  StrictMode: StrictMode,
  Suspense: Suspense,
  isAsyncMode: isAsyncMode,
  isConcurrentMode: isConcurrentMode,
  isContextConsumer: isContextConsumer,
  isContextProvider: isContextProvider,
  isElement: isElement,
  isForwardRef: isForwardRef,
  isFragment: isFragment,
  isLazy: isLazy,
  isMemo: isMemo,
  isPortal: isPortal,
  isProfiler: isProfiler,
  isStrictMode: isStrictMode,
  isSuspense: isSuspense,
  isValidElementType: isValidElementType,
  typeOf: typeOf
};

var reactIs_development = createCommonjsModule(function (module, exports) {

  if (process.env.NODE_ENV !== "production") {
    (function () {

      var hasSymbol = typeof Symbol === 'function' && Symbol.for;
      var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
      var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
      var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
      var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
      var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
      var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
      var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
      var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
      var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
      var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
      var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
      var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
      var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
      var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
      var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
      var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
      var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
      var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

      function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
      }

      function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
          var $$typeof = object.$$typeof;

          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = object.type;

              switch (type) {
                case REACT_ASYNC_MODE_TYPE:
                case REACT_CONCURRENT_MODE_TYPE:
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                  return type;

                default:
                  var $$typeofType = type && type.$$typeof;

                  switch ($$typeofType) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PROVIDER_TYPE:
                      return $$typeofType;

                    default:
                      return $$typeof;
                  }

              }

            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }

        return undefined;
      }

      var AsyncMode = REACT_ASYNC_MODE_TYPE;
      var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
      var ContextConsumer = REACT_CONTEXT_TYPE;
      var ContextProvider = REACT_PROVIDER_TYPE;
      var Element = REACT_ELEMENT_TYPE;
      var ForwardRef = REACT_FORWARD_REF_TYPE;
      var Fragment = REACT_FRAGMENT_TYPE;
      var Lazy = REACT_LAZY_TYPE;
      var Memo = REACT_MEMO_TYPE;
      var Portal = REACT_PORTAL_TYPE;
      var Profiler = REACT_PROFILER_TYPE;
      var StrictMode = REACT_STRICT_MODE_TYPE;
      var Suspense = REACT_SUSPENSE_TYPE;
      var hasWarnedAboutDeprecatedIsAsyncMode = false;

      function isAsyncMode(object) {
        {
          if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true;
            console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
          }
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
      }

      function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
      }

      function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      }

      function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
      }

      function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }

      function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      }

      function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      }

      function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      }

      function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      }

      function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      }

      function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      }

      function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      }

      function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      }

      exports.AsyncMode = AsyncMode;
      exports.ConcurrentMode = ConcurrentMode;
      exports.ContextConsumer = ContextConsumer;
      exports.ContextProvider = ContextProvider;
      exports.Element = Element;
      exports.ForwardRef = ForwardRef;
      exports.Fragment = Fragment;
      exports.Lazy = Lazy;
      exports.Memo = Memo;
      exports.Portal = Portal;
      exports.Profiler = Profiler;
      exports.StrictMode = StrictMode;
      exports.Suspense = Suspense;
      exports.isAsyncMode = isAsyncMode;
      exports.isConcurrentMode = isConcurrentMode;
      exports.isContextConsumer = isContextConsumer;
      exports.isContextProvider = isContextProvider;
      exports.isElement = isElement;
      exports.isForwardRef = isForwardRef;
      exports.isFragment = isFragment;
      exports.isLazy = isLazy;
      exports.isMemo = isMemo;
      exports.isPortal = isPortal;
      exports.isProfiler = isProfiler;
      exports.isStrictMode = isStrictMode;
      exports.isSuspense = isSuspense;
      exports.isValidElementType = isValidElementType;
      exports.typeOf = typeOf;
    })();
  }
});

var reactIs = createCommonjsModule(function (module) {

  if (process.env.NODE_ENV === 'production') {
    module.exports = reactIs_production_min;
  } else {
    module.exports = reactIs_development;
  }
});

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    }

    var test1 = new String('abc');
    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    }

    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    }

    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    return false;
  }
}

var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
var ReactPropTypesSecret_1 = ReactPropTypesSecret;

var printWarning = function printWarning() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret$1 = ReactPropTypesSecret_1;
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function printWarning(text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      throw new Error(message);
    } catch (x) {}
  };
}

function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;

        try {
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret$1);
        } catch (ex) {
          error = ex;
        }

        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }

        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : '';
          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}

checkPropTypes.resetWarningCache = function () {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
};

var checkPropTypes_1 = checkPropTypes;

var has$1 = Function.call.bind(Object.prototype.hasOwnProperty);

var printWarning$1 = function printWarning() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning$1 = function printWarning(text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

var factoryWithTypeCheckers = function factoryWithTypeCheckers(isValidElement, throwOnDirectAccess) {
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator';

  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);

    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  var ANONYMOUS = '<<anonymous>>';
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),
    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker
  };

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }

  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }

    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret_1) {
        if (throwOnDirectAccess) {
          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;

          if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
            printWarning$1('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }

      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }

          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }

        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== expectedType) {
        var preciseType = getPreciseType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }

      var propValue = props[propName];

      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }

      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret_1);

        if (error instanceof Error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      if (!reactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning$1('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
        } else {
          printWarning$1('Invalid argument supplied to oneOf, expected an array.');
        }
      }

      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];

      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);

        if (type === 'symbol') {
          return String(value);
        }

        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }

    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }

      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }

      for (var key in propValue) {
        if (has$1(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);

          if (error instanceof Error) {
            return error;
          }
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning$1('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];

      if (typeof checker !== 'function') {
        printWarning$1('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];

        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret_1) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }

    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      for (var key in shapeTypes) {
        var checker = shapeTypes[key];

        if (!checker) {
          continue;
        }

        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);

        if (error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);

      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }

      var allKeys = objectAssign({}, props[propName], shapeTypes);

      for (var key in allKeys) {
        var checker = shapeTypes[key];

        if (!checker) {
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret_1);

        if (error) {
          return error;
        }
      }

      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;

      case 'boolean':
        return !propValue;

      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }

        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);

        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;

          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            while (!(step = iterator.next()).done) {
              var entry = step.value;

              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;

      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    if (propType === 'symbol') {
      return true;
    }

    if (!propValue) {
      return false;
    }

    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = typeof propValue;

    if (Array.isArray(propValue)) {
      return 'array';
    }

    if (propValue instanceof RegExp) {
      return 'object';
    }

    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }

    return propType;
  }

  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }

    var propType = getPropType(propValue);

    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }

    return propType;
  }

  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);

    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;

      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;

      default:
        return type;
    }
  }

  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }

    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes_1;
  ReactPropTypes.resetWarningCache = checkPropTypes_1.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

function emptyFunction() {}

function emptyFunctionWithReset() {}

emptyFunctionWithReset.resetWarningCache = emptyFunction;

var factoryWithThrowingShims = function factoryWithThrowingShims() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret_1) {
      return;
    }

    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }
  shim.isRequired = shim;

  function getShim() {
    return shim;
  }
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

var propTypes = createCommonjsModule(function (module) {
  if (process.env.NODE_ENV !== 'production') {
    var ReactIs = reactIs;
    var throwOnDirectAccess = true;
    module.exports = factoryWithTypeCheckers(ReactIs.isElement, throwOnDirectAccess);
  } else {
    module.exports = factoryWithThrowingShims();
  }
});

var SearchProperty = function SearchProperty(_ref) {
  var _Digit$Hooks$pt$useTe;

  var propsConfig = _ref.config,
      onSelect = _ref.onSelect;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var history = useHistory();
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useState = useState(false),
      canSubmit = _useState[0],
      setCanSubmit = _useState[1];

  var allCities = (_Digit$Hooks$pt$useTe = Digit.Hooks.pt.useTenants()) === null || _Digit$Hooks$pt$useTe === void 0 ? void 0 : _Digit$Hooks$pt$useTe.sort(function (a, b) {
    var _a$i18nKey, _a$i18nKey$localeComp;

    return a === null || a === void 0 ? void 0 : (_a$i18nKey = a.i18nKey) === null || _a$i18nKey === void 0 ? void 0 : (_a$i18nKey$localeComp = _a$i18nKey.localeCompare) === null || _a$i18nKey$localeComp === void 0 ? void 0 : _a$i18nKey$localeComp.call(_a$i18nKey, b === null || b === void 0 ? void 0 : b.i18nKey);
  });

  var _useState2 = useState(),
      cityCode = _useState2[0],
      setCityCode = _useState2[1];

  var _useState3 = useState(),
      formValue = _useState3[0],
      setFormValue = _useState3[1];

  useLayoutEffect(function () {
    var getActionBar = function getActionBar() {
      var el = document.querySelector("div.action-bar-wrap");

      if (el) {
        el.style.position = "static";
        el.style.padding = "8px 0";
        el.style.boxShadow = "none";
        el.style.marginBottom = "16px";
      } else {
        setTimeout(function () {
          getActionBar();
        }, 100);
      }
    };

    getActionBar();
  }, []);

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId.split(".")[0], "DIGIT-UI", "HelpText", {
    select: function select(data) {
      var _data$DIGITUI, _data$DIGITUI$HelpTex, _data$DIGITUI$HelpTex2, _data$DIGITUI$HelpTex3;

      return data === null || data === void 0 ? void 0 : (_data$DIGITUI = data["DIGIT-UI"]) === null || _data$DIGITUI === void 0 ? void 0 : (_data$DIGITUI$HelpTex = _data$DIGITUI["HelpText"]) === null || _data$DIGITUI$HelpTex === void 0 ? void 0 : (_data$DIGITUI$HelpTex2 = _data$DIGITUI$HelpTex[0]) === null || _data$DIGITUI$HelpTex2 === void 0 ? void 0 : (_data$DIGITUI$HelpTex3 = _data$DIGITUI$HelpTex2.PT) === null || _data$DIGITUI$HelpTex3 === void 0 ? void 0 : _data$DIGITUI$HelpTex3.propertyIdFormat;
    }
  }),
      propertyIdFormat = _Digit$Hooks$pt$useMD.data,
      isLoading = _Digit$Hooks$pt$useMD.isLoading;

  var onPropertySearch = function onPropertySearch(data) {
    try {
      if (!data.mobileNumber && !data.propertyId && !data.oldPropertyId) {
        alert(t("PT_ERROR_NEED_ONE_PARAM"));
      } else if (propsConfig.action === "MUTATION") {
        var _data$locality;

        var qs = {};
        var propertyId = data.propertyId,
            oldPropertyId = data.oldPropertyId,
            _mobileNumber = data.mobileNumber;
        if (propertyId) qs.propertyIds = propertyId;
        if (oldPropertyId) qs.oldPropertyIds = oldPropertyId;
        if (_mobileNumber) qs.mobileNumber = _mobileNumber;
        onSelect(propsConfig.key, data, null, null, null, {
          queryParams: _extends({}, qs, {
            locality: (_data$locality = data.locality) === null || _data$locality === void 0 ? void 0 : _data$locality.code,
            city: cityCode
          })
        });
      } else {
        var _formValue$locality;

        history.push("/digit-ui/citizen/pt/property/search-results?mobileNumber=" + (data !== null && data !== void 0 && data.mobileNumber ? data === null || data === void 0 ? void 0 : data.mobileNumber : "") + "&propertyIds=" + (data !== null && data !== void 0 && data.propertyId ? data.propertyId : "") + "&oldPropertyIds=" + (data !== null && data !== void 0 && data.oldPropertyId ? data === null || data === void 0 ? void 0 : data.oldPropertyId : "") + "&locality=" + ((_formValue$locality = formValue.locality) === null || _formValue$locality === void 0 ? void 0 : _formValue$locality.code) + "&city=" + cityCode);
      }

      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };

  var _propsConfig$inputs = propsConfig.inputs,
      mobileNumber = _propsConfig$inputs[0],
      property = _propsConfig$inputs[1],
      oldProperty = _propsConfig$inputs[2];
  var config = [{
    body: [{
      label: "PT_SELECT_CITY",
      isMandatory: true,
      type: "custom",
      populators: {
        name: "city",
        defaultValue: null,
        rules: {
          required: true
        },
        customProps: {
          t: t,
          isMendatory: true,
          option: [].concat(allCities),
          optionKey: "i18nKey"
        },
        component: function component(props, customProps) {
          return /*#__PURE__*/React.createElement(Dropdown, _extends({}, customProps, {
            selected: props.value,
            select: function select(d) {
              if (d.code !== cityCode) props.setValue("locality", null);
              props.onChange(d);
            }
          }));
        }
      }
    }, {
      label: "PT_SELECT_LOCALITY",
      type: "custom",
      isMandatory: true,
      populators: {
        name: "locality",
        defaultValue: formValue === null || formValue === void 0 ? void 0 : formValue.locality,
        rules: {
          required: true
        },
        customProps: {},
        component: function component(props, customProps) {
          return /*#__PURE__*/React.createElement(Localities, {
            selectLocality: function selectLocality(d) {
              props.onChange(d);
            },
            tenantId: cityCode,
            boundaryType: "revenue",
            keepNull: false,
            optionCardStyles: {
              height: "600px",
              overflow: "auto",
              zIndex: "10"
            },
            selected: formValue === null || formValue === void 0 ? void 0 : formValue.locality,
            disable: !cityCode,
            disableLoader: true
          });
        }
      }
    }, {
      label: mobileNumber.label,
      type: mobileNumber.type,
      populators: {
        name: mobileNumber.name,
        validation: {
          pattern: /^[6-9]{1}[0-9]{9}$ /
        }
      },
      isMandatory: false
    }, {
      label: property.label,
      description: t(property.description) + "\n" + propertyIdFormat,
      descriptionStyles: {
        whiteSpace: "pre",
        fontSize: "14px",
        fontWeight: "400",
        fontFamily: "Roboto"
      },
      type: property.type,
      populators: {
        name: property.name
      },
      isMandatory: false
    }, {
      label: oldProperty.label,
      type: oldProperty.type,
      populators: {
        name: oldProperty.name
      },
      isMandatory: false
    }]
  }];

  var onFormValueChange = function onFormValueChange(setValue, data, formState) {
    var _data$mobileNumber$na;

    var mobileNumberLength = data === null || data === void 0 ? void 0 : (_data$mobileNumber$na = data[mobileNumber.name]) === null || _data$mobileNumber$na === void 0 ? void 0 : _data$mobileNumber$na.length;
    var oldPropId = data === null || data === void 0 ? void 0 : data[oldProperty.name];
    var propId = data === null || data === void 0 ? void 0 : data[property.name];
    var city = data === null || data === void 0 ? void 0 : data.city;
    var locality = data === null || data === void 0 ? void 0 : data.locality;

    if ((city === null || city === void 0 ? void 0 : city.code) !== cityCode) {
      setCityCode(city === null || city === void 0 ? void 0 : city.code);
    }

    if (!lodash.isEqual(data, formValue)) {
      setFormValue(data);
    }

    if (!locality || !city) {
      setCanSubmit(false);
      return;
    }

    if (mobileNumberLength > 0 && mobileNumberLength < 10) setCanSubmit(false);else if (!propId && !oldPropId && !mobileNumberLength) setCanSubmit(false);else setCanSubmit(true);
  };

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "16px",
      marginBottom: "16px"
    }
  }, /*#__PURE__*/React.createElement(FormComposer, {
    onSubmit: onPropertySearch,
    noBoxShadow: true,
    inline: true,
    config: config,
    label: propsConfig.texts.submitButtonLabel,
    heading: t(propsConfig.texts.header),
    text: t(propsConfig.texts.text),
    headingStyle: {
      fontSize: "32px",
      marginBottom: "16px",
      fontFamily: "Roboto Condensed,sans-serif"
    },
    isDisabled: !canSubmit,
    onFormValueChange: onFormValueChange
  }));
};

SearchProperty.propTypes = {
  loginParams: propTypes.any
};
SearchProperty.defaultProps = {
  loginParams: null
};

var SearchProperty$1 = function SearchProperty$1() {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useRouteMatch = useRouteMatch(),
      path = _useRouteMatch.path;

  var params = useMemo(function () {
    return config.map(function (step) {
      var texts = {};

      for (var key in step.texts) {
        texts[key] = t(step.texts[key]);
      }

      return _extends({}, step, {
        texts: texts
      });
    }, [config]);
  });
  return /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {
    path: "" + path,
    exact: true
  }, /*#__PURE__*/React.createElement(SearchProperty, {
    config: params[0]
  })));
};

var config$1 = [{
  texts: {
    header: "CS_SEARCH_RESULTS",
    actionButtonLabel: "CS_VIEW_DETAILS"
  },
  labels: [{
    label: "PT_TOTAL_DUES",
    key: "total_due",
    noteStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    },
    notePrefix: "₹ "
  }, {
    label: "PT_PROPERTY_PTUID",
    key: "property_id"
  }, {
    label: "PT_OWNERSHIP_INFO_NAME",
    key: "owner_name"
  }, {
    label: "PT_PROPERTY_ADDRESS_SUB_HEADER",
    key: "property_address"
  }, {
    label: "PT_DUE_DATE",
    key: "bil_due__date"
  }]
}];

var PropertySearchResults = function PropertySearchResults(_ref) {
  var _result$data, _result$data$Properti, _paymentDetails$data, _paymentDetails$data$, _result$data3, _result$data3$Propert, _result$data4, _modalData$total_due;

  var template = _ref.template,
      header = _ref.header,
      actionButtonLabel = _ref.actionButtonLabel,
      isMutation = _ref.isMutation,
      onSelect = _ref.onSelect,
      config = _ref.config,
      _ref$clearParams = _ref.clearParams,
      clearParams = _ref$clearParams === void 0 ? function () {} : _ref$clearParams;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var modalRef = useRef();

  var _Digit$Hooks$useQuery = Digit.Hooks.useQueryParams(),
      mobileNumber = _Digit$Hooks$useQuery.mobileNumber,
      propertyIds = _Digit$Hooks$useQuery.propertyIds,
      oldPropertyIds = _Digit$Hooks$useQuery.oldPropertyIds,
      locality = _Digit$Hooks$useQuery.locality,
      city = _Digit$Hooks$useQuery.city;

  var filters = {};

  var _useState = useState(false),
      modalData = _useState[0],
      setShowModal = _useState[1];

  var closeModal = function closeModal() {
    setShowModal(false);
  };

  Digit.Hooks.useClickOutside(modalRef, closeModal, modalData);
  if (mobileNumber) filters.mobileNumber = mobileNumber;
  if (propertyIds) filters.propertyIds = propertyIds;
  if (oldPropertyIds) filters.oldPropertyIds = oldPropertyIds;
  if (locality) filters.locality = locality;

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_MUTATE_MULTIPLE_OWNERS", null),
      setOwners = _Digit$Hooks$useSessi[1];

  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("PT_MUTATE_MULTIPLE_OWNERS_LAST_PATH", null),
      setLastPath = _Digit$Hooks$useSessi2[1];

  useEffect(function () {
    setOwners([]);
    clearParams();
    setLastPath("");
  }, []);
  var auth = !!isMutation;
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var searchArgs = city ? {
    tenantId: city,
    filters: filters,
    auth: auth
  } : {
    filters: filters,
    auth: auth
  };
  var result = Digit.Hooks.pt.usePropertySearch(searchArgs);
  var consumerCode = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$Properti = _result$data.Properties) === null || _result$data$Properti === void 0 ? void 0 : _result$data$Properti.map(function (a) {
    return a.propertyId;
  }).join(",");
  var fetchBillParams = mobileNumber ? {
    mobileNumber: mobileNumber,
    consumerCode: consumerCode
  } : {
    consumerCode: consumerCode
  };
  var paymentDetails = Digit.Hooks.useFetchBillsForBuissnessService(_extends({
    businessService: "PT"
  }, fetchBillParams, {
    tenantId: city
  }), {
    enabled: consumerCode ? true : false,
    retry: false
  });
  var history = useHistory();

  var proceedToPay = function proceedToPay(data) {
    history.push("/digit-ui/citizen/payment/my-bills/PT/" + data.property_id, {
      tenantId: tenantId
    });
  };

  if (paymentDetails.isLoading || result.isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  if (result.error || !consumerCode) {
    return /*#__PURE__*/React.createElement("div", null, t("CS_PT_NO_PROPERTIES_FOUND"));
  }

  var onSubmit = function onSubmit(data) {
    if (isMutation) {
      var _result$data2, _result$data2$Propert, _result$data2$Propert2;

      var property = result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : (_result$data2$Propert = _result$data2.Properties) === null || _result$data2$Propert === void 0 ? void 0 : (_result$data2$Propert2 = _result$data2$Propert.filter) === null || _result$data2$Propert2 === void 0 ? void 0 : _result$data2$Propert2.call(_result$data2$Propert, function (e) {
        return e.propertyId === data.property_id;
      })[0];

      if (Number(data.total_due) > 0) {
        setShowModal(data);
      } else onSelect(config.key, {
        data: data,
        property: property
      });
    } else history.push("/digit-ui/citizen/payment/my-bills/PT/" + data.property_id, {
      tenantId: tenantId
    });
  };

  var payment = {};
  paymentDetails === null || paymentDetails === void 0 ? void 0 : (_paymentDetails$data = paymentDetails.data) === null || _paymentDetails$data === void 0 ? void 0 : (_paymentDetails$data$ = _paymentDetails$data.Bill) === null || _paymentDetails$data$ === void 0 ? void 0 : _paymentDetails$data$.forEach(function (element) {
    if (element !== null && element !== void 0 && element.consumerCode) {
      payment[element === null || element === void 0 ? void 0 : element.consumerCode] = {
        total_due: element === null || element === void 0 ? void 0 : element.totalAmount,
        bil_due__date: new Date(element === null || element === void 0 ? void 0 : element.billDate).toDateString()
      };
    }
  });
  var arr = isMutation ? result === null || result === void 0 ? void 0 : (_result$data3 = result.data) === null || _result$data3 === void 0 ? void 0 : (_result$data3$Propert = _result$data3.Properties) === null || _result$data3$Propert === void 0 ? void 0 : _result$data3$Propert.filter(function (e) {
    return e.status === "ACTIVE";
  }) : result === null || result === void 0 ? void 0 : (_result$data4 = result.data) === null || _result$data4 === void 0 ? void 0 : _result$data4.Properties;
  var searchResults = arr === null || arr === void 0 ? void 0 : arr.map(function (property) {
    var _, _addr$locality, _payment$property$pro, _payment$property$pro2;

    var addr = (property === null || property === void 0 ? void 0 : property.address) || {};
    return {
      property_id: property === null || property === void 0 ? void 0 : property.propertyId,
      owner_name: (_ = ((property === null || property === void 0 ? void 0 : property.owners) || [])[0]) === null || _ === void 0 ? void 0 : _.name,
      property_address: [addr.doorNo || "", addr.buildingName || "", addr.street || "", ((_addr$locality = addr.locality) === null || _addr$locality === void 0 ? void 0 : _addr$locality.name) || "", addr.city || ""].filter(function (a) {
        return a;
      }).join(", "),
      total_due: ((_payment$property$pro = payment[property === null || property === void 0 ? void 0 : property.propertyId]) === null || _payment$property$pro === void 0 ? void 0 : _payment$property$pro.total_due) || 0,
      bil_due__date: ((_payment$property$pro2 = payment[property === null || property === void 0 ? void 0 : property.propertyId]) === null || _payment$property$pro2 === void 0 ? void 0 : _payment$property$pro2.bil_due__date) || t("N/A")
    };
  });
  return /*#__PURE__*/React.createElement("div", {
    className: "static",
    style: {
      marginTop: "16px"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "static-wrapper"
  }, header && /*#__PURE__*/React.createElement(Header, {
    style: {
      marginLeft: "8px"
    }
  }, t(header), " (", searchResults === null || searchResults === void 0 ? void 0 : searchResults.length, ")"), /*#__PURE__*/React.createElement(ResponseComposer, {
    data: searchResults,
    template: template,
    actionButtonLabel: actionButtonLabel,
    onSubmit: onSubmit
  })), modalData ? /*#__PURE__*/React.createElement(Modal, {
    hideSubmit: true,
    isDisabled: false,
    popupStyles: {
      width: "319px",
      height: "250px",
      margin: "auto"
    },
    formId: "modal-action"
  }, /*#__PURE__*/React.createElement("div", {
    ref: modalRef
  }, /*#__PURE__*/React.createElement(KeyNote, {
    keyValue: t("PT_AMOUNT_DUE"),
    note: "\u20B9 " + (modalData === null || modalData === void 0 ? void 0 : (_modalData$total_due = modalData.total_due) === null || _modalData$total_due === void 0 ? void 0 : _modalData$total_due.toLocaleString("en-IN")),
    noteStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    }
  }), /*#__PURE__*/React.createElement("p", null, t("PT_YOU_HAVE") + " " + "₹" + " " + (modalData === null || modalData === void 0 ? void 0 : modalData.total_due.toLocaleString("en-IN")) + " " + t("PT_PENDING_AMOUNT") + " " + t("PT_INORDER_TO_TRANSFER")), /*#__PURE__*/React.createElement(SubmitBar, {
    submit: false,
    onSubmit: function onSubmit() {
      return proceedToPay(modalData);
    },
    style: {
      marginTop: "14px",
      width: "100%"
    },
    label: t("PT_PROCEED_PAYMENT")
  }))) : null);
};

PropertySearchResults.propTypes = {
  template: propTypes.any,
  header: propTypes.string,
  actionButtonLabel: propTypes.string
};
PropertySearchResults.defaultProps = {
  template: [],
  header: null,
  actionButtonLabel: null
};

var CitizenSearchResults = function CitizenSearchResults(props) {
  var propConfig = props.config,
      onSelect = props.onSelect,
      clearParams = props.clearParams;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useRouteMatch = useRouteMatch(),
      path = _useRouteMatch.path;

  var config = propConfig ? [propConfig] : config$1;
  var params = useMemo(function () {
    var _config$map;

    return config === null || config === void 0 ? void 0 : (_config$map = config.map) === null || _config$map === void 0 ? void 0 : _config$map.call(config, function (step) {
      var texts = {};

      for (var key in step.texts) {
        texts[key] = t(step.texts[key]);
      }

      return _extends({}, step, {
        texts: texts
      });
    });
  }, [config]);
  return /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {
    path: "" + path,
    exact: true
  }, /*#__PURE__*/React.createElement(PropertySearchResults, {
    template: params[0].labels,
    header: params[0].texts.header,
    actionButtonLabel: params[0].texts.actionButtonLabel,
    t: t,
    isMutation: (propConfig === null || propConfig === void 0 ? void 0 : propConfig.action) === "MUTATION",
    onSelect: onSelect,
    config: propConfig,
    clearParams: clearParams
  })));
};

var returnTransferData = function returnTransferData(value, rowContainerStyles) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return Object.keys(value).map(function (key) {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Row, {
      rowContainerStyle: rowContainerStyles,
      label: t(key),
      text: "" + (value[key] || "NA")
    }));
  });
};

var TransferDetails = function TransferDetails(_ref) {
  var data = _ref.data,
      showHorizontalBar = _ref.showHorizontalBar,
      wrapperStyles = _ref.wrapperStyles,
      tableStyles = _ref.tableStyles,
      containerStyles = _ref.containerStyles,
      rowContainerStyles = _ref.rowContainerStyles;
  return /*#__PURE__*/React.createElement("div", {
    className: wrapperStyles
  }, data.map(function (value, index) {
    return /*#__PURE__*/React.createElement("div", {
      className: containerStyles
    }, index !== 0 && showHorizontalBar && /*#__PURE__*/React.createElement("div", {
      className: "historyHorizontalBar"
    }), /*#__PURE__*/React.createElement(StatusTable, {
      style: tableStyles
    }, returnTransferData(value, rowContainerStyles)));
  }));
};

var propertyOwnerHistory = function propertyOwnerHistory(_ref) {
  var userType = _ref.userType,
      propertyIdFromProp = _ref.propertyId;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useParams = useParams(),
      propertyIds = _useParams.propertyIds;

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var audit = true;

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    tenantId: tenantId,
    filters: {
      propertyIds: userType === "employee" ? propertyIdFromProp : propertyIds,
      audit: audit
    }
  }),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      data = _Digit$Hooks$pt$usePr.data;

  var properties = (data === null || data === void 0 ? void 0 : data.Properties) || " ";
  var ownershipInfo = {};

  var getUniqueList = function getUniqueList(list) {
    if (list === void 0) {
      list = [];
    }

    var newList = [];
    list.map(function (element) {
      if (!JSON.stringify(newList).includes(JSON.stringify(element.acknowldgementNumber))) {
        newList.push(element);
      }
    });
    return newList && Array.isArray(newList) && newList.filter(function (element) {
      return element.creationReason != "UPDATE";
    });
  };

  var transformData = function transformData(property) {
    var owners = property.owners,
        institution = property.institution,
        ownershipCategory = property.ownershipCategory;
    var itemKey = [];
    owners.map(function (item) {
      var owner = {};

      if (institution) {
        owner = {
          PT_COMMON_INSTITUTION_NAME: institution.name || t("CS_NA"),
          PT_TYPE_OF_INSTITUTION: t(institution.type) || t("CS_NA"),
          PT_OWNER_NAME: institution.nameOfAuthorizedPerson || t("CS_NA"),
          PT_COMMON_AUTHORISED_PERSON_DESIGNATION: t(institution.designation) || t("CS_NA"),
          PT_FORM3_MOBILE_NUMBER: item.mobileNumber || t("CS_NA"),
          PT_OWNERSHIP_INFO_TEL_PHONE_NO: item.altContactNumber || t("CS_NA"),
          PT_FORM3_EMAIL_ID: item.emailId || t("CS_NA"),
          PT_OWNERSHIP_INFO_CORR_ADDR: item.correspondenceAddress || t("CS_NA"),
          PT_FORM3_OWNERSHIP_TYPE: t("PROPERTYTAX_BILLING_SLAB_" + ownershipCategory.split(".")[0]) || t("CS_NA")
        };
      } else {
        owner = {
          PT_OWNER_NAME: item.name || t("CS_NA"),
          PT_FORM3_GENDER: t(item.gender) || t("CS_NA"),
          PT_FORM3_MOBILE_NUMBER: item.mobileNumber || t("CS_NA"),
          PT_FORM3_GUARDIAN_NAME: item.fatherOrHusbandName || t("CS_NA"),
          PT_FORM3_RELATIONSHIP: t(item.relationship) || t("CS_NA"),
          PT_SPECIAL_OWNER_CATEGORY: t(item.ownerType === "NONE" ? "CS_NA" : item.ownerType) || t("CS_NA"),
          PT_MUTATION_AUTHORISED_EMAIL: item.emailId || t("CS_NA"),
          PT_OWNERSHIP_INFO_CORR_ADDR: item.permanentAddress || t("CS_NA")
        };
      }

      itemKey.push(owner);
    });
    return itemKey;
  };

  if (properties && Array.isArray(properties) && properties.length > 0) {
    var ownerProperty = properties[0];
    properties = properties.filter(function (data) {
      return data.status == "ACTIVE";
    });

    if (properties.length === 0) {
      properties.push(ownerProperty);
    }

    properties = getUniqueList(properties);
    properties && properties.length > 0 && properties.map(function (indProperty) {
      var _ownershipInfo$lastMo;

      var lastModifiedDate = indProperty.auditDetails.lastModifiedTime;
      indProperty.owners = indProperty.owners.filter(function (owner) {
        return owner.status == "ACTIVE";
      });

      if (!ownershipInfo[lastModifiedDate]) {
        ownershipInfo[lastModifiedDate] = [];
      }

      (_ownershipInfo$lastMo = ownershipInfo[lastModifiedDate]).push.apply(_ownershipInfo$lastMo, transformData(indProperty));
    });
  }

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  if (propertyIdFromProp) {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement("div", null, Object.keys(ownershipInfo).map(function (key, index, arr) {
      var date = convertEpochToDate(Number(key));
      return /*#__PURE__*/React.createElement("div", {
        className: "historyContent"
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          display: "flex"
        }
      }, /*#__PURE__*/React.createElement("div", {
        className: "historyCheckpoint zIndex"
      }), index !== Object.keys(ownershipInfo).length - 1 ? /*#__PURE__*/React.createElement("div", {
        className: "rowContainerStyles"
      }, /*#__PURE__*/React.createElement(CardSubHeader, {
        className: "historyTableDateLabel bottomMargin"
      }, " ", t("PT_DATE_OF_TRANSFER"), " "), /*#__PURE__*/React.createElement(CardSubHeader, {
        className: "historyTableDate bottomMargin"
      }, date)) : null), /*#__PURE__*/React.createElement(TransferDetails, {
        data: ownershipInfo[key],
        wrapperStyles: "wrapperStyles",
        containerStyles: "containerStyles",
        rowContainerStyles: {
          display: "flex",
          flexDirection: "column"
        },
        tableStyles: {
          display: "grid",
          gridAutoRows: "min-content",
          gridTemplateColumns: "repeat(5, minmax(100px, 1fr))"
        }
      }), index !== arr.length - 1 && /*#__PURE__*/React.createElement("div", {
        className: "checkpoint-connect",
        style: {
          marginLeft: 0,
          top: "4px"
        }
      }));
    }))));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Header, null, t("PT_OWNER_HISTORY")), /*#__PURE__*/React.createElement("div", null, Object.keys(ownershipInfo).map(function (key) {
    var date = convertEpochToDate(Number(key));
    return /*#__PURE__*/React.createElement("div", {
      style: {
        padding: "10px"
      }
    }, /*#__PURE__*/React.createElement("div", {
      className: "historyCheckpoint"
    }), /*#__PURE__*/React.createElement(CardSubHeader, {
      className: "historyTableDateLabel smallText"
    }, " ", t("PT_DATE_OF_TRANSFER"), " "), /*#__PURE__*/React.createElement(CardSubHeader, {
      className: "historyTableDate smallText"
    }, "\xA0-\xA0", date), /*#__PURE__*/React.createElement(TransferDetails, {
      data: ownershipInfo[key],
      wrapperStyles: "wrapperStyles leftBorder",
      showHorizontalBar: true
    }));
  }))));
};

var getPropertyEditDetails = function getPropertyEditDetails(data) {
  var _data, _data2, _data14, _data15, _data16, _data16$address, _data16$address$geoLo, _data17, _data17$address, _data17$address$geoLo, _data20, _data20$address, _data21, _data22, _data23, _data23$address, _data23$address$local, _data24, _data24$documents, _data25, _data25$address, _data26;

  if (data === void 0) {
    data = {};
  }

  if (((_data = data) === null || _data === void 0 ? void 0 : _data.ownershipCategory) === "INSTITUTIONALPRIVATE" || ((_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.ownershipCategory) === "INSTITUTIONALGOVERNMENT") {
    var _data3, _data3$owners$, _data3$owners$$docume, _data3$owners$$docume2, _data7, _data7$institution, _data8, _data8$institution, _data9, _data9$institution, _data10, _data11, _data12, _data12$owners$, _data13, _data13$owners$;

    var document = [];

    if ((_data3 = data) !== null && _data3 !== void 0 && (_data3$owners$ = _data3.owners[0]) !== null && _data3$owners$ !== void 0 && (_data3$owners$$docume = _data3$owners$.documents[0]) !== null && _data3$owners$$docume !== void 0 && (_data3$owners$$docume2 = _data3$owners$$docume.documentType) !== null && _data3$owners$$docume2 !== void 0 && _data3$owners$$docume2.includes("IDENTITYPROOF")) {
      var _data4, _data4$owners$, _data4$owners$$docume, _data5, _data5$owners$, _data5$owners$$docume, _data6, _data6$owners$;

      data.owners[0].documents[0].documentType = {
        code: (_data4 = data) === null || _data4 === void 0 ? void 0 : (_data4$owners$ = _data4.owners[0]) === null || _data4$owners$ === void 0 ? void 0 : (_data4$owners$$docume = _data4$owners$.documents[0]) === null || _data4$owners$$docume === void 0 ? void 0 : _data4$owners$$docume.documentType,
        i18nKey: stringReplaceAll((_data5 = data) === null || _data5 === void 0 ? void 0 : (_data5$owners$ = _data5.owners[0]) === null || _data5$owners$ === void 0 ? void 0 : (_data5$owners$$docume = _data5$owners$.documents[0]) === null || _data5$owners$$docume === void 0 ? void 0 : _data5$owners$$docume.documentType, ".", "_")
      };
      document["proofIdentity"] = (_data6 = data) === null || _data6 === void 0 ? void 0 : (_data6$owners$ = _data6.owners[0]) === null || _data6$owners$ === void 0 ? void 0 : _data6$owners$.documents[0];
    }

    data.owners[0].designation = (_data7 = data) === null || _data7 === void 0 ? void 0 : (_data7$institution = _data7.institution) === null || _data7$institution === void 0 ? void 0 : _data7$institution.designation, data.owners[0].inistitutionName = (_data8 = data) === null || _data8 === void 0 ? void 0 : (_data8$institution = _data8.institution) === null || _data8$institution === void 0 ? void 0 : _data8$institution.name, data.owners[0].name = (_data9 = data) === null || _data9 === void 0 ? void 0 : (_data9$institution = _data9.institution) === null || _data9$institution === void 0 ? void 0 : _data9$institution.nameOfAuthorizedPerson, data.owners[0].inistitutetype = {
      value: (_data10 = data) === null || _data10 === void 0 ? void 0 : _data10.institution.type,
      code: (_data11 = data) === null || _data11 === void 0 ? void 0 : _data11.institution.type
    }, data.owners[0].documents = document;
    data.owners[0].permanentAddress = (_data12 = data) === null || _data12 === void 0 ? void 0 : (_data12$owners$ = _data12.owners[0]) === null || _data12$owners$ === void 0 ? void 0 : _data12$owners$.correspondenceAddress;
    data.owners[0].isCorrespondenceAddress = (_data13 = data) === null || _data13 === void 0 ? void 0 : (_data13$owners$ = _data13.owners[0]) === null || _data13$owners$ === void 0 ? void 0 : _data13$owners$.isCorrespondenceAddress;
  } else {
    data.owners.map(function (owner) {
      var document = [];
      owner.documents && owner.documents.map(function (doc) {
        var _doc$documentType, _doc$documentType2;

        if (doc !== null && doc !== void 0 && doc.documentType && typeof (doc === null || doc === void 0 ? void 0 : doc.documentType) == "string" && doc !== null && doc !== void 0 && (_doc$documentType = doc.documentType) !== null && _doc$documentType !== void 0 && _doc$documentType.includes("SPECIALCATEGORYPROOF")) {
          doc.documentType = {
            code: doc === null || doc === void 0 ? void 0 : doc.documentType,
            i18nKey: stringReplaceAll(doc === null || doc === void 0 ? void 0 : doc.documentType, ".", "_")
          };
          document["specialProofIdentity"] = doc;
        }

        if (doc !== null && doc !== void 0 && doc.documentType && typeof (doc === null || doc === void 0 ? void 0 : doc.documentType) == "string" && doc !== null && doc !== void 0 && (_doc$documentType2 = doc.documentType) !== null && _doc$documentType2 !== void 0 && _doc$documentType2.includes("IDENTITYPROOF")) {
          doc.documentType = {
            code: doc === null || doc === void 0 ? void 0 : doc.documentType,
            i18nKey: stringReplaceAll(doc === null || doc === void 0 ? void 0 : doc.documentType, ".", "_")
          };
          document["proofIdentity"] = doc;
        }
      });
      owner.emailId = owner === null || owner === void 0 ? void 0 : owner.emailId;
      owner.fatherOrHusbandName = owner === null || owner === void 0 ? void 0 : owner.fatherOrHusbandName;
      owner.isCorrespondenceAddress = owner === null || owner === void 0 ? void 0 : owner.isCorrespondenceAddress;
      owner.mobileNumber = owner === null || owner === void 0 ? void 0 : owner.mobileNumber;
      owner.name = owner === null || owner === void 0 ? void 0 : owner.name;
      owner.permanentAddress = owner === null || owner === void 0 ? void 0 : owner.permanentAddress;
      owner.gender = {
        code: owner === null || owner === void 0 ? void 0 : owner.gender
      };
      owner.ownerType = {
        code: owner === null || owner === void 0 ? void 0 : owner.ownerType
      };
      owner.relationship = {
        code: owner === null || owner === void 0 ? void 0 : owner.relationship
      };
      owner.documents = document;
    });
  }

  data.ownershipCategory = {
    code: (_data14 = data) === null || _data14 === void 0 ? void 0 : _data14.ownershipCategory,
    value: (_data15 = data) === null || _data15 === void 0 ? void 0 : _data15.ownershipCategory
  };

  if ((_data16 = data) !== null && _data16 !== void 0 && (_data16$address = _data16.address) !== null && _data16$address !== void 0 && (_data16$address$geoLo = _data16$address.geoLocation) !== null && _data16$address$geoLo !== void 0 && _data16$address$geoLo.latitude && (_data17 = data) !== null && _data17 !== void 0 && (_data17$address = _data17.address) !== null && _data17$address !== void 0 && (_data17$address$geoLo = _data17$address.geoLocation) !== null && _data17$address$geoLo !== void 0 && _data17$address$geoLo.longitude) {
    var _data18, _data18$address, _data18$address$geoLo, _data19, _data19$address, _data19$address$geoLo;

    data.address.geoLocation = {
      latitude: (_data18 = data) === null || _data18 === void 0 ? void 0 : (_data18$address = _data18.address) === null || _data18$address === void 0 ? void 0 : (_data18$address$geoLo = _data18$address.geoLocation) === null || _data18$address$geoLo === void 0 ? void 0 : _data18$address$geoLo.latitude,
      longitude: (_data19 = data) === null || _data19 === void 0 ? void 0 : (_data19$address = _data19.address) === null || _data19$address === void 0 ? void 0 : (_data19$address$geoLo = _data19$address.geoLocation) === null || _data19$address$geoLo === void 0 ? void 0 : _data19$address$geoLo.longitude
    };
  } else {
    data.address.geoLocation = {};
  }

  data.address.pincode = (_data20 = data) === null || _data20 === void 0 ? void 0 : (_data20$address = _data20.address) === null || _data20$address === void 0 ? void 0 : _data20$address.pincode;
  data.address.city = {
    code: (_data21 = data) === null || _data21 === void 0 ? void 0 : _data21.tenantId
  };
  data.address.locality.i18nkey = ((_data22 = data) === null || _data22 === void 0 ? void 0 : _data22.tenantId.replace(".", "_").toUpperCase()) + "_" + "REVENUE" + "_" + ((_data23 = data) === null || _data23 === void 0 ? void 0 : (_data23$address = _data23.address) === null || _data23$address === void 0 ? void 0 : (_data23$address$local = _data23$address.locality) === null || _data23$address$local === void 0 ? void 0 : _data23$address$local.code);
  var addressDocs = (_data24 = data) === null || _data24 === void 0 ? void 0 : (_data24$documents = _data24.documents) === null || _data24$documents === void 0 ? void 0 : _data24$documents.filter(function (doc) {
    var _doc$documentType3;

    return doc === null || doc === void 0 ? void 0 : (_doc$documentType3 = doc.documentType) === null || _doc$documentType3 === void 0 ? void 0 : _doc$documentType3.includes("ADDRESSPROOF");
  });

  if (checkArrayLength(addressDocs)) {
    var _addressDocs$, _addressDocs$2;

    addressDocs[0].documentType = {
      code: (_addressDocs$ = addressDocs[0]) === null || _addressDocs$ === void 0 ? void 0 : _addressDocs$.documentType,
      i18nKey: stringReplaceAll((_addressDocs$2 = addressDocs[0]) === null || _addressDocs$2 === void 0 ? void 0 : _addressDocs$2.documentType, ".", "_")
    };
  }

  if ((_data25 = data) !== null && _data25 !== void 0 && (_data25$address = _data25.address) !== null && _data25$address !== void 0 && _data25$address.documents) {
    data.address.documents["ProofOfAddress"] = addressDocs[0];
  } else {
    data.address.documents = [];
    data.address.documents["ProofOfAddress"] = addressDocs && Array.isArray(addressDocs) && addressDocs.length > 0 && addressDocs[0];
  }

  data.documents["ProofOfAddress"] = addressDocs && Array.isArray(addressDocs) && addressDocs.length > 0 && addressDocs[0];

  var getunitobjectforInd = function getunitobjectforInd(data, ob, flrno, extraunits, unitedit) {
    var totbuiltarea = 0;
    var selfoccupiedtf = false,
        rentedtf = false,
        unoccupiedtf = false;
    ob["plotSize"] = "" + (data === null || data === void 0 ? void 0 : data.landArea);
    (data === null || data === void 0 ? void 0 : data.units) && (data === null || data === void 0 ? void 0 : data.units.map(function (unit1, index) {
      if ((unit1 === null || unit1 === void 0 ? void 0 : unit1.floorNo) == flrno && ((unit1 === null || unit1 === void 0 ? void 0 : unit1.occupancyType) === "RENTED" && rentedtf == true || (unit1 === null || unit1 === void 0 ? void 0 : unit1.occupancyType) === "UNOCCUPIED" && unoccupiedtf == true || (unit1 === null || unit1 === void 0 ? void 0 : unit1.occupancyType) === "SELFOCCUPIED" && selfoccupiedtf == true || flrno > unitedit.length)) {
        if (!extraunits.includes(unit1)) {
          extraunits.push(unit1);
        }
      } else if ((unit1 === null || unit1 === void 0 ? void 0 : unit1.floorNo) == flrno && (unit1 === null || unit1 === void 0 ? void 0 : unit1.occupancyType) === "RENTED") {
        var _unit1$constructionDe, _unit1$constructionDe2;

        rentedtf = true;
        ob["AnnualRent"] = "" + unit1.arv || "";
        ob["RentArea"] = "" + (unit1 === null || unit1 === void 0 ? void 0 : (_unit1$constructionDe = unit1.constructionDetail) === null || _unit1$constructionDe === void 0 ? void 0 : _unit1$constructionDe.builtUpArea);
        ob["SubUsageTypeOfRentedArea"] = {
          i18nKey: "COMMON_PROPSUBUSGTYPE_" + (unit1.usageCategory.split(".")[0] + ("_" + unit1.usageCategory.split(".")[1]) + ("_" + unit1.usageCategory.split(".").pop())).replaceAll(".", "_"),
          Subusagetypeofrentedareacode: unit1.usageCategory
        };
        totbuiltarea = totbuiltarea + parseInt(unit1 === null || unit1 === void 0 ? void 0 : (_unit1$constructionDe2 = unit1.constructionDetail) === null || _unit1$constructionDe2 === void 0 ? void 0 : _unit1$constructionDe2.builtUpArea);
      } else if ((unit1 === null || unit1 === void 0 ? void 0 : unit1.floorNo) == flrno && (unit1 === null || unit1 === void 0 ? void 0 : unit1.occupancyType) === "UNOCCUPIED") {
        var _unit1$constructionDe3, _unit1$constructionDe4;

        unoccupiedtf = true;
        ob["UnOccupiedArea"] = "" + (unit1 === null || unit1 === void 0 ? void 0 : (_unit1$constructionDe3 = unit1.constructionDetail) === null || _unit1$constructionDe3 === void 0 ? void 0 : _unit1$constructionDe3.builtUpArea);
        totbuiltarea = totbuiltarea + parseInt(unit1 === null || unit1 === void 0 ? void 0 : (_unit1$constructionDe4 = unit1.constructionDetail) === null || _unit1$constructionDe4 === void 0 ? void 0 : _unit1$constructionDe4.builtUpArea);
      } else if ((unit1 === null || unit1 === void 0 ? void 0 : unit1.floorNo) == flrno && (unit1 === null || unit1 === void 0 ? void 0 : unit1.occupancyType) === "SELFOCCUPIED") {
        var _unit1$constructionDe5, _unit1$constructionDe6;

        selfoccupiedtf = true;
        ob["floorarea"] = "" + (unit1 === null || unit1 === void 0 ? void 0 : (_unit1$constructionDe5 = unit1.constructionDetail) === null || _unit1$constructionDe5 === void 0 ? void 0 : _unit1$constructionDe5.builtUpArea);
        ob["SubUsageType"] = {
          i18nKey: "COMMON_PROPSUBUSGTYPE_" + (unit1.usageCategory.split(".")[0] + ("_" + unit1.usageCategory.split(".")[1]) + ("_" + unit1.usageCategory.split(".").pop())).replaceAll(".", "_")
        };
        totbuiltarea = totbuiltarea + parseInt(unit1 === null || unit1 === void 0 ? void 0 : (_unit1$constructionDe6 = unit1.constructionDetail) === null || _unit1$constructionDe6 === void 0 ? void 0 : _unit1$constructionDe6.builtUpArea);
      }
    }));

    if (unoccupiedtf == true && rentedtf == false && selfoccupiedtf == false) {
      ob["selfOccupied"] = "";
    } else {
      ob["selfOccupied"] = rentedtf == true ? selfoccupiedtf == true ? {
        i18nKey: "PT_PARTIALLY_RENTED_OUT",
        code: "RENTED"
      } : {
        i18nKey: "PT_FULLY_RENTED_OUT",
        code: "RENTED"
      } : {
        i18nKey: "PT_YES_IT_IS_SELFOCCUPIED",
        code: "SELFOCCUPIED"
      };
    }

    ob["IsAnyPartOfThisFloorUnOccupied"] = unoccupiedtf == true ? {
      i18nKey: "PT_COMMON_YES",
      code: "UNOCCUPIED"
    } : {
      i18nKey: "PT_COMMON_NO",
      code: "UNOCCUPIED"
    };
    ob["builtUpArea"] = "" + totbuiltarea;
    return ob;
  };

  if (((_data26 = data) === null || _data26 === void 0 ? void 0 : _data26.channel) === "CFC_COUNTER") {
    var _data27, _data33, _data53;

    if (((_data27 = data) === null || _data27 === void 0 ? void 0 : _data27.propertyType) === "VACANT") {
      var _data28, _data29, _data30, _data31, _data31$usageCategory, _data32;

      data.PropertyType = {
        code: (_data28 = data) === null || _data28 === void 0 ? void 0 : _data28.propertyType,
        i18nKey: "COMMON_PROPTYPE_" + data.propertyType
      };
      data.isResdential = ((_data29 = data) === null || _data29 === void 0 ? void 0 : _data29.usageCategory) === "RESIDENTIAL" ? {
        code: "RESIDENTIAL",
        i18nKey: "PT_COMMON_YES"
      } : {
        code: "NONRESIDENTIAL",
        i18nKey: "PT_COMMON_NO"
      };
      data.usageCategoryMajor = {
        code: (_data30 = data) === null || _data30 === void 0 ? void 0 : _data30.usageCategory,
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + ((_data31 = data) === null || _data31 === void 0 ? void 0 : (_data31$usageCategory = _data31.usageCategory) === null || _data31$usageCategory === void 0 ? void 0 : _data31$usageCategory.split(".").pop())
      };
      data.landarea = {
        floorarea: (_data32 = data) === null || _data32 === void 0 ? void 0 : _data32.landArea
      };
    } else if (((_data33 = data) === null || _data33 === void 0 ? void 0 : _data33.propertyType) === "BUILTUP.SHAREDPROPERTY") {
      var _data34, _data35, _data36, _data36$usageCategory, _data37, _data38, _data38$units$, _data39, _data39$units$, _data40, _data40$units$, _data41, _data41$units$, _data42, _data42$units$, _data43, _data43$units$, _data44, _data45, _data52;

      var extraunitsFPB = [];
      var selfoccupiedtf = false,
          rentedtf = false,
          unoccupiedtf = false;
      data.isResdential = ((_data34 = data) === null || _data34 === void 0 ? void 0 : _data34.usageCategory) === "RESIDENTIAL" ? {
        code: "RESIDENTIAL",
        i18nKey: "PT_COMMON_YES"
      } : {
        code: "NONRESIDENTIAL",
        i18nKey: "PT_COMMON_NO"
      };
      data.usageCategoryMajor = {
        code: (_data35 = data) === null || _data35 === void 0 ? void 0 : _data35.usageCategory,
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + ((_data36 = data) === null || _data36 === void 0 ? void 0 : (_data36$usageCategory = _data36.usageCategory) === null || _data36$usageCategory === void 0 ? void 0 : _data36$usageCategory.split(".").pop())
      };
      data.PropertyType = {
        code: (_data37 = data) === null || _data37 === void 0 ? void 0 : _data37.propertyType,
        i18nKey: "COMMON_PROPTYPE_BUILTUP_" + data.propertyType.split(".").pop()
      };
      data.Floorno = ((_data38 = data) === null || _data38 === void 0 ? void 0 : (_data38$units$ = _data38.units[0]) === null || _data38$units$ === void 0 ? void 0 : _data38$units$.floorNo) < 0 ? {
        i18nKey: "PROPERTYTAX_FLOOR__" + ((_data39 = data) === null || _data39 === void 0 ? void 0 : (_data39$units$ = _data39.units[0]) === null || _data39$units$ === void 0 ? void 0 : _data39$units$.floorNo) * -1
      } : {
        i18nKey: "PROPERTYTAX_FLOOR_" + ((_data40 = data) === null || _data40 === void 0 ? void 0 : (_data40$units$ = _data40.units[0]) === null || _data40$units$ === void 0 ? void 0 : _data40$units$.floorNo)
      };
      data.Subusagetypeofrentedarea = {
        SubUsageTypeOfRentedArea: {
          i18nKey: "COMMON_PROPSUBUSGTYPE_" + ((_data41 = data) === null || _data41 === void 0 ? void 0 : (_data41$units$ = _data41.units[0]) === null || _data41$units$ === void 0 ? void 0 : _data41$units$.usageCategory.slice(0, (_data42 = data) === null || _data42 === void 0 ? void 0 : (_data42$units$ = _data42.units[0]) === null || _data42$units$ === void 0 ? void 0 : _data42$units$.usageCategory.lastIndexOf(".")).replaceAll(".", "_"))
        },
        Subusagetypeofrentedareacode: (_data43 = data) === null || _data43 === void 0 ? void 0 : (_data43$units$ = _data43.units[0]) === null || _data43$units$ === void 0 ? void 0 : _data43$units$.usageCategory
      };
      ((_data44 = data) === null || _data44 === void 0 ? void 0 : _data44.units) && ((_data45 = data) === null || _data45 === void 0 ? void 0 : _data45.units.map(function (unit, index) {
        var _data46, _data47, _data48, _data49, _data50, _data51;

        if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "RENTED" && rentedtf == true && unit.floorNo == ((_data46 = data) === null || _data46 === void 0 ? void 0 : _data46.units[0].floorNo) || (unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "UNOCCUPIED" && unoccupiedtf == true && unit.floorNo == ((_data47 = data) === null || _data47 === void 0 ? void 0 : _data47.units[0].floorNo) || (unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "SELFOCCUPIED" && selfoccupiedtf == true && unit.floorNo == ((_data48 = data) === null || _data48 === void 0 ? void 0 : _data48.units[0].floorNo)) {
          if (!extraunitsFPB.includes(unit)) {
            extraunitsFPB.push(unit);
          }
        } else if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "RENTED" && unit.floorNo == ((_data49 = data) === null || _data49 === void 0 ? void 0 : _data49.units[0].floorNo)) {
          var _unit$constructionDet;

          rentedtf = true;
          data.Constructiondetails = {
            RentArea: unit === null || unit === void 0 ? void 0 : (_unit$constructionDet = unit.constructionDetail) === null || _unit$constructionDet === void 0 ? void 0 : _unit$constructionDet.builtUpArea,
            AnnualRent: unit === null || unit === void 0 ? void 0 : unit.arv
          };
          data.Subusagetypeofrentedarea = {
            SubUsageTypeOfRentedArea: {
              i18nKey: "COMMON_PROPSUBUSGTYPE_" + (unit === null || unit === void 0 ? void 0 : unit.usageCategory.slice(0, unit === null || unit === void 0 ? void 0 : unit.usageCategory.lastIndexOf(".")).replaceAll(".", "_"))
            },
            Subusagetypeofrentedareacode: unit === null || unit === void 0 ? void 0 : unit.usageCategory
          };
        } else if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "UNOCCUPIED" && unit.floorNo == ((_data50 = data) === null || _data50 === void 0 ? void 0 : _data50.units[0].floorNo)) {
          var _unit$constructionDet2;

          unoccupiedtf = true;
          data.UnOccupiedArea = {
            UnOccupiedArea: unit === null || unit === void 0 ? void 0 : (_unit$constructionDet2 = unit.constructionDetail) === null || _unit$constructionDet2 === void 0 ? void 0 : _unit$constructionDet2.builtUpArea
          };
        } else if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "SELFOCCUPIED" && unit.floorNo == ((_data51 = data) === null || _data51 === void 0 ? void 0 : _data51.units[0].floorNo)) {
          var _unit$constructionDet3;

          selfoccupiedtf = true;
          data.landarea = {
            floorarea: unit === null || unit === void 0 ? void 0 : (_unit$constructionDet3 = unit.constructionDetail) === null || _unit$constructionDet3 === void 0 ? void 0 : _unit$constructionDet3.builtUpArea
          };
          data.subusagetype = {
            SubUsageType: {
              i18nKey: "COMMON_PROPSUBUSGTYPE_" + (unit === null || unit === void 0 ? void 0 : unit.usageCategory.slice(0, unit === null || unit === void 0 ? void 0 : unit.usageCategory.lastIndexOf(".")).replaceAll(".", "_"))
            }
          };
        } else {
          if (!extraunitsFPB.includes(unit)) {
            extraunitsFPB.push(unit);
          }
        }
      }));
      data.selfOccupied = rentedtf == true ? selfoccupiedtf == true ? {
        i18nKey: "PT_PARTIALLY_RENTED_OUT",
        code: "RENTED"
      } : {
        i18nKey: "PT_FULLY_RENTED_OUT",
        code: "RENTED"
      } : {
        i18nKey: "PT_YES_IT_IS_SELFOCCUPIED",
        code: "SELFOCCUPIED"
      };
      data.IsAnyPartOfThisFloorUnOccupied = unoccupiedtf == true ? {
        i18nKey: "PT_COMMON_YES",
        code: "UNOCCUPIED"
      } : {
        i18nKey: "PT_COMMON_NO",
        code: "UNOCCUPIED"
      };
      data.floordetails = {
        plotSize: (_data52 = data) === null || _data52 === void 0 ? void 0 : _data52.landArea,
        builtUpArea: getSuperBuiltUpareafromob(data)
      };
      data["extraunitFPB"] = extraunitsFPB;
    } else if (((_data53 = data) === null || _data53 === void 0 ? void 0 : _data53.propertyType) === "BUILTUP.INDEPENDENTPROPERTY") {
      var _data54, _data55, _data56, _data56$usageCategory, _data57, _data58, _data59, _data60;
      data.isResdential = ((_data54 = data) === null || _data54 === void 0 ? void 0 : _data54.usageCategory) === "RESIDENTIAL" ? {
        code: "RESIDENTIAL",
        i18nKey: "PT_COMMON_YES"
      } : {
        code: "NONRESIDENTIAL",
        i18nKey: "PT_COMMON_NO"
      };
      data.usageCategoryMajor = {
        code: (_data55 = data) === null || _data55 === void 0 ? void 0 : _data55.usageCategory,
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + ((_data56 = data) === null || _data56 === void 0 ? void 0 : (_data56$usageCategory = _data56.usageCategory) === null || _data56$usageCategory === void 0 ? void 0 : _data56$usageCategory.split(".").pop())
      };
      data.PropertyType = {
        code: (_data57 = data) === null || _data57 === void 0 ? void 0 : _data57.propertyType,
        i18nKey: "COMMON_PROPTYPE_BUILTUP_" + data.propertyType.split(".").pop()
      };
      var unitedit = [];
      var ob = {};
      var flooradded = [];
      var flrno;
      var extraunits = [];
      data.units && data.units.sort(function (x, y) {
        var a = x.floorNo,
            b = y.floorNo;

        if (x.floorNo < 0) {
          a = x.floorNo * -20;
        }

        if (y.floorNo < 0) {
          b = y.floorNo * -20;
        }

        if (a > b) {
          return 1;
        } else {
          return -1;
        }
      });
      ((_data58 = data) === null || _data58 === void 0 ? void 0 : _data58.units) && ((_data59 = data) === null || _data59 === void 0 ? void 0 : _data59.units.map(function (unit, index) {
        ob = {};

        if (unit.floorNo == 0 || unit.floorNo == 1 || unit.floorNo == 2 || unit.floorNo == -1 || unit.floorNo == -2) {
          flrno = unit.floorNo;
          ob = getunitobjectforInd(data, ob, flrno, extraunits, unitedit);

          if (ob.selfOccupied == "") {
            extraunits.push(unit);
          }
        } else {
          extraunits.push(unit);
        }

        if (ob == {}) {
          extraunits.push(unit);
        }

        !flooradded.includes(unit.floorNo) && ob.builtUpArea > 0 && unit.floorNo > -1 && unit.floorNo < 3 && ob.selfOccupied !== "" && ob != {} ? unitedit.push(ob) : console.log("");
        unit.floorNo == -1 && ob != {} && ob.selfOccupied !== "" && ob.builtUpArea > 0 ? unitedit["-1"] = ob : console.log("");

        if (unitedit["-1"] && unit.floorNo == -2 && !extraunits.includes(unit)) {
          unit.floorNo == -2 && ob != {} && ob.selfOccupied !== "" && ob.builtUpArea > 0 ? unitedit["-2"] = ob : console.log("");
        } else if (!unitedit["-1"] && unit.floorNo == -2 && !extraunits.includes(unit)) {
          extraunits.push(unit);
        }

        flooradded.push(flrno);
      }));
      data.noOfFloors = unitedit.length == 3 ? {
        i18nKey: "PT_GROUND_PLUS_TWO_OPTION",
        code: 2
      } : unitedit.length == 2 ? {
        i18nKey: "PT_GROUND_PLUS_ONE_OPTION",
        code: 1
      } : {
        i18nKey: "PT_GROUND_FLOOR_OPTION",
        code: 0
      };
      data.noOofBasements = unitedit["-2"] ? {
        i18nKey: "PT_TWO_BASEMENT_OPTION"
      } : unitedit["-1"] ? {
        i18nKey: "PT_ONE_BASEMENT_OPTION"
      } : {
        i18nKey: "PT_NO_BASEMENT_OPTION"
      };
      data.units = unitedit;
      data.units = (_data60 = data) === null || _data60 === void 0 ? void 0 : _data60.units.concat(extraunits);
      unitedit["-1"] ? data.units["-1"] = unitedit["-1"] : "";
      unitedit["-2"] ? data.units["-2"] = unitedit["-2"] : "";
    }
  } else {
    var _data61, _data61$additionalDet, _data61$additionalDet2, _data67, _data67$additionalDet, _data67$additionalDet2, _data83, _data83$additionalDet, _data83$additionalDet2;

    if (((_data61 = data) === null || _data61 === void 0 ? void 0 : (_data61$additionalDet = _data61.additionalDetails) === null || _data61$additionalDet === void 0 ? void 0 : (_data61$additionalDet2 = _data61$additionalDet.propertyType) === null || _data61$additionalDet2 === void 0 ? void 0 : _data61$additionalDet2.code) === "VACANT") {
      var _data62, _data62$additionalDet, _data63, _data63$additionalDet, _data64, _data65, _data65$usageCategory, _data66;

      data.PropertyType = (_data62 = data) === null || _data62 === void 0 ? void 0 : (_data62$additionalDet = _data62.additionalDetails) === null || _data62$additionalDet === void 0 ? void 0 : _data62$additionalDet.propertyType;
      data.isResdential = (_data63 = data) === null || _data63 === void 0 ? void 0 : (_data63$additionalDet = _data63.additionalDetails) === null || _data63$additionalDet === void 0 ? void 0 : _data63$additionalDet.isResdential;
      data.usageCategoryMajor = {
        code: (_data64 = data) === null || _data64 === void 0 ? void 0 : _data64.usageCategory,
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + ((_data65 = data) === null || _data65 === void 0 ? void 0 : (_data65$usageCategory = _data65.usageCategory) === null || _data65$usageCategory === void 0 ? void 0 : _data65$usageCategory.split(".").pop())
      };
      data.landarea = {
        floorarea: (_data66 = data) === null || _data66 === void 0 ? void 0 : _data66.landArea
      };
    } else if (((_data67 = data) === null || _data67 === void 0 ? void 0 : (_data67$additionalDet = _data67.additionalDetails) === null || _data67$additionalDet === void 0 ? void 0 : (_data67$additionalDet2 = _data67$additionalDet.propertyType) === null || _data67$additionalDet2 === void 0 ? void 0 : _data67$additionalDet2.code) === "BUILTUP.SHAREDPROPERTY") {
      var _data68, _data68$additionalDet, _data69, _data70, _data70$usageCategory, _data71, _data71$additionalDet, _data72, _data72$units$, _data73, _data73$units$, _data74, _data74$units$, _data75, _data75$additionalDet, _data76, _data76$additionalDet, _data77, _data77$additionalDet, _data78, _data78$additionalDet, _data79, _data80, _data81, _data82, _data82$additionalDet;

      data.isResdential = (_data68 = data) === null || _data68 === void 0 ? void 0 : (_data68$additionalDet = _data68.additionalDetails) === null || _data68$additionalDet === void 0 ? void 0 : _data68$additionalDet.isResdential;
      data.usageCategoryMajor = {
        code: (_data69 = data) === null || _data69 === void 0 ? void 0 : _data69.usageCategory,
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + ((_data70 = data) === null || _data70 === void 0 ? void 0 : (_data70$usageCategory = _data70.usageCategory) === null || _data70$usageCategory === void 0 ? void 0 : _data70$usageCategory.split(".").pop())
      };
      data.PropertyType = (_data71 = data) === null || _data71 === void 0 ? void 0 : (_data71$additionalDet = _data71.additionalDetails) === null || _data71$additionalDet === void 0 ? void 0 : _data71$additionalDet.propertyType;
      data.Floorno = ((_data72 = data) === null || _data72 === void 0 ? void 0 : (_data72$units$ = _data72.units[0]) === null || _data72$units$ === void 0 ? void 0 : _data72$units$.floorNo) < 0 ? {
        i18nKey: "PROPERTYTAX_FLOOR__" + ((_data73 = data) === null || _data73 === void 0 ? void 0 : (_data73$units$ = _data73.units[0]) === null || _data73$units$ === void 0 ? void 0 : _data73$units$.floorNo) * -1
      } : {
        i18nKey: "PROPERTYTAX_FLOOR_" + ((_data74 = data) === null || _data74 === void 0 ? void 0 : (_data74$units$ = _data74.units[0]) === null || _data74$units$ === void 0 ? void 0 : _data74$units$.floorNo)
      };
      data.selfOccupied = (_data75 = data) === null || _data75 === void 0 ? void 0 : (_data75$additionalDet = _data75.additionalDetails) === null || _data75$additionalDet === void 0 ? void 0 : _data75$additionalDet.selfOccupied;
      data.Subusagetypeofrentedarea = (_data76 = data) === null || _data76 === void 0 ? void 0 : (_data76$additionalDet = _data76.additionalDetails) === null || _data76$additionalDet === void 0 ? void 0 : _data76$additionalDet.Subusagetypeofrentedarea;
      data.subusagetype = (_data77 = data) === null || _data77 === void 0 ? void 0 : (_data77$additionalDet = _data77.additionalDetails) === null || _data77$additionalDet === void 0 ? void 0 : _data77$additionalDet.subusagetype;
      data.IsAnyPartOfThisFloorUnOccupied = (_data78 = data) === null || _data78 === void 0 ? void 0 : (_data78$additionalDet = _data78.additionalDetails) === null || _data78$additionalDet === void 0 ? void 0 : _data78$additionalDet.IsAnyPartOfThisFloorUnOccupied;
      ((_data79 = data) === null || _data79 === void 0 ? void 0 : _data79.units) && ((_data80 = data) === null || _data80 === void 0 ? void 0 : _data80.units.map(function (unit, index) {
        if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "RENTED") {
          var _unit$constructionDet4;

          data.Constructiondetails = {
            RentArea: unit === null || unit === void 0 ? void 0 : (_unit$constructionDet4 = unit.constructionDetail) === null || _unit$constructionDet4 === void 0 ? void 0 : _unit$constructionDet4.builtUpArea,
            AnnualRent: unit === null || unit === void 0 ? void 0 : unit.arv
          };
        } else if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "UNOCCUPIED") {
          var _unit$constructionDet5;

          data.UnOccupiedArea = {
            UnOccupiedArea: unit === null || unit === void 0 ? void 0 : (_unit$constructionDet5 = unit.constructionDetail) === null || _unit$constructionDet5 === void 0 ? void 0 : _unit$constructionDet5.builtUpArea
          };
        } else if ((unit === null || unit === void 0 ? void 0 : unit.occupancyType) === "SELFOCCUPIED") {
          var _unit$constructionDet6;

          data.landarea = {
            floorarea: unit === null || unit === void 0 ? void 0 : (_unit$constructionDet6 = unit.constructionDetail) === null || _unit$constructionDet6 === void 0 ? void 0 : _unit$constructionDet6.builtUpArea
          };
        }
      }));
      data.floordetails = {
        plotSize: (_data81 = data) === null || _data81 === void 0 ? void 0 : _data81.landArea,
        builtUpArea: (_data82 = data) === null || _data82 === void 0 ? void 0 : (_data82$additionalDet = _data82.additionalDetails) === null || _data82$additionalDet === void 0 ? void 0 : _data82$additionalDet.builtUpArea
      };
    } else if (((_data83 = data) === null || _data83 === void 0 ? void 0 : (_data83$additionalDet = _data83.additionalDetails) === null || _data83$additionalDet === void 0 ? void 0 : (_data83$additionalDet2 = _data83$additionalDet.propertyType) === null || _data83$additionalDet2 === void 0 ? void 0 : _data83$additionalDet2.code) === "BUILTUP.INDEPENDENTPROPERTY") {
      var _data84, _data84$additionalDet, _data85, _data86, _data86$usageCategory, _data87, _data87$additionalDet, _data88, _data88$additionalDet, _data89, _data89$additionalDet, _data90, _data90$additionalDet, _data91, _data91$additionalDet, _data91$additionalDet2, _data92, _data92$additionalDet, _data93, _data93$additionalDet;

      data.isResdential = (_data84 = data) === null || _data84 === void 0 ? void 0 : (_data84$additionalDet = _data84.additionalDetails) === null || _data84$additionalDet === void 0 ? void 0 : _data84$additionalDet.isResdential;
      data.usageCategoryMajor = {
        code: (_data85 = data) === null || _data85 === void 0 ? void 0 : _data85.usageCategory,
        i18nKey: "PROPERTYTAX_BILLING_SLAB_" + ((_data86 = data) === null || _data86 === void 0 ? void 0 : (_data86$usageCategory = _data86.usageCategory) === null || _data86$usageCategory === void 0 ? void 0 : _data86$usageCategory.split(".").pop())
      };
      data.PropertyType = (_data87 = data) === null || _data87 === void 0 ? void 0 : (_data87$additionalDet = _data87.additionalDetails) === null || _data87$additionalDet === void 0 ? void 0 : _data87$additionalDet.propertyType;
      data.noOfFloors = (_data88 = data) === null || _data88 === void 0 ? void 0 : (_data88$additionalDet = _data88.additionalDetails) === null || _data88$additionalDet === void 0 ? void 0 : _data88$additionalDet.noOfFloors;
      data.noOofBasements = (_data89 = data) === null || _data89 === void 0 ? void 0 : (_data89$additionalDet = _data89.additionalDetails) === null || _data89$additionalDet === void 0 ? void 0 : _data89$additionalDet.noOofBasements;
      data.units = (_data90 = data) === null || _data90 === void 0 ? void 0 : (_data90$additionalDet = _data90.additionalDetails) === null || _data90$additionalDet === void 0 ? void 0 : _data90$additionalDet.unit;
      data.units[0].selfOccupied = (_data91 = data) === null || _data91 === void 0 ? void 0 : (_data91$additionalDet = _data91.additionalDetails) === null || _data91$additionalDet === void 0 ? void 0 : (_data91$additionalDet2 = _data91$additionalDet.unit[0]) === null || _data91$additionalDet2 === void 0 ? void 0 : _data91$additionalDet2.selfOccupied;
      data.units["-1"] = (_data92 = data) === null || _data92 === void 0 ? void 0 : (_data92$additionalDet = _data92.additionalDetails) === null || _data92$additionalDet === void 0 ? void 0 : _data92$additionalDet.basement1;
      data.units["-2"] = (_data93 = data) === null || _data93 === void 0 ? void 0 : (_data93$additionalDet = _data93.additionalDetails) === null || _data93$additionalDet === void 0 ? void 0 : _data93$additionalDet.basement2;
    }
  }

  return data;
};

var EditProperty = function EditProperty(_ref) {
  var queryClient = useQueryClient();
  var match = useRouteMatch();

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var history = useHistory();
  var config = [];

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_CREATE_PROPERTY", {}),
      params = _Digit$Hooks$useSessi[0],
      setParams = _Digit$Hooks$useSessi[1],
      clearParams = _Digit$Hooks$useSessi[2];

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var acknowledgementIds = window.location.href.split("/").pop();
  var propertyIds = window.location.href.split("/").pop();
  var application = {};
  var updateProperty = window.location.href.includes("action=UPDATE");
  var typeOfProperty = window.location.href.includes("UPDATE") ? true : false;
  var ptProperty = JSON.parse(sessionStorage.getItem("pt-property")) || {};
  var data = {
    Properties: [ptProperty]
  };
  sessionStorage.setItem("isEditApplication", false);
  useEffect(function () {
    application = (data === null || data === void 0 ? void 0 : data.Properties) && data.Properties[0] && data.Properties[0];

    if (data && application) {
      application = data === null || data === void 0 ? void 0 : data.Properties[0];

      if (updateProperty) {
        application.isUpdateProperty = true;
        application.isEditProperty = false;
      } else {
        application.isUpdateProperty = typeOfProperty;
        application.isEditProperty = true;
      }

      sessionStorage.setItem("propertyInitialObject", JSON.stringify(_extends({}, application)));
      var propertyEditDetails = getPropertyEditDetails(application);
      setParams(_extends({}, params, propertyEditDetails));
    }
  }, []);

  var goNext = function goNext(skipStep, index, isAddMultiple, key) {
    var currentPath = pathname.split("/").pop(),
        lastchar = currentPath.charAt(currentPath.length - 1),
        isMultiple = false,
        nextPage;

    if (Number(parseInt(currentPath)) || currentPath == "0" || currentPath == "-1") {
      if (currentPath == "-1" || currentPath == "-2") {
        currentPath = pathname.slice(0, -3);
        currentPath = currentPath.split("/").pop();
        isMultiple = true;
      } else {
        currentPath = pathname.slice(0, -2);
        currentPath = currentPath.split("/").pop();
        isMultiple = true;
      }
    } else {
      isMultiple = false;
    }

    if (!isNaN(lastchar)) {
      isMultiple = true;
    }

    var _config$find = config.find(function (routeObj) {
      return routeObj.route === currentPath;
    }),
        _config$find$nextStep = _config$find.nextStep,
        nextStep = _config$find$nextStep === void 0 ? {} : _config$find$nextStep;

    if (typeof nextStep == "object" && nextStep != null && isMultiple != false) {
      if (nextStep[sessionStorage.getItem("ownershipCategory")]) {
        nextStep = nextStep[sessionStorage.getItem("ownershipCategory")] + "/" + index;
      } else if (nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")]) {
        if ("" + nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] === "un-occupied-area") {
          nextStep = nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] + "/" + index;
        } else {
          nextStep = "" + nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")];
        }
      } else if (nextStep[sessionStorage.getItem("subusagetypevar")]) {
        nextStep = nextStep[sessionStorage.getItem("subusagetypevar")] + "/" + index;
      } else if (nextStep[sessionStorage.getItem("area")]) {
        if ("" + nextStep[sessionStorage.getItem("area")] !== "map") {
          nextStep = nextStep[sessionStorage.getItem("area")] + "/" + index;
        } else {
          nextStep = "" + nextStep[sessionStorage.getItem("area")];
        }
      } else if (nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")]) {
        nextStep = nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")] + "/" + index;
      } else {
        nextStep = nextStep[sessionStorage.getItem("noOofBasements")] + "/" + index;
      }
    }

    if (typeof nextStep == "object" && nextStep != null && isMultiple == false) {
      if (nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] && (nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] == "map" || nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")] == "un-occupied-area")) {
        nextStep = "" + nextStep[sessionStorage.getItem("IsAnyPartOfThisFloorUnOccupied")];
      } else if (nextStep[sessionStorage.getItem("subusagetypevar")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("subusagetypevar")];
      } else if (nextStep[sessionStorage.getItem("area")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("area")];
      } else if (nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("IsThisFloorSelfOccupied")];
      } else if (nextStep[sessionStorage.getItem("PropertyType")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("PropertyType")];
      } else if (nextStep[sessionStorage.getItem("isResdential")]) {
        nextStep = "" + nextStep[sessionStorage.getItem("isResdential")];
      }
    }

    var redirectWithHistory = history.push;

    if (skipStep) {
      redirectWithHistory = history.replace;
    }

    if (isAddMultiple) {
      nextStep = key;
    }

    if (nextStep === null) {
      return redirectWithHistory(match.path + "/check");
    }

    if (!isNaN(nextStep.split("/").pop())) {
      nextPage = match.path + "/" + nextStep;
    } else {
      nextPage = isMultiple && nextStep !== "map" ? match.path + "/" + nextStep + "/" + index : match.path + "/" + nextStep;
    }

    redirectWithHistory(nextPage);
  };

  var createProperty = function createProperty() {
    try {
      history.push(match.path + "/acknowledgement");
      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };

  function handleSelect(key, data, skipStep, index, isAddMultiple) {
    if (isAddMultiple === void 0) {
      isAddMultiple = false;
    }

    if (key === "owners") {
      var _extends2;

      var owners = params.owners || [];
      owners[index] = data;
      setParams(_extends({}, params, (_extends2 = {}, _extends2[key] = [].concat(owners), _extends2)));
    } else if (key === "units") {
      var units = params.units || [];
      units[index] = data;
      setParams(_extends({}, params, {
        units: units
      }));
    } else {
      var _extends3;

      setParams(_extends({}, params, (_extends3 = {}, _extends3[key] = _extends({}, params[key], data), _extends3)));
    }

    goNext(skipStep, index, isAddMultiple, key);
  }

  var handleSkip = function handleSkip() {};

  var handleMultiple = function handleMultiple() {};

  var onSuccess = function onSuccess() {
    clearParams();
    queryClient.invalidateQueries("PT_CREATE_PROPERTY");
    sessionStorage.setItem("propertyInitialObject", JSON.stringify({}));
    sessionStorage.setItem("pt-property", JSON.stringify({}));
  };

  newConfig.forEach(function (obj) {
    config = config.concat(obj.body.filter(function (a) {
      return !a.hideInCitizen;
    }));
  });
  config.indexRoute = "isResidential";
  return /*#__PURE__*/React.createElement(Switch, null, config.map(function (routeObj, index) {
    var component = routeObj.component,
        texts = routeObj.texts,
        inputs = routeObj.inputs,
        key = routeObj.key;
    var Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      path: match.path + "/" + routeObj.route,
      key: index
    }, /*#__PURE__*/React.createElement(Component, {
      config: {
        texts: texts,
        inputs: inputs,
        key: key
      },
      onSelect: handleSelect,
      onSkip: handleSkip,
      t: t,
      formData: params,
      onAdd: handleMultiple
    }));
  }), /*#__PURE__*/React.createElement(Route, {
    path: match.path + "/check"
  }, /*#__PURE__*/React.createElement(CheckPage, {
    onSubmit: createProperty,
    value: params
  })), /*#__PURE__*/React.createElement(Route, {
    path: match.path + "/acknowledgement"
  }, /*#__PURE__*/React.createElement(PTAcknowledgement, {
    data: params,
    onSuccess: onSuccess
  })), /*#__PURE__*/React.createElement(Route, null, /*#__PURE__*/React.createElement(Redirect, {
    to: match.path + "/" + config.indexRoute
  })));
};

var _ref, _ref2;

var newConfigMutate = [{
  head: "PT_MUTATION_TRANSFEROR_DETAILS",
  body: [(_ref = {
    route: "info",
    component: "PropertyTax",
    nextStep: "transferer-details",
    hideInEmployee: true,
    key: "_Documents",
    isMutation: true
  }, _ref["hideInEmployee"] = true, _ref), {
    route: "search-property",
    component: "SearchPropertyCitizen",
    nextStep: "search-results",
    key: "searchParams",
    texts: {
      header: "SEARCH_PROPERTY",
      submitButtonLabel: "PT_HOME_SEARCH_RESULTS_BUTTON_SEARCH",
      text: "CS_PT_HOME_SEARCH_RESULTS_DESC"
    },
    inputs: [{
      label: "PT_HOME_SEARCH_RESULTS_OWN_MOB_LABEL",
      type: "mobileNumber",
      name: "mobileNumber",
      error: "ERR_HRMS_INVALID_USER_ID"
    }, {
      label: "PT_PROPERTY_UNIQUE_ID",
      description: "CS_PROPERTY_ID_FORMAT_MUST_BE",
      type: "text",
      name: "propertyId",
      error: "ERR_HRMS_WRONG_PASSWORD"
    }, {
      label: "PT_EXISTING_PROPERTY_ID",
      type: "text",
      name: "oldPropertyId",
      error: "ERR_HRMS_INVALID_CITY"
    }],
    action: "MUTATION",
    hideInEmployee: true
  }, (_ref2 = {
    route: "search-results",
    component: "SearchResultCitizen",
    key: "searchResult",
    nextStep: "transferer-details"
  }, _ref2["nextStep"] = "info", _ref2.action = "MUTATION", _ref2.hideInEmployee = true, _ref2.texts = {
    header: "CS_SEARCH_RESULTS",
    actionButtonLabel: "PT_OWNERSHIP_TRANSFER",
    nextText: "PT_COMMON_NEXT"
  }, _ref2.labels = [{
    label: "PT_TOTAL_DUES",
    key: "total_due",
    noteStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    }
  }, {
    label: "PT_PROPERTY_PTUID",
    key: "property_id"
  }, {
    label: "PT_OWNERSHIP_INFO_NAME",
    key: "owner_name"
  }, {
    label: "PT_PROPERTY_ADDRESS_SUB_HEADER",
    key: "property_address"
  }, {
    label: "PT_DUE_DATE",
    key: "bil_due__date"
  }], _ref2), {
    route: "transferer-details",
    nextStep: "owner-ship-details@0",
    key: "transfererDetails",
    type: "component",
    withoutLabel: true,
    component: "TransfererDetails",
    texts: {
      nextText: "PT_COMMON_NEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    labels: [{
      label: "PT_OWNERSHIP_INSTI_NAME",
      keyPath: ["searchResult", "property", "institution", "name"],
      ownershipType: "INSTITUTIONAL"
    }, {
      label: "PT_OWNERSHIP_INFO_DESIGNATION",
      keyPath: ["searchResult", "property", "institution", "designation"],
      ownershipType: "INSTITUTIONAL"
    }, {
      label: "PT_INSTI_OWNERSHIP_TYPE",
      keyPath: ["searchResult", "property", "institution", "type"],
      ownershipType: "INSTITUTIONAL"
    }, {
      label: "PT_OWNERSHIP_INFO_NAME_OF_AUTH",
      keyPath: ["searchResult", "property", "institution", "nameOfAuthorizedPerson"],
      ownershipType: "INSTITUTIONAL"
    }, {
      label: "PT_OWNERSHIP_INFO_TEL_NO",
      keyPath: ["searchResult", "property", "owners", "_index_", "altContactNumber"],
      ownershipType: "INSTITUTIONAL"
    }, {
      label: "PT_OWNERSHIP_INFO_NAME",
      keyPath: ["searchResult", "property", "owners", "_index_", "name"],
      ownershipType: "INDIVIDUAL"
    }, {
      label: "PT_GUARDIAN_NAME",
      keyPath: ["searchResult", "property", "owners", "_index_", "fatherOrHusbandName"],
      ownershipType: "INDIVIDUAL"
    }, {
      label: "PT_OWNERSHIP_INFO_MOBILE_NO",
      keyPath: ["searchResult", "property", "owners", "_index_", "mobileNumber"],
      ownershipType: "ALL"
    }, {
      label: "PT_OWNERSHIP_INFO_EMAIL_ID",
      keyPath: ["searchResult", "property", "owners", "_index_", "emailId"],
      ownershipType: "INDIVIDUAL"
    }, {
      label: "PT_OWNERSHIP_INFO_USER_CATEGORY",
      keyPath: ["searchResult", "property", "owners", "_index_", "ownerType"],
      ownershipType: "INDIVIDUAL"
    }, {
      label: "PT_OWNERSHIP_INFO_CORR_ADDR",
      keyPath: ["searchResult", "property", "owners", "_index_", "correspondenceAddress"],
      ownershipType: "ALL"
    }]
  }]
}, {
  head: "PT_MUTATION_TRANSFEREE_DETAILS_HEADER",
  body: [{
    type: "component",
    route: "owner-ship-details@0",
    isMandatory: true,
    component: "SelectOwnerShipDetails",
    texts: {
      headerCaption: "PT_MUTATION_TRANSFEREE_DETAILS_HEADER",
      header: "PT_PROVIDE_OWNERSHIP_DETAILS",
      cardText: "PT_PROVIDE_OWNERSHI_DETAILS_SUB_TEXT",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "ownershipCategory",
    withoutLabel: true,
    nextStep: {
      INSTITUTIONALPRIVATE: "inistitution-details",
      INSTITUTIONALGOVERNMENT: "inistitution-details",
      "INDIVIDUAL.SINGLEOWNER": "multiple-owners",
      "INDIVIDUAL.MULTIPLEOWNERS": "multiple-owners"
    }
  }, {
    route: "multiple-owners",
    component: "OwnerMutate",
    withoutLabel: true,
    nextStep: "is-mutatation-pending",
    key: "Owners",
    hideInEmployee: true
  }, {
    type: "component",
    route: "inistitution-details",
    isMandatory: true,
    component: "SelectInistitutionOwnerDetails",
    texts: {
      headerCaption: "",
      header: "PT_INSTITUTION_DETAILS_HEADER",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "institutional-owner-address",
    hideInEmployee: true
  }, {
    isMandatory: true,
    type: "component",
    route: "owner-details",
    key: "owners",
    component: "SelectOwnerDetails",
    texts: {
      headerCaption: "PT_MUTATION_TRANSFEREE_DETAILS_HEADER",
      header: "PT_OWNERSHIP_INFO_SUB_HEADER",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    withoutLabel: true,
    nextStep: "special-owner-category",
    hideInEmployee: true
  }, {
    type: "component",
    route: "special-owner-category",
    isMandatory: true,
    component: "SelectSpecialOwnerCategoryType",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_SPECIAL_OWNER_CATEGORY",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "owner-address",
    hideInEmployee: true
  }, {
    type: "component",
    route: "owner-address",
    isMandatory: true,
    component: "SelectOwnerAddress",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_OWNERS_ADDRESS",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "special-owner-category-proof",
    hideInEmployee: true
  }, {
    type: "component",
    component: "SelectAltContactNumber",
    key: "owners",
    withoutLabel: true,
    hideInEmployee: true
  }, {
    type: "component",
    route: "special-owner-category-proof",
    isMandatory: true,
    component: "SelectSpecialProofIdentity",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_SPECIAL_OWNER_CATEGORY_PROOF_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "proof-of-identity",
    hideInEmployee: true
  }, {
    type: "component",
    route: "proof-of-identity",
    isMandatory: true,
    component: "SelectProofIdentity",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_PROOF_IDENTITY_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT",
      addMultipleText: "PT_COMMON_ADD_APPLICANT_LABEL"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: null,
    hideInEmployee: true
  }, {
    type: "component",
    route: "inistitution-details",
    isMandatory: true,
    component: "SelectInistitutionOwnerDetails",
    texts: {
      headerCaption: "",
      header: "PT_INSTITUTION_DETAILS_HEADER",
      cardText: "PT_FORM3_HEADER_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "institutional-owner-address",
    hideInEmployee: true
  }, {
    type: "component",
    route: "institutional-owner-address",
    isMandatory: true,
    component: "SelectOwnerAddress",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_OWNERS_ADDRESS",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "institutional-proof-of-identity",
    hideInEmployee: true
  }, {
    type: "component",
    route: "institutional-proof-of-identity",
    isMandatory: true,
    component: "SelectProofIdentity",
    texts: {
      headerCaption: "PT_OWNERS_DETAILS",
      header: "PT_PROOF_IDENTITY_HEADER",
      cardText: "",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    key: "owners",
    withoutLabel: true,
    nextStep: "is-mutatation-pending",
    hideInEmployee: true
  }, {
    type: "component",
    component: "PTEmployeeOwnershipDetails",
    key: "owners",
    withoutLabel: true,
    hideInCitizen: true
  }]
}, {
  head: "PT_MUTATION_DETAILS",
  body: [{
    key: "additionalDetails",
    texts: {
      headerCaption: "PT_MUTATION_DETAILS",
      header: "PT_MUTATION_COURT_PENDING_OR_NOT",
      cardText: "PT_MUTATION_PENDING_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    route: "is-mutatation-pending",
    withoutLabel: true,
    component: "IsMutationPending",
    nextStep: "is-under-govt-aquisition",
    type: "component"
  }, {
    key: "additionalDetails",
    route: "is-under-govt-aquisition",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_MUTATION_DETAILS",
      header: "PT_MUTATION_STATE_ACQUISITION",
      cardText: "PT_STATE_AQUISTION_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    component: "UnderStateAquire",
    nextStep: "reason",
    type: "component"
  }]
}, {
  head: "PT_MUTATION_REGISTRATION_DETAILS",
  body: [{
    key: "additionalDetails",
    route: "reason",
    texts: {
      headerCaption: "PT_MUTATION_DETAILS",
      header: "PT_MUTATION_TRANSFER_REASON",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    withoutLabel: true,
    component: "PTReasonForTransfer",
    nextStep: "market-value",
    type: "component"
  }, {
    key: "additionalDetails",
    route: "market-value",
    texts: {
      headerCaption: "PT_MUTATION_DETAILS",
      header: "PT_MUTATION_MARKET_VALUE",
      cardText: "PT_MARKET_VALUE_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    withoutLabel: true,
    component: "PropertyMarketValue",
    nextStep: "registration-doc",
    type: "component"
  }, {
    key: "additionalDetails",
    route: "registration-doc",
    texts: {
      headerCaption: "PT_MUTATION_DETAILS",
      header: "PT_MUTATION_DOCUMENT_DETAILS",
      cardText: "PT_REGISTRATION_DOC_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    withoutLabel: true,
    component: "PTRegistrationDocument",
    nextStep: "comments",
    type: "component"
  }, {
    key: "additionalDetails",
    route: "comments",
    withoutLabel: true,
    component: "PTComments",
    texts: {
      headerCaption: "PT_MUTATION_DETAILS",
      header: "PT_MUTATION_REMARKS",
      cardText: "PT_REMARKS_MESSAGE",
      submitBarLabel: "PT_COMMON_NEXT"
    },
    nextStep: "transfer-reason-doc",
    type: "component"
  }, {
    type: "component",
    route: "transfer-reason-doc",
    component: "TransferProof",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_TRANSFER_DOC_CAPTION",
      header: "PT_TRANSFER_DOC_HEADER",
      cardText: "PT_TRANSFER_DOC_MESSAGE",
      nextText: "PT_COMMONS_NEXT",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    key: "transferReasonProof",
    hideInEmployee: true,
    nextStep: "address-proof"
  }, {
    type: "component",
    route: "address-proof",
    component: "Proof",
    withoutLabel: true,
    texts: {
      headerCaption: "PT_PROPERTY_LOCATION_CAPTION",
      header: "Proof of Address",
      cardText: "",
      nextText: "PT_COMMONS_NEXT",
      submitBarLabel: "PT_COMMONS_NEXT"
    },
    key: "addressProof",
    hideInEmployee: true
  }, {
    component: "SelectDocuments",
    withoutLabel: true,
    key: "documents",
    type: "component"
  }]
}];

var MutationCitizen = function MutationCitizen(props) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var match = useRouteMatch();

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_MUTATE_PROPERTY", {}),
      params = _Digit$Hooks$useSessi[0],
      setParams = _Digit$Hooks$useSessi[1],
      _clearParams = _Digit$Hooks$useSessi[2];

  var history = useHistory();

  var _useState = useState(false),
      submit = _useState[0],
      setSubmit = _useState[1];

  var _useState2 = useState(null),
      formData = _useState2[0],
      setFormData = _useState2[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId.split(".")[0], "PropertyTax", "MutationDocuments"),
      mutationDocs = _Digit$Hooks$pt$useMD.data;

  var selectParams = function selectParams(key, data) {
    setParams(function (prev) {
      var _extends2;

      return _extends({}, prev, (_extends2 = {}, _extends2[key] = data, _extends2));
    });
  };

  var config = [];
  newConfigMutate.forEach(function (obj) {
    config = config.concat(obj.body.filter(function (a) {
      return !a.hideInCitizen;
    }));
  });

  function handleSelect(key, data, skipStep, index, isAddMultiple, configObj) {

    var pathArray = pathname.split("/");
    var currentPath = pathArray.pop();

    if (configObj !== null && configObj !== void 0 && configObj.nesting) {
      for (var i = 0; i < (configObj === null || configObj === void 0 ? void 0 : configObj.nesting); i++) {
        currentPath = pathArray.pop();
      }
    }

    var activeRouteObj = config.filter(function (e) {
      return e.route === currentPath;
    })[0];
    selectParams(key, data);

    var _ref = configObj || {},
        queryParams = _ref.queryParams;

    var queryString = queryParams ? "?" + Object.keys(queryParams).map(function (_key) {
      return _key + "=" + queryParams[_key];
    }).join("&") : "";

    if (!activeRouteObj.nextStep) {
      setSubmit(true);
    } else if (typeof activeRouteObj.nextStep === "string") {
      if (skipStep) history.replace(pathArray.join("/") + "/" + activeRouteObj.nextStep + queryString);else history.push(pathArray.join("/") + "/" + activeRouteObj.nextStep + queryString);
    } else if (typeof activeRouteObj.nextStep === "object") {
      var nextStep = activeRouteObj.nextStep[configObj === null || configObj === void 0 ? void 0 : configObj.routeKey];
      if (skipStep) history.replace(pathArray.join("/") + "/" + nextStep + queryString);else history.push(pathArray.join("/") + "/" + nextStep + queryString);
    }
  }

  useEffect(function () {
    if (submit) {
      handleSubmit();
    }
  }, [submit]);

  var handleSubmit = function handleSubmit() {
    var _originalProperty$own, _additionalDetails$is;

    var originalProperty = params.searchResult.property;
    var additionalDetails = params.additionalDetails,
        ownershipCategory = params.ownershipCategory,
        addressProof = params.addressProof,
        transferReasonProof = params.transferReasonProof;
    var ownersArray = ownershipCategory !== null && ownershipCategory !== void 0 && ownershipCategory.code.includes("INDIVIDUAL") ? params.Owners : params.owners;
    var ownerDocs = ownersArray.map(function (owner) {
      return Object.keys(owner.documents).map(function (key) {
        var _owner$documents$key = owner.documents[key],
            documentType = _owner$documents$key.documentType,
            fileStoreId = _owner$documents$key.fileStoreId;
        return {
          documentType: documentType.code,
          fileStoreId: fileStoreId
        };
      });
    }).flat();
    var otherDocs = [addressProof, transferReasonProof].map(function (e, index) {
      var documentType = e.documentType,
          fileStoreId = e.fileStoreId;
      return {
        documentType: index === 1 ? documentType.code.split(".")[2] : documentType.code,
        fileStoreId: fileStoreId
      };
    });
    var newDocs = [].concat(ownerDocs, otherDocs);
    originalProperty.owners = originalProperty === null || originalProperty === void 0 ? void 0 : originalProperty.owners.filter(function (owner) {
      return owner.status == "ACTIVE";
    });
    var data = {
      Property: _extends({}, params.searchResult.property, {
        creationReason: "MUTATION",
        owners: [].concat((_originalProperty$own = originalProperty.owners) === null || _originalProperty$own === void 0 ? void 0 : _originalProperty$own.map(function (e) {
          return _extends({}, e, {
            status: "INACTIVE"
          });
        }), ownersArray.map(function (owner) {
          var _owner$gender, _owner$ownerType, _owner$relationship, _owner$inistitutetype;

          return _extends({}, owner, {
            documents: Object.keys(owner.documents).map(function (key) {
              var _owner$documents$key2 = owner.documents[key],
                  documentType = _owner$documents$key2.documentType,
                  fileStoreId = _owner$documents$key2.fileStoreId;
              return {
                documentType: documentType.code,
                fileStoreId: fileStoreId
              };
            }),
            gender: (_owner$gender = owner.gender) === null || _owner$gender === void 0 ? void 0 : _owner$gender.code,
            ownerType: ((_owner$ownerType = owner.ownerType) === null || _owner$ownerType === void 0 ? void 0 : _owner$ownerType.code) || "NONE",
            relationship: (_owner$relationship = owner.relationship) === null || _owner$relationship === void 0 ? void 0 : _owner$relationship.code,
            inistitutetype: owner === null || owner === void 0 ? void 0 : (_owner$inistitutetype = owner.inistitutetype) === null || _owner$inistitutetype === void 0 ? void 0 : _owner$inistitutetype.value,
            landlineNumber: owner === null || owner === void 0 ? void 0 : owner.altContactNumber,
            status: "ACTIVE"
          });
        })),
        additionalDetails: _extends({}, additionalDetails, {
          isMutationInCourt: (_additionalDetails$is = additionalDetails.isMutationInCourt) === null || _additionalDetails$is === void 0 ? void 0 : _additionalDetails$is.code,
          reasonForTransfer: additionalDetails === null || additionalDetails === void 0 ? void 0 : additionalDetails.reasonForTransfer.code,
          isPropertyUnderGovtPossession: additionalDetails.isPropertyUnderGovtPossession.code,
          documentDate: new Date(additionalDetails === null || additionalDetails === void 0 ? void 0 : additionalDetails.documentDate).getTime(),
          marketValue: Number(additionalDetails === null || additionalDetails === void 0 ? void 0 : additionalDetails.marketValue)
        }),
        ownershipCategory: ownershipCategory.code,
        documents: [].concat(originalProperty.documents.map(function (oldDoc) {
          var _mutationDocs$Propert;

          if (mutationDocs !== null && mutationDocs !== void 0 && (_mutationDocs$Propert = mutationDocs.PropertyTax) !== null && _mutationDocs$Propert !== void 0 && _mutationDocs$Propert.MutationDocuments.some(function (mut) {
            return oldDoc.documentType.includes(mut.code);
          })) {
            return _extends({}, oldDoc, {
              status: "INACTIVE"
            });
          } else return oldDoc;
        }), newDocs),
        workflow: {
          action: "OPEN",
          businessService: "PT.MUTATION",
          moduleName: "PT",
          tenantId: originalProperty.tenantId
        }
      })
    };

    if (!(ownershipCategory !== null && ownershipCategory !== void 0 && ownershipCategory.code.includes("INDIVIDUAL"))) {
      var _data$Property, _ownersArray$0$inisti, _data$Property$owners;

      data.Property.institution = {
        nameOfAuthorizedPerson: ownersArray[0].name,
        name: ownersArray[0].inistitutionName,
        designation: ownersArray[0].designation,
        tenantId: data === null || data === void 0 ? void 0 : (_data$Property = data.Property) === null || _data$Property === void 0 ? void 0 : _data$Property.address.tenantId,
        type: (_ownersArray$0$inisti = ownersArray[0].inistitutetype) === null || _ownersArray$0$inisti === void 0 ? void 0 : _ownersArray$0$inisti.value
      };
      data.Property.owners = (_data$Property$owners = data.Property.owners) === null || _data$Property$owners === void 0 ? void 0 : _data$Property$owners.map(function (owner) {
        return owner.status === "INACTIVE" ? _extends({}, owner, {
          altContactNumber: ownersArray[0].altContactNumber
        }) : owner;
      });
    } else {
      delete data.Property.institution;
    }

    setFormData(data);
  };

  useEffect(function () {
    if (formData) history.push(match.path + "/acknowledgement");
  }, [formData]);

  var handleSkip = function handleSkip() {};

  config.indexRoute = "search-property";
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, null, config.map(function (routeObj, index) {
    var component = routeObj.component;
    var Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      path: match.path + "/" + routeObj.route,
      key: index
    }, Component ? /*#__PURE__*/React.createElement(Component, {
      config: routeObj,
      onSelect: handleSelect,
      onSkip: handleSkip,
      t: t,
      formData: params,
      clearParams: function clearParams() {
        return _clearParams();
      }
    }) : /*#__PURE__*/React.createElement("div", null, "Component not found"));
  }), /*#__PURE__*/React.createElement(Route, {
    path: match.path + "/acknowledgement"
  }, /*#__PURE__*/React.createElement(PTAcknowledgement, {
    data: formData,
    onSuccess: function onSuccess() {
      _clearParams();

      setFormData(null);
    }
  })), /*#__PURE__*/React.createElement(Route, null, /*#__PURE__*/React.createElement(Redirect, {
    to: match.path + "/" + config.indexRoute
  }))));
};

var hideBackButtonConfig = [{
  screenPath: "property/new-application/acknowledgement"
}, {
  screenPath: "property/edit-application/acknowledgement"
}];

var App = function App() {
  var _useRouteMatch = useRouteMatch(),
      path = _useRouteMatch.path,
      match = _objectWithoutPropertiesLoose(_useRouteMatch, ["path", "url"]);

  return /*#__PURE__*/React.createElement("span", {
    className: "pt-citizen"
  }, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(AppContainer, null, !shouldHideBackButton(hideBackButtonConfig) ? /*#__PURE__*/React.createElement(BackButton, null, "Back") : "", /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/new-application",
    component: CreateProperty
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/edit-application",
    component: EditProperty
  }), /*#__PURE__*/React.createElement(Route, {
    path: path + "/property/citizen-search",
    component: SearchProperty$1
  }), /*#__PURE__*/React.createElement(Route, {
    path: path + "/property/search-results",
    component: CitizenSearchResults
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/application/:acknowledgementIds",
    component: PTApplicationDetails
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/my-applications",
    component: PTMyApplications
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/my-properties",
    component: MyProperties
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/property-mutation",
    component: MutationCitizen
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/properties/:propertyIds",
    component: PropertyInformation
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property/owner-history/:tenantId/:propertyIds",
    component: propertyOwnerHistory
  }))));
};

var ProvideFloorNo = function ProvideFloorNo(_ref) {
  var _floordata$PropertyTa;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;
  var index = window.location.href.split("/").pop();
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _useState = useState((formData === null || formData === void 0 ? void 0 : formData.Floorno) || ""),
      Floorno = _useState[0],
      setFloorno = _useState[1];

  var _ref2 = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", "Floor") || {},
      floordata = _ref2.data;

  var floorlist = [];
  floorlist = floordata === null || floordata === void 0 ? void 0 : (_floordata$PropertyTa = floordata.PropertyTax) === null || _floordata$PropertyTa === void 0 ? void 0 : _floordata$PropertyTa.Floor;
  var i;
  var data = [];

  function getfloorlistdata(floorlist) {
    for (i = 0; Array.isArray(floorlist) && i < floorlist.length; i++) {
      data.push({
        i18nKey: "PROPERTYTAX_FLOOR_" + stringReplaceAll(floorlist[i].code, "-", "_")
      });
    }

    return data;
  }

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectFloorno(value) {
    setFloorno(value);
  }

  function goNext() {
    onSelect(config.key, Floorno);
  }

  return /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !Floorno
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("PT_FLOOR_NUMBER_LABEL")), /*#__PURE__*/React.createElement("div", {
    className: "form-pt-dropdown-only"
  }, data && /*#__PURE__*/React.createElement(RadioOrSelect, {
    t: t,
    optionKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: getfloorlistdata(floorlist) || {},
    selectedOption: Floorno,
    onSelect: selectFloorno
  })));
};

var TransfererDetails = function TransfererDetails(_ref) {
  var _propertyDetails$owne, _propertyDetails$owne2, _propertyDetails$owne5;

  var userType = _ref.userType,
      formData = _ref.formData,
      config = _ref.config,
      onSelect = _ref.onSelect;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var propertyDetails = userType === "employee" ? formData.originalData : formData.searchResult.property;
  var ownershipType = propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$owne = propertyDetails.ownershipCategory) === null || _propertyDetails$owne === void 0 ? void 0 : (_propertyDetails$owne2 = _propertyDetails$owne.split) === null || _propertyDetails$owne2 === void 0 ? void 0 : _propertyDetails$owne2.call(_propertyDetails$owne, ".");

  if (userType === "employee") {
    var _propertyDetails$owne3;

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StatusTable, null, propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$owne3 = propertyDetails.owners) === null || _propertyDetails$owne3 === void 0 ? void 0 : _propertyDetails$owne3.filter(function (e) {
      return e.status === "ACTIVE";
    }).map(function (owner, index, arr) {
      var _propertyDetails$owne4, _config$labels;

      return /*#__PURE__*/React.createElement(React.Fragment, null, (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$owne4 = propertyDetails.owners) === null || _propertyDetails$owne4 === void 0 ? void 0 : _propertyDetails$owne4.filter(function (e) {
        return e.status === "ACTIVE";
      }).length) > 1 ? /*#__PURE__*/React.createElement(CardCaption, {
        style: {
          marginTop: "24px",
          marginBottom: "12px",
          display: "block"
        }
      }, t("ES_OWNER") + "  " + (index + 1)) : null, (_config$labels = config.labels) === null || _config$labels === void 0 ? void 0 : _config$labels.filter(function (e) {
        return e.ownershipType === "ALL" || (ownershipType === null || ownershipType === void 0 ? void 0 : ownershipType[0].includes(e.ownershipType)) || e.ownershipType === (ownershipType === null || ownershipType === void 0 ? void 0 : ownershipType[0]);
      }).map(function (label) {
        var _label$keyPath, _label$keyPath$filter;

        var noteValue = label === null || label === void 0 ? void 0 : (_label$keyPath = label.keyPath) === null || _label$keyPath === void 0 ? void 0 : (_label$keyPath$filter = _label$keyPath.filter(function (e) {
          return !["searchResult", "property"].includes(e);
        })) === null || _label$keyPath$filter === void 0 ? void 0 : _label$keyPath$filter.reduce(function (acc, curr) {
          return curr === "_index_" ? acc === null || acc === void 0 ? void 0 : acc[index] : acc === null || acc === void 0 ? void 0 : acc[curr];
        }, propertyDetails);
        return /*#__PURE__*/React.createElement(Row, {
          key: label.label,
          label: t(label.label),
          text: noteValue || "N/A"
        });
      }));
    })));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: onSelect,
    onSkip: function onSkip() {},
    isDisabled: false
  }, /*#__PURE__*/React.createElement(CardHeader, null, t("PT_MUTATION_TRANSFEROR_DETAILS")), propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$owne5 = propertyDetails.owners) === null || _propertyDetails$owne5 === void 0 ? void 0 : _propertyDetails$owne5.filter(function (e) {
    return e.status === "ACTIVE";
  }).map(function (owner, index, arr) {
    var _propertyDetails$owne6, _config$labels2;

    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, (propertyDetails === null || propertyDetails === void 0 ? void 0 : (_propertyDetails$owne6 = propertyDetails.owners) === null || _propertyDetails$owne6 === void 0 ? void 0 : _propertyDetails$owne6.filter(function (e) {
      return e.status === "ACTIVE";
    }).length) > 1 ? /*#__PURE__*/React.createElement(CardCaption, {
      style: {
        marginTop: "24px",
        marginBottom: "12px",
        display: "block"
      }
    }, t("ES_OWNER") + "  " + (index + 1)) : null, (_config$labels2 = config.labels) === null || _config$labels2 === void 0 ? void 0 : _config$labels2.filter(function (e) {
      return e.ownershipType === "ALL" || (ownershipType === null || ownershipType === void 0 ? void 0 : ownershipType[0].includes(e.ownershipType)) || e.ownershipType === (ownershipType === null || ownershipType === void 0 ? void 0 : ownershipType[0]);
    }).map(function (label) {
      var _label$keyPath2;

      var noteValue = label === null || label === void 0 ? void 0 : (_label$keyPath2 = label.keyPath) === null || _label$keyPath2 === void 0 ? void 0 : _label$keyPath2.reduce(function (acc, curr) {
        return curr === "_index_" ? acc === null || acc === void 0 ? void 0 : acc[index] : acc === null || acc === void 0 ? void 0 : acc[curr];
      }, formData);
      return /*#__PURE__*/React.createElement(KeyNote, {
        key: label.label,
        keyValue: t(label.label),
        note: typeof noteValue === "string" ? t(noteValue) : "N/A",
        noteStyle: label.noteStyle
      });
    }));
  })));
};

var createOwnerDetails$1 = function createOwnerDetails() {
  return {
    name: "",
    mobileNumber: "",
    fatherOrHusbandName: "",
    emailId: "",
    permanentAddress: "",
    relationship: "",
    ownerType: "",
    gender: "",
    isCorrespondenceAddress: false,
    documents: {},
    key: Date.now()
  };
};

var config$2 = [{
  isMandatory: true,
  type: "component",
  route: "owner-details",
  key: "owners",
  component: "SelectOwnerDetails",
  texts: {
    headerCaption: "PT_MUTATION_TRANSFEREE_DETAILS_HEADER",
    header: "PT_OWNERSHIP_INFO_SUB_HEADER",
    cardText: "PT_FORM3_HEADER_MESSAGE",
    submitBarLabel: "PT_COMMON_NEXT"
  },
  withoutLabel: true,
  nextStep: "special-owner-category",
  hideInEmployee: true
}, {
  type: "component",
  route: "special-owner-category",
  isMandatory: true,
  component: "SelectSpecialOwnerCategoryType",
  texts: {
    headerCaption: "PT_OWNERS_DETAILS",
    header: "PT_SPECIAL_OWNER_CATEGORY",
    cardText: "PT_FORM3_HEADER_MESSAGE",
    submitBarLabel: "PT_COMMON_NEXT"
  },
  key: "owners",
  withoutLabel: true,
  nextStep: "owner-address",
  hideInEmployee: true
}, {
  type: "component",
  route: "owner-address",
  isMandatory: true,
  component: "SelectOwnerAddress",
  texts: {
    headerCaption: "PT_OWNERS_DETAILS",
    header: "PT_OWNERS_ADDRESS",
    cardText: "",
    submitBarLabel: "PT_COMMON_NEXT"
  },
  key: "owners",
  withoutLabel: true,
  nextStep: "special-owner-category-proof",
  hideInEmployee: true
}, {
  type: "component",
  component: "SelectAltContactNumber",
  key: "owners",
  withoutLabel: true,
  hideInEmployee: true
}, {
  type: "component",
  route: "special-owner-category-proof",
  isMandatory: true,
  component: "SelectSpecialProofIdentity",
  texts: {
    headerCaption: "PT_OWNERS_DETAILS",
    header: "PT_SPECIAL_OWNER_CATEGORY_PROOF_HEADER",
    cardText: "",
    submitBarLabel: "PT_COMMON_NEXT"
  },
  key: "owners",
  withoutLabel: true,
  nextStep: "proof-of-identity",
  hideInEmployee: true
}, {
  type: "component",
  route: "proof-of-identity",
  isMandatory: true,
  component: "SelectProofIdentity",
  texts: {
    headerCaption: "PT_OWNERS_DETAILS",
    header: "PT_PROOF_IDENTITY_HEADER",
    cardText: "",
    submitBarLabel: "PT_COMMON_NEXT",
    addMultipleText: "PT_COMMON_ADD_APPLICANT_LABEL"
  },
  key: "owners",
  withoutLabel: true,
  nextStep: null,
  hideInEmployee: true
}];

var OwnerCitizen = function OwnerCitizen(props) {
  var _formData$ownershipCa;

  var onSelect = props.onSelect,
      formData = props.formData,
      propsConfig = props.config;

  var _useLocation = useLocation(),
      pathname = _useLocation.pathname;

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_MUTATE_MULTIPLE_OWNERS", [createOwnerDetails$1()]),
      owners = _Digit$Hooks$useSessi[0],
      setOwners = _Digit$Hooks$useSessi[1];

  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("PT_MUTATE_MULTIPLE_OWNERS_LAST_PATH", "/0/" + config$2[0].route),
      lastPath = _Digit$Hooks$useSessi2[0],
      setLastPath = _Digit$Hooks$useSessi2[1];

  var _useRouteMatch = useRouteMatch(),
      path = _useRouteMatch.path;

  var allowMultipleOwners = (formData === null || formData === void 0 ? void 0 : (_formData$ownershipCa = formData.ownershipCategory) === null || _formData$ownershipCa === void 0 ? void 0 : _formData$ownershipCa.code) === "INDIVIDUAL.MULTIPLEOWNERS";
  var history = useHistory();
  useEffect(function () {
    if (!owners.length) setOwners([createOwnerDetails$1()]);
  }, []);
  useEffect(function () {
    if (!allowMultipleOwners && owners.length > 1) {
      setOwners([owners[0]]);
      onSelect(propsConfig.key, [owners[0]]);
      history.replace(path + "/0/" + config$2[0].route);
    }
  }, [allowMultipleOwners]);
  useEffect(function () {
    if (lastPath !== pathname.split(path)[1]) {
      setLastPath(pathname.split(path)[1]);
    }
  }, [pathname]);
  var prevOwnerCount = useRef();
  useEffect(function () {
    prevOwnerCount.current = [].concat(owners).length;
  });
  var prevOwnerLength = prevOwnerCount.current;

  var addNewOwner = function addNewOwner() {
    var newOwner = createOwnerDetails$1();
    if (allowMultipleOwners) setOwners(function (prev) {
      return [].concat(prev, [newOwner]);
    });
  };

  useEffect(function () {
    if (owners.length > prevOwnerLength) history.push(path + "/" + (owners.length - 1) + "/" + config$2[0].route);
  }, [owners]);

  var removeOwner = function removeOwner(owner) {
    setOwners(function (prev) {
      return prev.filter(function (o) {
        return o.key != owner.key;
      });
    });
  };

  var commonProps = _extends({
    addNewOwner: addNewOwner,
    removeOwner: removeOwner,
    setOwners: setOwners,
    owners: owners
  }, props, {
    propsConfig: propsConfig
  });

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, null, owners.map(function (owner, index) {
    return /*#__PURE__*/React.createElement(Route, {
      key: owner.key,
      path: path + "/" + index
    }, /*#__PURE__*/React.createElement(OwnerSteps, _extends({
      owner: owner,
      ownerIndex: index
    }, commonProps)));
  }), /*#__PURE__*/React.createElement(Route, null, pathname != "" + path + lastPath && lastPath != "" ? /*#__PURE__*/React.createElement(Redirect, {
    to: "" + path + lastPath
  }) : null)));
};

var OwnerSteps = function OwnerSteps(_ref) {
  var owner = _ref.owner,
      addNewOwner = _ref.addNewOwner,
      setOwners = _ref.setOwners,
      owners = _ref.owners,
      ownerIndex = _ref.ownerIndex,
      propsConfig = _ref.propsConfig,
      props = _objectWithoutPropertiesLoose(_ref, ["owner", "addNewOwner", "removeOwner", "setOwners", "owners", "ownerIndex", "propsConfig"]);

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useRouteMatch2 = useRouteMatch(),
      path = _useRouteMatch2.path;

  var _useLocation2 = useLocation(),
      pathname = _useLocation2.pathname;

  var history = useHistory();

  var addOwner = function addOwner(data) {
    setOwners(function (prev) {
      return prev.map(function (o, index) {
        return o.key === owner.key ? _extends({}, o, data) : o;
      });
    });
    addNewOwner();
  };

  var handleSelectForOwner = function handleSelectForOwner(key, data, skipStep, index, isAddMultiple, queryParams, configObj) {

    setOwners(function (prev) {
      return prev.map(function (o, index) {
        return o.key === owner.key ? _extends({}, o, data) : o;
      });
    });
    var pathArray = pathname.split("/");
    var currentPath = pathArray.pop();
    var activeRouteObj = config$2.filter(function (e) {
      return e.route === currentPath;
    })[0];
    var queryString = queryParams ? "?" + Object.keys(queryParams).map(function (_key) {
      return _key + "=" + queryParams[_key];
    }).join("&") : "";
    var goToNext = skipStep ? history.replace : history.push;

    if (!activeRouteObj.nextStep) {
      if (ownerIndex !== owners.length - 1) {
        pathArray.pop();
        pathArray.push(ownerIndex + 1);
        goToNext(pathArray.join("/") + "/" + config$2[0].route);
      } else {
        props.onSelect(propsConfig.key, owners, "", "", "", {
          nesting: 2
        });
      }
    } else if (typeof activeRouteObj.nextStep === "string") {
      goToNext(pathArray.join("/") + "/" + activeRouteObj.nextStep + queryString);
    } else if (typeof activeRouteObj.nextStep === "object" && activeRouteObj.nextStep) {
      var nextStep = activeRouteObj.nextStep[configObj.routeKey];
      goToNext(pathArray.join("/") + "/" + nextStep + queryString);
    }
  };

  return /*#__PURE__*/React.createElement(Switch, null, config$2.map(function (routeObj, index) {
    var component = routeObj.component;
    var Component = typeof component === "string" ? Digit.ComponentRegistryService.getComponent(component) : component;
    return /*#__PURE__*/React.createElement(Route, {
      key: index,
      path: path + "/" + routeObj.route
    }, /*#__PURE__*/React.createElement(Component, {
      config: routeObj,
      onSelect: handleSelectForOwner,
      onSkip: function onSkip() {},
      t: t,
      formData: _extends({}, props.formData, {
        owners: owners
      }),
      ownerIndex: ownerIndex,
      addNewOwner: addOwner
    }));
  }));
};

var Comments = function Comments(props) {
  var _formData$config$key;

  var t = props.t,
      config = props.config,
      onSelect = props.onSelect,
      userType = props.userType,
      formData = props.formData;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.remarks),
      remarks = _useState[0],
      setSelected = _useState[1];

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData === null || formData === void 0 ? void 0 : formData[config.key], {
      remarks: remarks
    }));
  };

  var onSkip = function onSkip() {};

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_REMARKS")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextArea, {
      onChange: function onChange(e) {
        return setSelected(e.target.value);
      },
      value: remarks
    }))));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(TextArea, {
    onChange: function onChange(e) {
      return setSelected(e.target.value);
    },
    value: remarks
  }))));
};

var IsMutationPending = function IsMutationPending(props) {
  var _formData$config$key, _formData$config$key2;

  var t = props.t,
      config = props.config,
      onSelect = props.onSelect,
      userType = props.userType,
      formData = props.formData,
      setError = props.setError,
      clearErrors = props.clearErrors,
      errors = props.errors;
  var menu = [{
    code: "YES"
  }, {
    code: "NO"
  }];

  var _useState = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.isMutationInCourt),
      isMutationInCourt = _useState[0],
      setMutationInCourt = _useState[1];

  var _useState2 = useState((formData === null || formData === void 0 ? void 0 : (_formData$config$key2 = formData[config.key]) === null || _formData$config$key2 === void 0 ? void 0 : _formData$config$key2.caseDetails) || ""),
      caseDetails = _useState2[0],
      setCaseDetails = _useState2[1];

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData === null || formData === void 0 ? void 0 : formData[config.key], {
      isMutationInCourt: isMutationInCourt,
      caseDetails: caseDetails
    }));
  };

  useEffect(function () {
    if ((isMutationInCourt === null || isMutationInCourt === void 0 ? void 0 : isMutationInCourt.code) === "NO" && caseDetails !== null && caseDetails !== void 0 && caseDetails.length) setCaseDetails("");

    if (userType === "employee") {
      if (!isMutationInCourt) {
        setError(config.key, {
          type: "Required"
        });
      } else if (errors !== null && errors !== void 0 && errors[config.key]) clearErrors(config.key);

      goNext();
    }
  }, [isMutationInCourt, caseDetails]);

  var onSkip = function onSkip() {};

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, {
      style: {
        display: "flex",
        flexDirection: "column",
        alignItems: "flex-start"
      }
    }, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_COURT_PENDING_OR_NOT") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(RadioButtons, {
      style: {
        display: "flex"
      },
      innerStyles: {
        paddingRight: "250px"
      },
      t: t,
      optionsKey: "i18nKey",
      isMandatory: config.isMandatory,
      options: menu,
      selectedOption: isMutationInCourt,
      onSelect: function onSelect(v) {
        setMutationInCourt(v);
      },
      labelKey: "PT_MUTATION_PENDING",
      isDependent: true
    }))), /*#__PURE__*/React.createElement(LabelFieldPair, {
      style: {
        marginBottom: "50px"
      }
    }, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_COURT_CASE_DETAILS")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      disable: (isMutationInCourt === null || isMutationInCourt === void 0 ? void 0 : isMutationInCourt.code) !== "YES",
      value: caseDetails,
      onChange: function onChange(e) {
        return setCaseDetails(e.target.value);
      }
    }))));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !isMutationInCourt
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: isMutationInCourt,
    onSelect: function onSelect(v) {
      setMutationInCourt(v);
    },
    labelKey: "PT_MUTATION_PENDING",
    isDependent: true
  }), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_MUTATION_COURT_CASE_DETAILS")), /*#__PURE__*/React.createElement(TextInput, {
    disable: (isMutationInCourt === null || isMutationInCourt === void 0 ? void 0 : isMutationInCourt.code) !== "YES",
    value: caseDetails,
    onChange: function onChange(e) {
      return setCaseDetails(e.target.value);
    }
  }))));
};

var PTPropertyUnderStateAquire = function PTPropertyUnderStateAquire(_ref) {
  var _formData$config$key, _formData$config$key2;

  var props = _extends({}, _ref);

  var t = props.t,
      config = props.config,
      onSelect = props.onSelect,
      userType = props.userType,
      formData = props.formData,
      setError = props.setError,
      clearErrors = props.clearErrors,
      errors = props.errors;
  var menu = [{
    code: "YES"
  }, {
    code: "NO"
  }];

  var _useState = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.isPropertyUnderGovtPossession),
      isPropertyUnderGovtPossession = _useState[0],
      setSelected = _useState[1];

  var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key2 = formData[config.key]) === null || _formData$config$key2 === void 0 ? void 0 : _formData$config$key2.govtAcquisitionDetails),
      govtAcquisitionDetails = _useState2[0],
      setReason = _useState2[1];

  useEffect(function () {
    if ((isPropertyUnderGovtPossession === null || isPropertyUnderGovtPossession === void 0 ? void 0 : isPropertyUnderGovtPossession.code) === "NO" && govtAcquisitionDetails !== null && govtAcquisitionDetails !== void 0 && govtAcquisitionDetails.length) setReason("");

    if (userType === "employee") {
      if (!isPropertyUnderGovtPossession) {
        setError(config.key, {
          type: "Required"
        });
      } else if (errors !== null && errors !== void 0 && errors[config.key]) clearErrors(config.key);

      goNext();
    }
  }, [isPropertyUnderGovtPossession, govtAcquisitionDetails]);

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData === null || formData === void 0 ? void 0 : formData[config.key], {
      isPropertyUnderGovtPossession: isPropertyUnderGovtPossession,
      govtAcquisitionDetails: govtAcquisitionDetails
    }));
  };

  var onSkip = function onSkip() {};

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, {
      style: {
        display: "flex",
        flexDirection: "column",
        alignItems: "flex-start"
      }
    }, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_STATE_ACQUISITION") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(RadioButtons, {
      style: {
        display: "flex"
      },
      innerStyles: {
        paddingRight: "250px"
      },
      t: t,
      optionsKey: "i18nKey",
      isMandatory: config.isMandatory,
      options: menu,
      selectedOption: isPropertyUnderGovtPossession,
      onSelect: function onSelect(v) {
        setSelected(v);
      },
      labelKey: "PT_MUTATION_STATE_ACQUISITION",
      isDependent: true
    }))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_GOVT_ACQUISITION_DETAILS")), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      disable: (isPropertyUnderGovtPossession === null || isPropertyUnderGovtPossession === void 0 ? void 0 : isPropertyUnderGovtPossession.code) !== "YES",
      value: govtAcquisitionDetails,
      onChange: function onChange(e) {
        return setReason(e.target.value);
      }
    }))));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !(isPropertyUnderGovtPossession !== null && isPropertyUnderGovtPossession !== void 0 && isPropertyUnderGovtPossession.code)
  }, /*#__PURE__*/React.createElement(RadioButtons, {
    t: t,
    optionsKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    selectedOption: isPropertyUnderGovtPossession,
    onSelect: function onSelect(v) {
      setSelected(v);
    },
    labelKey: "PT_MUTATION_STATE_ACQUISITION",
    isDependent: true
  }), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_MUTATION_GOVT_ACQUISITION_DETAILS")), /*#__PURE__*/React.createElement(TextInput, {
    disable: (isPropertyUnderGovtPossession === null || isPropertyUnderGovtPossession === void 0 ? void 0 : isPropertyUnderGovtPossession.code) !== "YES",
    value: govtAcquisitionDetails,
    onChange: function onChange(e) {
      return setReason(e.target.value);
    }
  })));
};

var PropertyMarketValue = function PropertyMarketValue(props) {
  var _formData$config$key;

  var t = props.t,
      config = props.config,
      onSelect = props.onSelect,
      userType = props.userType,
      formData = props.formData,
      setError = props.setError,
      clearErrors = props.clearErrors,
      errors = props.errors;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.marketValue),
      marketValue = _useState[0],
      setSelected = _useState[1];

  useEffect(function () {
    if (userType === "employee") {
      if (!marketValue) {
        setError(config.key, {
          type: "Required"
        });
      } else if (errors !== null && errors !== void 0 && errors[config.key]) clearErrors(config.key);

      goNext();
    }
  }, [marketValue]);

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData === null || formData === void 0 ? void 0 : formData[config.key], {
      marketValue: marketValue
    }));
  };

  var onSkip = function onSkip() {};

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_MARKET_VALUE") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      type: "number",
      min: 0,
      onChange: function onChange(e) {
        return setSelected(e.target.value);
      },
      value: marketValue
    }))));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !marketValue
  }, /*#__PURE__*/React.createElement("div", {
    className: "field-container"
  }, /*#__PURE__*/React.createElement("span", {
    className: "citizen-card-input citizen-card-input--front"
  }, "\u20B9"), /*#__PURE__*/React.createElement(TextInput, {
    type: "number",
    min: 0,
    onChange: function onChange(e) {
      return setSelected(e.target.value);
    },
    value: marketValue
  }))));
};

var ReasonForTransfer = function ReasonForTransfer(props) {
  var _formData$config$key;

  var t = props.t,
      config = props.config,
      onSelect = props.onSelect,
      userType = props.userType,
      formData = props.formData,
      setError = props.setError,
      clearErrors = props.clearErrors,
      errors = props.errors;

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(Digit.ULBService.getStateId(), "PropertyTax", "ReasonForTransfer", {}),
      data = _Digit$Hooks$pt$useMD.data;

  var _useState = useState([]),
      menu = _useState[0],
      setMenu = _useState[1];

  useEffect(function () {
    if (data) {
      var opt = data.PropertyTax.ReasonForTransfer.map(function (e) {
        return _extends({}, e, {
          i18nKey: "PROPERTYTAX_REASONFORTRANSFER_" + e.code
        });
      });
      setMenu(opt);
    }
  }, [data]);

  var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.reasonForTransfer),
      reasonForTransfer = _useState2[0],
      setSelected = _useState2[1];

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData === null || formData === void 0 ? void 0 : formData[config.key], {
      reasonForTransfer: reasonForTransfer
    }));
  };

  var onSkip = function onSkip() {};

  useEffect(function () {
    if (userType === "employee") {
      if (!reasonForTransfer) {
        setError(config.key, {
          type: "Required"
        });
      } else if (errors !== null && errors !== void 0 && errors[config.key]) clearErrors(config.key);

      goNext();
    }
  }, [reasonForTransfer]);

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_TRANSFER_REASON") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(Dropdown, {
      t: t,
      option: menu,
      optionKey: "i18nKey",
      select: setSelected,
      selected: reasonForTransfer
    }))));
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !reasonForTransfer
  }, /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioOrSelect, {
    t: t,
    optionKey: "i18nKey",
    isMandatory: config.isMandatory,
    options: menu,
    onSelect: setSelected,
    selectedOption: reasonForTransfer,
    optionCardStyles: {
      maxHeight: "50vh",
      overflow: "auto",
      zIndex: 100
    }
  }))));
};

var RegistrationDocument = function RegistrationDocument(props) {
  var _formData$config$key, _formData$config$key2, _formData$config$key3;

  var t = props.t,
      config = props.config,
      onSelect = props.onSelect,
      userType = props.userType,
      formData = props.formData,
      setError = props.setError,
      clearErrors = props.clearErrors,
      errors = props.errors;

  var _useState = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.documentNumber),
      documentNumber = _useState[0],
      setDocNo = _useState[1];

  var _useState2 = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key2 = formData[config.key]) === null || _formData$config$key2 === void 0 ? void 0 : _formData$config$key2.documentValue),
      documentValue = _useState2[0],
      setDocValue = _useState2[1];

  var _useState3 = useState(formData === null || formData === void 0 ? void 0 : (_formData$config$key3 = formData[config.key]) === null || _formData$config$key3 === void 0 ? void 0 : _formData$config$key3.documentDate),
      documentDate = _useState3[0],
      setDocDate = _useState3[1];

  var _useState4 = useState(null),
      error = _useState4[0],
      setLocalError = _useState4[1];

  var selectDocDate = function selectDocDate(date) {
    setLocalError(null);

    var _date = new Date(date).getTime();

    if (_date < Date.now()) setDocDate(date);else setLocalError("PT_DOCUMENT_DATE_ERROR_MESSAGE");
  };

  var goNext = function goNext() {
    onSelect(config.key, _extends({}, formData === null || formData === void 0 ? void 0 : formData[config.key], {
      documentNumber: documentNumber,
      documentValue: documentValue,
      documentDate: documentDate
    }));
  };

  useEffect(function () {
    var _errors$config$key;

    if (userType === "employee" && !(errors !== null && errors !== void 0 && errors[config.key]) && error) {
      setError(config.key, {
        type: "invalid"
      });
    } else if (!error && (errors === null || errors === void 0 ? void 0 : (_errors$config$key = errors[config.key]) === null || _errors$config$key === void 0 ? void 0 : _errors$config$key.type) === "invalid") {
      clearErrors(config.key);
    }
  }, [error]);
  useEffect(function () {
    if (userType === "employee") {
      var _errors$config$key2;

      if (!documentDate || !documentNumber || !documentValue) {
        setError(config.key, {
          type: "Required"
        });
      } else if ((errors === null || errors === void 0 ? void 0 : (_errors$config$key2 = errors[config.key]) === null || _errors$config$key2 === void 0 ? void 0 : _errors$config$key2.type) === "Required") clearErrors(config.key);

      goNext();
    }
  }, [documentNumber, documentValue, documentDate]);

  var onSkip = function onSkip() {};

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_DOCUMENT_NO") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      type: "number",
      min: 0,
      value: documentNumber,
      onChange: function onChange(e) {
        return setDocNo(e.target.value);
      }
    }))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_DOCUMENT_VALUE") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(TextInput, {
      type: "number",
      min: 0,
      value: documentValue,
      onChange: function onChange(e) {
        return setDocValue(e.target.value);
      }
    }))), /*#__PURE__*/React.createElement(LabelFieldPair, null, /*#__PURE__*/React.createElement(CardLabel, {
      style: {
        fontWeight: "bold"
      },
      className: "card-label-smaller"
    }, t("PT_MUTATION_DOCUMENT_ISSUE_DATE") + " *"), /*#__PURE__*/React.createElement("div", {
      className: "field"
    }, /*#__PURE__*/React.createElement(DatePicker, {
      max: new Date().toLocaleDateString(),
      date: documentDate,
      onChange: selectDocDate
    }))), error ? /*#__PURE__*/React.createElement(CardLabelError, {
      style: {
        marginLeft: "30%"
      }
    }, t(error)) : null);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormStep, {
    t: t,
    config: config,
    onSelect: goNext,
    onSkip: onSkip,
    isDisabled: !(documentNumber && documentValue && documentDate)
  }, /*#__PURE__*/React.createElement(CardLabel, null, t("PT_MUTATION_DOCUMENT_NO")), /*#__PURE__*/React.createElement(TextInput, {
    type: "number",
    min: 0,
    value: documentNumber,
    onChange: function onChange(e) {
      return setDocNo(e.target.value);
    }
  }), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_MUTATION_DOCUMENT_VALUE")), /*#__PURE__*/React.createElement(TextInput, {
    type: "number",
    min: 0,
    value: documentValue,
    onChange: function onChange(e) {
      return setDocValue(e.target.value);
    }
  }), /*#__PURE__*/React.createElement(CardLabel, null, t("PT_MUTATION_DOCUMENT_ISSUE_DATE")), /*#__PURE__*/React.createElement(DatePicker, {
    max: new Date().toLocaleDateString(),
    date: documentDate,
    onChange: selectDocDate
  }), error ? /*#__PURE__*/React.createElement(CardLabelError, null, t(error)) : null));
};

var TransferProof = function TransferProof(_ref) {
  var _formData$config$key, _formData$config$key2, _Documentsob$Property;

  var t = _ref.t,
      config = _ref.config,
      onSelect = _ref.onSelect,
      formData = _ref.formData;

  var _useLocation = useLocation(),
      url = _useLocation.pathname;

  var isMutation = url.includes("property-mutation");
  var index = window.location.href.split("/").pop();

  var _useState = useState((formData === null || formData === void 0 ? void 0 : (_formData$config$key = formData[config.key]) === null || _formData$config$key === void 0 ? void 0 : _formData$config$key.fileStoreId) || null),
      uploadedFile = _useState[0],
      setUploadedFile = _useState[1];

  var _useState2 = useState(null),
      file = _useState2[0],
      setFile = _useState2[1];

  var _useState3 = useState(null),
      error = _useState3[0],
      setError = _useState3[1];

  var cityDetails = Digit.ULBService.getCurrentUlb();

  var _useState4 = useState((formData === null || formData === void 0 ? void 0 : (_formData$config$key2 = formData[config.key]) === null || _formData$config$key2 === void 0 ? void 0 : _formData$config$key2.documentType) || null),
      dropdownValue = _useState4[0],
      setDropdownValue = _useState4[1];

  var dropdownData = [];
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(stateId, "PropertyTax", "MutationDocuments"),
      Documentsob = _Digit$Hooks$pt$useMD.data;

  var docs = Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.MutationDocuments;
  var transferReason = Array.isArray(docs) && docs.filter(function (doc) {
    return doc.code.includes("OWNER.TRANSFERREASONDOCUMENT");
  });

  if (transferReason.length > 0) {
    var _transferReason$;

    dropdownData = (_transferReason$ = transferReason[0]) === null || _transferReason$ === void 0 ? void 0 : _transferReason$.dropdownData.filter(function (e) {
      var _formData$additionalD, _formData$additionalD2;

      return e.code.includes(formData === null || formData === void 0 ? void 0 : (_formData$additionalD = formData.additionalDetails) === null || _formData$additionalD === void 0 ? void 0 : (_formData$additionalD2 = _formData$additionalD.reasonForTransfer) === null || _formData$additionalD2 === void 0 ? void 0 : _formData$additionalD2.code);
    });
    dropdownData.forEach(function (data) {
      data.i18nKey = stringReplaceAll(data.code, ".", "_");
    });
  }

  function setTypeOfDropdownValue(dropdownValue) {
    setDropdownValue(dropdownValue);
  }

  var handleSubmit = function handleSubmit() {
    var fileStoreId = uploadedFile;
    var fileDetails = {
      fileStoreId: fileStoreId,
      documentType: dropdownValue
    };
    onSelect(config.key, fileDetails, "", index);
  };

  var onSkip = function onSkip() {
    return onSelect();
  };

  function selectfile(e) {
    setFile(e.target.files[0]);
  }

  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 2000000) {
                setError(t("PT_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("property-upload", file, Digit.ULBService.getStateId())).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("PT_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);
  return /*#__PURE__*/React.createElement(FormStep, {
    config: config,
    onSelect: handleSubmit,
    onSkip: onSkip,
    t: t,
    isDisabled: !uploadedFile || !dropdownValue || error
  }, /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_TYPES")), /*#__PURE__*/React.createElement(CardLabelDesc, null, t("PT_UPLOAD_RESTRICTIONS_SIZE")), /*#__PURE__*/React.createElement(CardLabel, null, "" + t("PT_CATEGORY_DOCUMENT_TYPE")), /*#__PURE__*/React.createElement(Dropdown, {
    t: t,
    isMandatory: false,
    option: dropdownData,
    selected: dropdownValue,
    optionKey: "i18nKey",
    select: setTypeOfDropdownValue,
    placeholder: t("PT_MUTATION_SELECT_DOC_LABEL")
  }), /*#__PURE__*/React.createElement(UploadFile, {
    extraStyleName: "propertyCreate",
    accept: ".jpg,.png,.pdf",
    onUpload: selectfile,
    onDelete: function onDelete() {
      setUploadedFile(null);
    },
    message: uploadedFile ? "1 " + t("PT_ACTION_FILEUPLOADED") : t("PT_ACTION_NO_FILEUPLOADED"),
    error: error
  }), error ? /*#__PURE__*/React.createElement("div", {
    style: {
      height: "20px",
      width: "100%",
      fontSize: "20px",
      color: "red",
      marginTop: "5px"
    }
  }, error) : "", /*#__PURE__*/React.createElement("div", {
    style: {
      disabled: "true",
      height: "20px",
      width: "100%"
    }
  }));
};

var ApplicationTable = function ApplicationTable(_ref) {
  var t = _ref.t,
      currentPage = _ref.currentPage,
      columns = _ref.columns,
      data = _ref.data,
      getCellProps = _ref.getCellProps,
      disableSort = _ref.disableSort,
      onSort = _ref.onSort,
      onNextPage = _ref.onNextPage,
      onPrevPage = _ref.onPrevPage,
      onPageSizeChange = _ref.onPageSizeChange,
      pageSizeLimit = _ref.pageSizeLimit,
      sortParams = _ref.sortParams,
      totalRecords = _ref.totalRecords;
  return /*#__PURE__*/React.createElement(Table, {
    t: t,
    data: data,
    currentPage: currentPage,
    columns: columns,
    getCellProps: getCellProps,
    onNextPage: onNextPage,
    onPrevPage: onPrevPage,
    pageSizeLimit: pageSizeLimit,
    disableSort: disableSort,
    onPageSizeChange: onPageSizeChange,
    onSort: onSort,
    sortParams: sortParams,
    totalRecords: totalRecords
  });
};

var InboxLinks = function InboxLinks(_ref) {
  var businessService = _ref.businessService;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var allLinks = [{
    text: "ES_TITLE_NEW_REGISTRATION",
    link: "/digit-ui/employee/pt/new-application",
    businessService: "PT",
    roles: ["PT_CEMP"]
  }, {
    text: "PT_SEARCH_PROPERTY",
    link: "/digit-ui/employee/pt/search",
    businessService: "PT",
    roles: []
  }];

  var _useState = useState([]),
      links = _useState[0],
      setLinks = _useState[1];

  var userRoles = Digit.UserService.getUser().info.roles;
  useEffect(function () {
    var linksToShow = allLinks.filter(function (e) {
      return e.businessService === businessService;
    }).filter(function (_ref2) {
      var roles = _ref2.roles;
      return roles.some(function (e) {
        return userRoles.map(function (_ref3) {
          var code = _ref3.code;
          return code;
        }).includes(e);
      }) || !(roles !== null && roles !== void 0 && roles.length);
    });
    setLinks(linksToShow);
  }, []);

  var GetLogo = function GetLogo() {
    return /*#__PURE__*/React.createElement("div", {
      className: "header"
    }, /*#__PURE__*/React.createElement("span", {
      className: "logo"
    }, /*#__PURE__*/React.createElement(PropertyHouse, null)), " ", /*#__PURE__*/React.createElement("span", {
      className: "text"
    }, t("ES_TITLE_PROPERTY_TAX")));
  };

  return (
    /*#__PURE__*/
    React.createElement(Card, {
      className: "employeeCard filter inboxLinks"
    }, /*#__PURE__*/React.createElement("div", {
      className: "complaint-links-container"
    }, GetLogo(), /*#__PURE__*/React.createElement("div", {
      className: "body"
    }, links.map(function (_ref4, index) {
      var link = _ref4.link,
          text = _ref4.text,
          _ref4$hyperlink = _ref4.hyperlink,
          hyperlink = _ref4$hyperlink === void 0 ? false : _ref4$hyperlink;
      return /*#__PURE__*/React.createElement("span", {
        className: "link",
        key: index
      }, hyperlink ? /*#__PURE__*/React.createElement("a", {
        href: link
      }, text) : /*#__PURE__*/React.createElement(Link, {
        to: link
      }, t(text)));
    }))))
  );
};

var fieldComponents = {
  date: DatePicker,
  mobileNumber: MobileNumber,
  Locality: function Locality(props) {
    return /*#__PURE__*/React.createElement(Localities, {
      tenantId: Digit.ULBService.getCurrentTenantId(),
      selectLocality: props.onChange,
      keepNull: false,
      boundaryType: "revenue",
      selected: props.value,
      disableLoader: true,
      sortFn: function sortFn(a, b) {
        return a.i18nkey < b.i18nkey ? -1 : 1;
      }
    });
  }
};

var SearchApplication = function SearchApplication(_ref) {
  var _searchFields$filter;

  var onSearch = _ref.onSearch,
      type = _ref.type,
      onClose = _ref.onClose,
      searchFields = _ref.searchFields,
      searchParams = _ref.searchParams,
      isInboxPage = _ref.isInboxPage,
      _clearSearch = _ref.clearSearch;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useForm = useForm({
    defaultValues: isInboxPage ? searchParams : _extends({
      locality: null,
      city: null
    }, searchParams)
  }),
      handleSubmit = _useForm.handleSubmit,
      reset = _useForm.reset,
      watch = _useForm.watch,
      control = _useForm.control,
      setError = _useForm.setError,
      clearErrors = _useForm.clearErrors,
      formState = _useForm.formState,
      setValue = _useForm.setValue;

  var form = watch();

  var formValueEmpty = function formValueEmpty() {
    var _form$locality;

    var isEmpty = true;
    Object.keys(form).forEach(function (key) {
      if (!["locality", "city"].includes(key) && form[key]) isEmpty = false;
    });
    if (searchFields !== null && searchFields !== void 0 && searchFields.find(function (e) {
      return e.name === "locality";
    }) && !(form !== null && form !== void 0 && (_form$locality = form.locality) !== null && _form$locality !== void 0 && _form$locality.code)) isEmpty = true;
    return isEmpty;
  };

  var mobileView = innerWidth <= 640;
  useEffect(function () {
    searchFields.forEach(function (_ref2) {
      var pattern = _ref2.pattern,
          name = _ref2.name,
          maxLength = _ref2.maxLength,
          minLength = _ref2.minLength,
          errorMessages = _ref2.errorMessages,
          el = _objectWithoutPropertiesLoose(_ref2, ["pattern", "name", "maxLength", "minLength", "errorMessages"]);

      var value = form[name];
      var error = formState.errors[name];

      if (pattern) {
        if (!new RegExp(pattern).test(value) && !error) setError(name, {
          type: "pattern",
          message: t(errorMessages === null || errorMessages === void 0 ? void 0 : errorMessages.pattern) || t("PATTERN_" + name.toUpperCase() + "_FAILED")
        });else if (new RegExp(pattern).test(value) && (error === null || error === void 0 ? void 0 : error.type) === "pattern") clearErrors([name]);
      }

      if (minLength) {
        if ((value === null || value === void 0 ? void 0 : value.length) < minLength && !error) setError(name, {
          type: "minLength",
          message: t((errorMessages === null || errorMessages === void 0 ? void 0 : errorMessages.minLength) || "MINLENGTH_" + name.toUpperCase() + "_FAILED")
        });else if ((value === null || value === void 0 ? void 0 : value.length) >= minLength && (error === null || error === void 0 ? void 0 : error.type) === "minLength") clearErrors([name]);
      }

      if (maxLength) {
        if ((value === null || value === void 0 ? void 0 : value.length) > maxLength && !error) setError(name, {
          type: "maxLength",
          message: t((errorMessages === null || errorMessages === void 0 ? void 0 : errorMessages.maxLength) || "MAXLENGTH_" + name.toUpperCase() + "_FAILED")
        });else if ((value === null || value === void 0 ? void 0 : value.length) <= maxLength && (error === null || error === void 0 ? void 0 : error.type) === "maxLength") clearErrors([name]);
      }
    });
  }, [form, formState, setError, clearErrors]);

  var onSubmitInput = function onSubmitInput(data) {
    if (!data.mobileNumber) {
      delete data.mobileNumber;
    }

    data.delete = [];
    searchFields.forEach(function (field) {
      if (!data[field.name]) data.delete.push(field.name);
    });
    onSearch(data);

    if (type === "mobile") {
      onClose();
    }
  };

  function clearSearch() {
    var resetValues = searchFields.reduce(function (acc, field) {
      var _extends2;

      return _extends({}, acc, (_extends2 = {}, _extends2[field === null || field === void 0 ? void 0 : field.name] = "", _extends2));
    }, {});
    reset(resetValues);

    if (isInboxPage) {
      var _newParams = _extends({}, searchParams);

      _newParams.delete = [];
      searchFields.forEach(function (e) {
        _newParams.delete.push(e === null || e === void 0 ? void 0 : e.name);
      });
      onSearch(_extends({}, _newParams));
    } else {
      _clearSearch();
    }
  }

  var clearAll = function clearAll(mobileView) {
    var mobileViewStyles = mobileView ? {
      margin: 0
    } : {};
    return /*#__PURE__*/React.createElement(LinkLabel, {
      style: _extends({
        display: "inline"
      }, mobileViewStyles),
      onClick: clearSearch
    }, t("ES_COMMON_CLEAR_SEARCH"));
  };

  return /*#__PURE__*/React.createElement("form", {
    onSubmit: handleSubmit(onSubmitInput)
  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "search-container",
    style: {
      width: "auto",
      marginLeft: isInboxPage ? "24px" : "revert"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "search-complaint-container"
  }, (type === "mobile" || mobileView) && /*#__PURE__*/React.createElement("div", {
    className: "complaint-header"
  }, /*#__PURE__*/React.createElement("h2", null, t("ES_COMMON_SEARCH_BY")), /*#__PURE__*/React.createElement("span", {
    onClick: onClose
  }, /*#__PURE__*/React.createElement(CloseSvg, null))), /*#__PURE__*/React.createElement("div", {
    className: "complaint-input-container for-pt " + (!isInboxPage ? "for-search" : ""),
    style: {
      width: "100%"
    }
  }, searchFields === null || searchFields === void 0 ? void 0 : (_searchFields$filter = searchFields.filter(function (e) {
    return true;
  })) === null || _searchFields$filter === void 0 ? void 0 : _searchFields$filter.map(function (input, index) {
    var _formState$dirtyField, _formState$errors, _formState$errors$inp;

    return /*#__PURE__*/React.createElement("div", {
      key: input.name,
      className: "input-fields"
    }, /*#__PURE__*/React.createElement("span", {
      className: "mobile-input"
    }, /*#__PURE__*/React.createElement(Label, null, t(input.label) + (" " + (input.isMendatory ? "*" : ""))), !input.type ? /*#__PURE__*/React.createElement(Controller, {
      render: function render(props) {
        return /*#__PURE__*/React.createElement(TextInput, {
          onChange: props.onChange,
          value: props.value
        });
      },
      name: input.name,
      control: control,
      defaultValue: ""
    }) : /*#__PURE__*/React.createElement(Controller, {
      render: function render(props) {
        var Comp = fieldComponents === null || fieldComponents === void 0 ? void 0 : fieldComponents[input.type];
        return /*#__PURE__*/React.createElement(Comp, {
          formValue: form,
          setValue: setValue,
          onChange: props.onChange,
          value: props.value
        });
      },
      name: input.name,
      control: control,
      defaultValue: ""
    })), formState !== null && formState !== void 0 && (_formState$dirtyField = formState.dirtyFields) !== null && _formState$dirtyField !== void 0 && _formState$dirtyField[input.name] ? /*#__PURE__*/React.createElement("span", {
      style: {
        fontWeight: "700",
        color: "rgba(212, 53, 28)",
        paddingLeft: "8px",
        marginTop: "-20px",
        fontSize: "12px"
      },
      className: "inbox-search-form-error"
    }, formState === null || formState === void 0 ? void 0 : (_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$inp = _formState$errors[input.name]) === null || _formState$errors$inp === void 0 ? void 0 : _formState$errors$inp.message) : null);
  }), isInboxPage && /*#__PURE__*/React.createElement("div", {
    style: {
      gridColumn: "2/3",
      textAlign: "right",
      paddingTop: "10px"
    },
    className: "input-fields"
  }, /*#__PURE__*/React.createElement("div", null, clearAll())), type === "desktop" && !mobileView && /*#__PURE__*/React.createElement("div", {
    style: {
      maxWidth: "unset",
      marginLeft: "unset"
    },
    className: "search-submit-wrapper"
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    className: "submit-bar-search",
    label: t("ES_COMMON_SEARCH"),
    disabled: !!Object.keys(formState.errors).length || formValueEmpty(),
    submit: true
  }), !isInboxPage && /*#__PURE__*/React.createElement("div", null, clearAll()))))), (type === "mobile" || mobileView) && /*#__PURE__*/React.createElement(ActionBar, {
    className: "clear-search-container"
  }, /*#__PURE__*/React.createElement("button", {
    className: "clear-search",
    style: {
      flex: 1
    }
  }, clearAll(mobileView)), /*#__PURE__*/React.createElement(SubmitBar, {
    disabled: !!Object.keys(formState.errors).length,
    label: t("ES_COMMON_SEARCH"),
    style: {
      flex: 1
    },
    submit: true
  }))));
};

var DesktopInbox = function DesktopInbox(_ref) {
  var tableConfig = _ref.tableConfig,
      filterComponent = _ref.filterComponent,
      props = _objectWithoutPropertiesLoose(_ref, ["tableConfig", "filterComponent"]);

  var data = props.data,
      useNewInboxAPI = props.useNewInboxAPI;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(function () {
    var _Digit$ComponentRegis;

    return (_Digit$ComponentRegis = Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent(filterComponent);
  }),
      FilterComponent = _useState[0];

  var _useState2 = useState(function () {
    var _Digit$ComponentRegis2;

    var com = (_Digit$ComponentRegis2 = Digit.ComponentRegistryService) === null || _Digit$ComponentRegis2 === void 0 ? void 0 : _Digit$ComponentRegis2.getComponent(props.EmptyResultInboxComp);
    return com;
  }),
      EmptyInboxComp = _useState2[0];

  var _useState3 = useState(false),
      clearSearchCalled = _useState3[0],
      setClearSearchCalled = _useState3[1];

  var columns = React.useMemo(function () {
    return props.isSearch ? tableConfig.searchColumns(props) : tableConfig.inboxColumns(props) || [];
  }, []);
  var result;

  if (props.isLoading) {
    result = /*#__PURE__*/React.createElement(Loader, null);
  } else if (clearSearchCalled) {
    result = null;
  } else if (!data || (data === null || data === void 0 ? void 0 : data.length) === 0 || useNewInboxAPI && data !== null && data !== void 0 && data[0].dataEmpty) {
    result = EmptyInboxComp && /*#__PURE__*/React.createElement(EmptyInboxComp, {
      data: data
    }) || ((data === null || data === void 0 ? void 0 : data.length) === 0 || useNewInboxAPI && data !== null && data !== void 0 && data[0].dataEmpty ? /*#__PURE__*/React.createElement(Card, {
      style: {
        marginTop: 20
      }
    }, t("CS_MYAPPLICATIONS_NO_APPLICATION").split("\\n").map(function (text, index) {
      return /*#__PURE__*/React.createElement("p", {
        key: index,
        style: {
          textAlign: "center"
        }
      }, text);
    })) : /*#__PURE__*/React.createElement(Loader, null));
  } else if ((data === null || data === void 0 ? void 0 : data.length) > 0) {
    var _React$createElement;

    result = /*#__PURE__*/React.createElement(ApplicationTable, (_React$createElement = {
      t: t,
      data: data,
      columns: columns,
      getCellProps: function getCellProps(cellInfo) {
        return {
          style: {
            minWidth: cellInfo.column.Header === t("ES_INBOX_APPLICATION_NO") ? "240px" : "",
            padding: "20px 18px",
            fontSize: "16px"
          }
        };
      },
      onPageSizeChange: props.onPageSizeChange,
      currentPage: props.currentPage,
      onNextPage: props.onNextPage,
      onPrevPage: props.onPrevPage,
      pageSizeLimit: props.pageSizeLimit,
      onSort: props.onSort,
      disableSort: props.disableSort
    }, _React$createElement["onPageSizeChange"] = props.onPageSizeChange, _React$createElement.sortParams = props.sortParams, _React$createElement.totalRecords = props.totalRecords, _React$createElement));
  }

  return /*#__PURE__*/React.createElement("div", {
    className: "inbox-container"
  }, !props.isSearch && /*#__PURE__*/React.createElement("div", {
    className: "filters-container"
  }, /*#__PURE__*/React.createElement(InboxLinks, {
    parentRoute: props.parentRoute,
    businessService: props.moduleCode
  }), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(FilterComponent, {
    defaultSearchParams: props.defaultSearchParams,
    onFilterChange: props.onFilterChange,
    searchParams: props.searchParams,
    type: "desktop",
    useNewInboxAPI: useNewInboxAPI,
    statusMap: useNewInboxAPI ? data === null || data === void 0 ? void 0 : data[0].statusMap : null,
    moduleCode: props.moduleCode
  }))), /*#__PURE__*/React.createElement("div", {
    style: {
      flex: 1
    }
  }, /*#__PURE__*/React.createElement(SearchApplication, {
    defaultSearchParams: props.defaultSearchParams,
    onSearch: function onSearch(d) {
      props.onSearch(d);
      setClearSearchCalled(false);
    },
    type: "desktop",
    searchFields: props.searchFields,
    isInboxPage: !(props !== null && props !== void 0 && props.isSearch),
    searchParams: props.searchParams,
    clearSearch: function clearSearch() {
      return setClearSearchCalled(true);
    }
  }), /*#__PURE__*/React.createElement("div", {
    className: "result",
    style: {
      marginLeft: !(props !== null && props !== void 0 && props.isSearch) ? "24px" : "",
      flex: 1
    }
  }, result)));
};

var SortBy = function SortBy(props) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(function () {
    var _props$sortParams, _props$sortParams$;

    return (_props$sortParams = props.sortParams) !== null && _props$sortParams !== void 0 && (_props$sortParams$ = _props$sortParams[0]) !== null && _props$sortParams$ !== void 0 && _props$sortParams$.desc ? {
      code: "DESC",
      name: t("ES_INBOX_DATE_LATEST_FIRST")
    } : {
      code: "ASC",
      name: t("ES_INBOX_DATE_LATEST_LAST")
    };
  }),
      selectedOption = _useState[0];

  function clearAll() {}

  function onSort(option) {
    props.onSort([{
      id: "createdTime",
      desc: option.code === "DESC" ? true : false
    }]);
    props.onClose();
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "filter"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-card"
  }, /*#__PURE__*/React.createElement("div", {
    className: "heading"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-label"
  }, t("SORT_BY"), ":"), /*#__PURE__*/React.createElement("div", {
    className: "clearAll",
    onClick: clearAll
  }, t("ES_COMMON_CLEAR_ALL")), props.type === "desktop" && /*#__PURE__*/React.createElement("span", {
    className: "clear-search",
    onClick: clearAll
  }, t("ES_COMMON_CLEAR_ALL")), props.type === "mobile" && /*#__PURE__*/React.createElement("span", {
    onClick: props.onClose
  }, /*#__PURE__*/React.createElement(CloseSvg, null))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    onSelect: onSort,
    selectedOption: selectedOption,
    optionsKey: "name",
    options: [{
      code: "DESC",
      name: t("ES_INBOX_DATE_LATEST_FIRST")
    }, {
      code: "ASC",
      name: t("ES_INBOX_DATE_LATEST_LAST")
    }]
  })))));
};

var ApplicationCard = function ApplicationCard(_ref) {
  var _React$createElement;

  var t = _ref.t,
      data = _ref.data,
      onFilterChange = _ref.onFilterChange,
      onSearch = _ref.onSearch,
      onSort = _ref.onSort,
      serviceRequestIdKey = _ref.serviceRequestIdKey,
      isFstpOperator = _ref.isFstpOperator,
      isLoading = _ref.isLoading,
      isSearch = _ref.isSearch,
      searchParams = _ref.searchParams,
      searchFields = _ref.searchFields,
      sortParams = _ref.sortParams,
      linkPrefix = _ref.linkPrefix,
      filterComponent = _ref.filterComponent;

  var _useState = useState(isSearch ? "SEARCH" : ""),
      type = _useState[0],
      setType = _useState[1];

  var _useState2 = useState(isSearch ? true : false),
      popup = _useState2[0],
      setPopup = _useState2[1];

  var _useState3 = useState(sortParams),
      setSortParams = _useState3[1];

  var _useState4 = useState(function () {
    var _Digit$ComponentRegis;

    return (_Digit$ComponentRegis = Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent(filterComponent);
  }),
      FilterComp = _useState4[0];

  var onSearchFilter = function onSearchFilter(params) {
    onFilterChange(params);
    setPopup(false);
  };

  useEffect(function () {
    if (type) setPopup(true);
  }, [type]);

  var handlePopupClose = function handlePopupClose() {
    setPopup(false);
    setType("");
    setSortParams(sortParams);
  };

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  var result;

  if (!data || (data === null || data === void 0 ? void 0 : data.length) === 0) {
    result = /*#__PURE__*/React.createElement(Card, {
      style: {
        marginTop: 20
      }
    }, t("CS_MYAPPLICATIONS_NO_APPLICATION").split("\\n").map(function (text, index) {
      return /*#__PURE__*/React.createElement("p", {
        key: index,
        style: {
          textAlign: "center"
        }
      }, text);
    }));
  } else if (data && (data === null || data === void 0 ? void 0 : data.length) > 0) {
    result = /*#__PURE__*/React.createElement(DetailsCard, {
      data: data,
      serviceRequestIdKey: serviceRequestIdKey,
      linkPrefix: linkPrefix ? linkPrefix : "/digit-ui/employee/pt/"
    });
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "searchBox"
  }, onSearch && /*#__PURE__*/React.createElement(SearchAction, {
    text: "SEARCH",
    handleActionClick: function handleActionClick() {
      setType("SEARCH");
      setPopup(true);
    }
  }), !isSearch && onFilterChange && /*#__PURE__*/React.createElement(FilterAction, {
    text: "FILTER",
    handleActionClick: function handleActionClick() {
      setType("FILTER");
      setPopup(true);
    }
  }), /*#__PURE__*/React.createElement(FilterAction, {
    text: "SORT",
    handleActionClick: function handleActionClick() {
      setType("SORT");
      setPopup(true);
    }
  })), result, popup && /*#__PURE__*/React.createElement(PopUp, null, type === "FILTER" && /*#__PURE__*/React.createElement("div", {
    className: "popup-module"
  }, /*#__PURE__*/React.createElement(FilterComp, {
    onFilterChange: onSearchFilter,
    Close: handlePopupClose,
    type: "mobile",
    searchParams: searchParams
  })), type === "SORT" && /*#__PURE__*/React.createElement("div", {
    className: "popup-module"
  }, /*#__PURE__*/React.createElement(SortBy, (_React$createElement = {
    type: "mobile",
    sortParams: sortParams,
    onClose: handlePopupClose
  }, _React$createElement["type"] = "mobile", _React$createElement.onSort = onSort, _React$createElement))), type === "SEARCH" && /*#__PURE__*/React.createElement("div", {
    className: "popup-module"
  }, /*#__PURE__*/React.createElement(SearchApplication, {
    type: "mobile",
    onClose: handlePopupClose,
    onSearch: onSearch,
    isFstpOperator: isFstpOperator,
    searchParams: searchParams,
    searchFields: searchFields
  }))));
};

var ApplicationLinks = function ApplicationLinks(_ref) {
  var linkPrefix = _ref.linkPrefix;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var allLinks = [{
    text: t("ES_TITLE_NEW_REGISTRATION"),
    link: "/digit-ui/employee/pt/new-application"
  }, {
    text: t("ES_TITILE_SEARCH_APPLICATION"),
    link: linkPrefix + "/search"
  }];

  var _useState = useState([]),
      links = _useState[0],
      setLinks = _useState[1];

  var roles = Digit.UserService.getUser().info.roles;

  var hasAccess = function hasAccess(accessTo) {
    return roles.filter(function (role) {
      return accessTo.includes(role.code);
    }).length;
  };

  useEffect(function () {
    var linksToShow = [];
    allLinks.forEach(function (link) {
      if (link.accessTo) {
        if (hasAccess(link.accessTo)) {
          linksToShow.push(link);
        }
      } else {
        linksToShow.push(link);
      }
    });
    setLinks(linksToShow);
  }, []);

  var GetLogo = function GetLogo() {
    return /*#__PURE__*/React.createElement("div", {
      className: "header"
    }, /*#__PURE__*/React.createElement("span", {
      className: "logo"
    }, /*#__PURE__*/React.createElement(ShippingTruck, null)), " ", /*#__PURE__*/React.createElement("span", {
      className: "text"
    }, t("ES_TITLE_PROPERTY_TAX")));
  };

  return /*#__PURE__*/React.createElement(Card, {
    className: "employeeCard filter"
  }, /*#__PURE__*/React.createElement("div", {
    className: "complaint-links-container"
  }, GetLogo(), /*#__PURE__*/React.createElement("div", {
    className: "body"
  }, links.map(function (_ref2, index) {
    var link = _ref2.link,
        text = _ref2.text;
    return /*#__PURE__*/React.createElement("span", {
      className: "link",
      key: index
    }, /*#__PURE__*/React.createElement(Link, {
      to: link
    }, text));
  }))));
};

var MobileInbox = function MobileInbox(_ref) {
  var data = _ref.data,
      isLoading = _ref.isLoading,
      isSearch = _ref.isSearch,
      searchFields = _ref.searchFields,
      onFilterChange = _ref.onFilterChange,
      onSearch = _ref.onSearch,
      onSort = _ref.onSort,
      parentRoute = _ref.parentRoute,
      searchParams = _ref.searchParams,
      sortParams = _ref.sortParams,
      linkPrefix = _ref.linkPrefix,
      tableConfig = _ref.tableConfig,
      filterComponent = _ref.filterComponent;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var getData = function getData() {
    return data === null || data === void 0 ? void 0 : data.map(function (dataObj) {
      var obj = {};
      var columns = isSearch ? tableConfig.searchColumns() : tableConfig.inboxColumns();
      columns.forEach(function (el) {
        if (el.mobileCell) obj[el.Header] = el.mobileCell(dataObj);
      });
      return obj;
    });
  };

  return /*#__PURE__*/React.createElement("div", {
    style: {
      padding: 0
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "inbox-container"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filters-container"
  }, !isSearch && /*#__PURE__*/React.createElement(ApplicationLinks, {
    linkPrefix: parentRoute,
    isMobile: true
  }), /*#__PURE__*/React.createElement(ApplicationCard, {
    t: t,
    data: getData(),
    onFilterChange: onFilterChange,
    isLoading: isLoading,
    isSearch: isSearch,
    onSearch: onSearch,
    onSort: onSort,
    searchParams: searchParams,
    searchFields: searchFields,
    linkPrefix: linkPrefix,
    sortParams: sortParams,
    serviceRequestIdKey: tableConfig.serviceRequestIdKey,
    filterComponent: filterComponent
  }))));
};

var Inbox = function Inbox(_ref) {
  var _sortParams$, _sortParams$2, _sortParams$3, _sortParams$4, _rest$data;

  var useNewInboxAPI = _ref.useNewInboxAPI,
      parentRoute = _ref.parentRoute,
      _ref$moduleCode = _ref.moduleCode,
      moduleCode = _ref$moduleCode === void 0 ? "PT" : _ref$moduleCode,
      _ref$initialStates = _ref.initialStates,
      initialStates = _ref$initialStates === void 0 ? {} : _ref$initialStates,
      filterComponent = _ref.filterComponent,
      isInbox = _ref.isInbox,
      rawWfHandler = _ref.rawWfHandler,
      rawSearchHandler = _ref.rawSearchHandler,
      combineResponse = _ref.combineResponse,
      wfConfig = _ref.wfConfig,
      searchConfig = _ref.searchConfig,
      middlewaresWf = _ref.middlewaresWf,
      middlewareSearch = _ref.middlewareSearch,
      EmptyResultInboxComp = _ref.EmptyResultInboxComp;
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(function () {
    return isInbox ? {} : {
      enabled: false
    };
  }),
      enableSarch = _useState[0],
      setEnableSearch = _useState[1];

  var _useState2 = useState(function () {
    var _Digit$ComponentRegis;

    return (_Digit$ComponentRegis = Digit.ComponentRegistryService) === null || _Digit$ComponentRegis === void 0 ? void 0 : _Digit$ComponentRegis.getComponent("PTInboxTableConfig");
  }),
      TableConfig = _useState2[0];

  var _useState3 = useState(initialStates.pageOffset || 0),
      pageOffset = _useState3[0],
      setPageOffset = _useState3[1];

  var _useState4 = useState(initialStates.pageSize || 10),
      pageSize = _useState4[0],
      setPageSize = _useState4[1];

  var _useState5 = useState(initialStates.sortParams || [{
    id: "createdTime",
    desc: false
  }]),
      sortParams = _useState5[0],
      setSortParams = _useState5[1];

  var _useState6 = useState(initialStates.searchParams || {}),
      searchParams = _useState6[0],
      setSearchParams = _useState6[1];

  var isMobile = window.Digit.Utils.browser.isMobile();
  var paginationParams = isMobile ? {
    limit: 100,
    offset: 0,
    sortBy: sortParams === null || sortParams === void 0 ? void 0 : (_sortParams$ = sortParams[0]) === null || _sortParams$ === void 0 ? void 0 : _sortParams$.id,
    sortOrder: sortParams !== null && sortParams !== void 0 && (_sortParams$2 = sortParams[0]) !== null && _sortParams$2 !== void 0 && _sortParams$2.desc ? "DESC" : "ASC"
  } : {
    limit: pageSize,
    offset: pageOffset,
    sortBy: sortParams === null || sortParams === void 0 ? void 0 : (_sortParams$3 = sortParams[0]) === null || _sortParams$3 === void 0 ? void 0 : _sortParams$3.id,
    sortOrder: sortParams !== null && sortParams !== void 0 && (_sortParams$4 = sortParams[0]) !== null && _sortParams$4 !== void 0 && _sortParams$4.desc ? "DESC" : "ASC"
  };

  var _ref2 = useNewInboxAPI ? Digit.Hooks.useNewInboxGeneral({
    tenantId: tenantId,
    ModuleCode: moduleCode,
    filters: _extends({}, searchParams, paginationParams, {
      sortParams: sortParams
    })
  }) : Digit.Hooks.useInboxGeneral({
    tenantId: tenantId,
    businessService: moduleCode,
    isInbox: isInbox,
    filters: _extends({}, searchParams, paginationParams, {
      sortParams: sortParams
    }),
    rawWfHandler: rawWfHandler,
    rawSearchHandler: rawSearchHandler,
    combineResponse: combineResponse,
    wfConfig: wfConfig,
    searchConfig: _extends({}, enableSarch, searchConfig),
    middlewaresWf: middlewaresWf,
    middlewareSearch: middlewareSearch
  }),
      hookLoading = _ref2.isLoading,
      data = _ref2.data,
      searchFields = _ref2.searchFields,
      rest = _objectWithoutPropertiesLoose(_ref2, ["isFetching", "isLoading", "searchResponseKey", "data", "searchFields"]);

  useEffect(function () {
    setPageOffset(0);
  }, [searchParams]);

  var fetchNextPage = function fetchNextPage() {
    setPageOffset(function (prevState) {
      return prevState + pageSize;
    });
  };

  var fetchPrevPage = function fetchPrevPage() {
    setPageOffset(function (prevState) {
      return prevState - pageSize;
    });
  };

  var handleFilterChange = function handleFilterChange(filterParam) {
    var keys_to_delete = filterParam.delete;

    var _new = _extends({}, searchParams, filterParam);

    if (keys_to_delete) keys_to_delete.forEach(function (key) {
      return delete _new[key];
    });
    delete filterParam.delete;
    setSearchParams(_extends({}, _new));
    setEnableSearch({
      enabled: true
    });
  };

  var handleSort = useCallback(function (args) {
    if (args.length === 0) return;
    setSortParams(args);
  }, []);

  var handlePageSizeChange = function handlePageSizeChange(e) {
    setPageSize(Number(e.target.value));
  };

  if ((rest === null || rest === void 0 ? void 0 : (_rest$data = rest.data) === null || _rest$data === void 0 ? void 0 : _rest$data.length) !== null) {
    if (isMobile) {
      return /*#__PURE__*/React.createElement(MobileInbox, {
        data: data,
        isLoading: hookLoading,
        isSearch: !isInbox,
        searchFields: searchFields,
        onFilterChange: handleFilterChange,
        onSearch: handleFilterChange,
        onSort: handleSort,
        parentRoute: parentRoute,
        searchParams: searchParams,
        sortParams: sortParams,
        linkPrefix: parentRoute + "/application-details/",
        tableConfig: rest === null || rest === void 0 ? void 0 : rest.tableConfig,
        filterComponent: filterComponent,
        EmptyResultInboxComp: EmptyResultInboxComp,
        useNewInboxAPI: useNewInboxAPI
      });
    } else {
      var _data$;

      return /*#__PURE__*/React.createElement("div", null, isInbox && /*#__PURE__*/React.createElement(Header, null, t("ES_COMMON_INBOX")), /*#__PURE__*/React.createElement(DesktopInbox, {
        moduleCode: moduleCode,
        data: data,
        tableConfig: TableConfig(t)["PT"],
        isLoading: hookLoading,
        defaultSearchParams: initialStates.searchParams,
        isSearch: !isInbox,
        onFilterChange: handleFilterChange,
        searchFields: searchFields,
        onSearch: handleFilterChange,
        onSort: handleSort,
        onNextPage: fetchNextPage,
        onPrevPage: fetchPrevPage,
        currentPage: Math.floor(pageOffset / pageSize),
        pageSizeLimit: pageSize,
        disableSort: false,
        onPageSizeChange: handlePageSizeChange,
        parentRoute: parentRoute,
        searchParams: searchParams,
        sortParams: sortParams,
        totalRecords: Number(data === null || data === void 0 ? void 0 : (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.totalCount),
        filterComponent: filterComponent,
        EmptyResultInboxComp: EmptyResultInboxComp,
        useNewInboxAPI: useNewInboxAPI
      }));
    }
  }
};

var NewApplication = function NewApplication() {
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var tenants = Digit.Hooks.pt.useTenants();

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(false),
      canSubmit = _useState[0],
      setSubmitValve = _useState[1];

  var defaultValues = {};
  var history = useHistory();

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false),
      setMutationHappened = _Digit$Hooks$useSessi[1];

  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", {}),
      clearSuccessData = _Digit$Hooks$useSessi2[2];

  useEffect(function () {
    setMutationHappened(false);
    clearSuccessData();
  }, []);

  var onFormValueChange = function onFormValueChange(setValue, formData, formState) {
    var _formState$errors, _formState$errors$uni, _formData$ownershipCa, _formData$ownershipCa2, _formData$owners, _formData$address;

    setSubmitValve(!Object.keys(formState.errors).length);

    if (Object.keys(formState.errors).length === 1 && ((_formState$errors = formState.errors) === null || _formState$errors === void 0 ? void 0 : (_formState$errors$uni = _formState$errors.units) === null || _formState$errors$uni === void 0 ? void 0 : _formState$errors$uni.message) === "arv") {
      setSubmitValve(!(formData !== null && formData !== void 0 && formData.units.some(function (unit) {
        return unit.occupancyType === "RENTED" && !unit.arv;
      })));
    }

    if (formData !== null && formData !== void 0 && (_formData$ownershipCa = formData.ownershipCategory) !== null && _formData$ownershipCa !== void 0 && (_formData$ownershipCa2 = _formData$ownershipCa.code) !== null && _formData$ownershipCa2 !== void 0 && _formData$ownershipCa2.includes("MULTIPLEOWNERS") && (formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.length) < 2) {
      setSubmitValve(false);
    }

    var pincode = formData === null || formData === void 0 ? void 0 : (_formData$address = formData.address) === null || _formData$address === void 0 ? void 0 : _formData$address.pincode;

    if (pincode) {
      if (!Digit.Utils.getPattern("Pincode").test(pincode)) setSubmitValve(false);
      var foundValue = tenants === null || tenants === void 0 ? void 0 : tenants.find(function (obj) {
        var _obj$pincode;

        return (_obj$pincode = obj.pincode) === null || _obj$pincode === void 0 ? void 0 : _obj$pincode.find(function (item) {
          return item.toString() === pincode;
        });
      });

      if (!foundValue) {
        setSubmitValve(false);
      }
    }
  };

  var onSubmit = function onSubmit(data) {
    var _data$address, _data$address$city, _data$address2, _data$address2$locali, _data$address3, _data$address3$locali, _data$usageCategoryMa, _data$usageCategoryMa2, _data$PropertyType, _data$ownershipCatego, _data$PropertyType2, _data$documents3, _data$ownershipCatego3;

    var formData = {
      tenantId: tenantId,
      address: _extends({}, data === null || data === void 0 ? void 0 : data.address, {
        city: data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$city = _data$address.city) === null || _data$address$city === void 0 ? void 0 : _data$address$city.name,
        locality: {
          code: data === null || data === void 0 ? void 0 : (_data$address2 = data.address) === null || _data$address2 === void 0 ? void 0 : (_data$address2$locali = _data$address2.locality) === null || _data$address2$locali === void 0 ? void 0 : _data$address2$locali.code,
          area: data === null || data === void 0 ? void 0 : (_data$address3 = data.address) === null || _data$address3 === void 0 ? void 0 : (_data$address3$locali = _data$address3.locality) === null || _data$address3$locali === void 0 ? void 0 : _data$address3$locali.area
        }
      }),
      usageCategory: data === null || data === void 0 ? void 0 : data.usageCategoryMajor.code,
      usageCategoryMajor: data === null || data === void 0 ? void 0 : (_data$usageCategoryMa = data.usageCategoryMajor) === null || _data$usageCategoryMa === void 0 ? void 0 : _data$usageCategoryMa.code.split(".")[0],
      usageCategoryMinor: (data === null || data === void 0 ? void 0 : (_data$usageCategoryMa2 = data.usageCategoryMajor) === null || _data$usageCategoryMa2 === void 0 ? void 0 : _data$usageCategoryMa2.code.split(".")[1]) || null,
      landArea: Number(data === null || data === void 0 ? void 0 : data.landarea),
      superBuiltUpArea: Number(data === null || data === void 0 ? void 0 : data.landarea),
      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType = data.PropertyType) === null || _data$PropertyType === void 0 ? void 0 : _data$PropertyType.code,
      noOfFloors: Number(data === null || data === void 0 ? void 0 : data.noOfFloors),
      ownershipCategory: data === null || data === void 0 ? void 0 : (_data$ownershipCatego = data.ownershipCategory) === null || _data$ownershipCatego === void 0 ? void 0 : _data$ownershipCatego.code,
      owners: data === null || data === void 0 ? void 0 : data.owners.map(function (owner) {
        var _data$ownershipCatego2, _owner$ownerType;

        var name = owner.name,
            mobileNumber = owner.mobileNumber,
            designation = owner.designation,
            altContactNumber = owner.altContactNumber,
            emailId = owner.emailId,
            correspondenceAddress = owner.correspondenceAddress,
            isCorrespondenceAddress = owner.isCorrespondenceAddress,
            ownerType = owner.ownerType,
            fatherOrHusbandName = owner.fatherOrHusbandName;

        var __owner;

        if (!(data !== null && data !== void 0 && (_data$ownershipCatego2 = data.ownershipCategory) !== null && _data$ownershipCatego2 !== void 0 && _data$ownershipCatego2.code.includes("INDIVIDUAL"))) {
          __owner = {
            name: name,
            mobileNumber: mobileNumber,
            designation: designation,
            altContactNumber: altContactNumber,
            emailId: emailId,
            correspondenceAddress: correspondenceAddress,
            isCorrespondenceAddress: isCorrespondenceAddress,
            ownerType: ownerType
          };
        } else {
          var _data$address4, _data$address4$locali;

          __owner = {
            name: name,
            mobileNumber: mobileNumber,
            correspondenceAddress: correspondenceAddress,
            permanentAddress: data === null || data === void 0 ? void 0 : (_data$address4 = data.address) === null || _data$address4 === void 0 ? void 0 : (_data$address4$locali = _data$address4.locality) === null || _data$address4$locali === void 0 ? void 0 : _data$address4$locali.name,
            relationship: owner === null || owner === void 0 ? void 0 : owner.relationship.code,
            fatherOrHusbandName: fatherOrHusbandName,
            gender: owner === null || owner === void 0 ? void 0 : owner.gender.code,
            emailId: emailId
          };
        }

        if (!__owner.correspondenceAddress) __owner.correspondenceAddress = "";

        var _owner = _extends({}, __owner, {
          ownerType: owner === null || owner === void 0 ? void 0 : (_owner$ownerType = owner.ownerType) === null || _owner$ownerType === void 0 ? void 0 : _owner$ownerType.code
        });

        if (_owner.ownerType !== "NONE") {
          var _data$documents, _data$documents$docum;

          var _owner$documents = owner === null || owner === void 0 ? void 0 : owner.documents,
              documentType = _owner$documents.documentType,
              documentUid = _owner$documents.documentUid;

          _owner.documents = [{
            documentUid: documentUid,
            documentType: documentType.code,
            fileStoreId: documentUid
          }, data === null || data === void 0 ? void 0 : (_data$documents = data.documents) === null || _data$documents === void 0 ? void 0 : (_data$documents$docum = _data$documents.documents) === null || _data$documents$docum === void 0 ? void 0 : _data$documents$docum.find(function (e) {
            var _e$documentType;

            return (_e$documentType = e.documentType) === null || _e$documentType === void 0 ? void 0 : _e$documentType.includes("OWNER.IDENTITYPROOF");
          })];
        } else {
          var _data$documents2, _data$documents2$docu;

          _owner.documents = [data === null || data === void 0 ? void 0 : (_data$documents2 = data.documents) === null || _data$documents2 === void 0 ? void 0 : (_data$documents2$docu = _data$documents2.documents) === null || _data$documents2$docu === void 0 ? void 0 : _data$documents2$docu.find(function (e) {
            var _e$documentType2;

            return (_e$documentType2 = e.documentType) === null || _e$documentType2 === void 0 ? void 0 : _e$documentType2.includes("OWNER.IDENTITYPROOF");
          })];
        }

        return _owner;
      }),
      channel: "CFC_COUNTER",
      creationReason: "CREATE",
      source: "MUNICIPAL_RECORDS",
      units: (data === null || data === void 0 ? void 0 : (_data$PropertyType2 = data.PropertyType) === null || _data$PropertyType2 === void 0 ? void 0 : _data$PropertyType2.code) !== "VACANT" ? data === null || data === void 0 ? void 0 : data.units : [],
      documents: data === null || data === void 0 ? void 0 : (_data$documents3 = data.documents) === null || _data$documents3 === void 0 ? void 0 : _data$documents3.documents,
      applicationStatus: "CREATE"
    };

    if (!(data !== null && data !== void 0 && (_data$ownershipCatego3 = data.ownershipCategory) !== null && _data$ownershipCatego3 !== void 0 && _data$ownershipCatego3.code.includes("INDIVIDUAL"))) {
      var _data$owners, _data$owners2, _data$owners2$0$insti, _data$owners2$0$insti2, _data$owners3, _data$owners4;

      formData.institution = {
        name: (_data$owners = data.owners) === null || _data$owners === void 0 ? void 0 : _data$owners[0].institution.name,
        type: (_data$owners2 = data.owners) === null || _data$owners2 === void 0 ? void 0 : (_data$owners2$0$insti = _data$owners2[0].institution.type) === null || _data$owners2$0$insti === void 0 ? void 0 : (_data$owners2$0$insti2 = _data$owners2$0$insti.code) === null || _data$owners2$0$insti2 === void 0 ? void 0 : _data$owners2$0$insti2.split(".")[1],
        designation: (_data$owners3 = data.owners) === null || _data$owners3 === void 0 ? void 0 : _data$owners3[0].designation,
        nameOfAuthorizedPerson: (_data$owners4 = data.owners) === null || _data$owners4 === void 0 ? void 0 : _data$owners4[0].name,
        tenantId: Digit.ULBService.getCurrentTenantId()
      };
    }

    history.replace("/digit-ui/employee/pt/response", {
      Property: formData
    });
  };

  var configs = newConfig;
  return /*#__PURE__*/React.createElement(FormComposer, {
    heading: t("ES_TITLE_NEW_PROPERTY_APPLICATION"),
    isDisabled: !canSubmit,
    label: t("ES_COMMON_APPLICATION_SUBMIT"),
    config: configs.map(function (config) {
      return _extends({}, config, {
        body: config.body.filter(function (a) {
          return !a.hideInEmployee;
        })
      });
    }),
    fieldStyle: {
      marginRight: 0
    },
    onSubmit: onSubmit,
    defaultValues: defaultValues,
    onFormValueChange: onFormValueChange
  });
};

var EditForm = function EditForm(_ref) {
  var applicationData = _ref.applicationData;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var history = useHistory();

  var _useLocation = useLocation(),
      state = _useLocation.state;

  var _useState = useState(false),
      canSubmit = _useState[0],
      setSubmitValve = _useState[1];

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false),
      setMutationHappened = _Digit$Hooks$useSessi[1];

  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", {}),
      clearSuccessData = _Digit$Hooks$useSessi2[2];

  useEffect(function () {
    setMutationHappened(false);
    clearSuccessData();
  }, []);
  var defaultValues = {
    originalData: applicationData,
    address: applicationData === null || applicationData === void 0 ? void 0 : applicationData.address
  };

  var onFormValueChange = function onFormValueChange(setValue, formData, formState) {
    setSubmitValve(!Object.keys(formState.errors).length);
  };

  var onSubmit = function onSubmit(data) {
    var _data$address, _data$address$city, _data$PropertyType, _state$workflow, _data$usageCategoryMi, _data$usageCategoryMi2, _data$usageCategoryMa, _data$usageCategoryMa2, _data$usageCategoryMa3, _data$PropertyType2, _data$PropertyType3, _applicationData$unit, _data$units, _extends2, _state$workflow2;

    var formData = _extends({}, applicationData, (_extends2 = {
      address: _extends({}, applicationData === null || applicationData === void 0 ? void 0 : applicationData.address, data === null || data === void 0 ? void 0 : data.address, {
        city: data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$city = _data$address.city) === null || _data$address$city === void 0 ? void 0 : _data$address$city.name
      }),
      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType = data.PropertyType) === null || _data$PropertyType === void 0 ? void 0 : _data$PropertyType.code,
      creationReason: ((_state$workflow = state.workflow) === null || _state$workflow === void 0 ? void 0 : _state$workflow.businessService) === "PT.UPDATE" ? "UPDATE" : applicationData === null || applicationData === void 0 ? void 0 : applicationData.creationReason,
      usageCategory: data !== null && data !== void 0 && (_data$usageCategoryMi = data.usageCategoryMinor) !== null && _data$usageCategoryMi !== void 0 && _data$usageCategoryMi.subuagecode ? data === null || data === void 0 ? void 0 : (_data$usageCategoryMi2 = data.usageCategoryMinor) === null || _data$usageCategoryMi2 === void 0 ? void 0 : _data$usageCategoryMi2.subuagecode : data === null || data === void 0 ? void 0 : (_data$usageCategoryMa = data.usageCategoryMajor) === null || _data$usageCategoryMa === void 0 ? void 0 : _data$usageCategoryMa.code,
      usageCategoryMajor: data === null || data === void 0 ? void 0 : (_data$usageCategoryMa2 = data.usageCategoryMajor) === null || _data$usageCategoryMa2 === void 0 ? void 0 : _data$usageCategoryMa2.code.split(".")[0],
      usageCategoryMinor: (data === null || data === void 0 ? void 0 : (_data$usageCategoryMa3 = data.usageCategoryMajor) === null || _data$usageCategoryMa3 === void 0 ? void 0 : _data$usageCategoryMa3.code.split(".")[1]) || null
    }, _extends2["propertyType"] = data === null || data === void 0 ? void 0 : (_data$PropertyType2 = data.PropertyType) === null || _data$PropertyType2 === void 0 ? void 0 : _data$PropertyType2.code, _extends2.noOfFloors = Number(data === null || data === void 0 ? void 0 : data.noOfFloors), _extends2.landArea = Number(data === null || data === void 0 ? void 0 : data.landarea), _extends2.superBuiltUpArea = Number(data === null || data === void 0 ? void 0 : data.landarea), _extends2["propertyType"] = data === null || data === void 0 ? void 0 : (_data$PropertyType3 = data.PropertyType) === null || _data$PropertyType3 === void 0 ? void 0 : _data$PropertyType3.code, _extends2.source = "MUNICIPAL_RECORDS", _extends2.channel = "CFC_COUNTER", _extends2.documents = applicationData === null || applicationData === void 0 ? void 0 : applicationData.documents.map(function (old) {
      var _data$documents, _data$documents$docum;

      var dt = old.documentType.split(".");
      var newDoc = data === null || data === void 0 ? void 0 : (_data$documents = data.documents) === null || _data$documents === void 0 ? void 0 : (_data$documents$docum = _data$documents.documents) === null || _data$documents$docum === void 0 ? void 0 : _data$documents$docum.find(function (e) {
        return e.documentType.includes(dt[0] + "." + dt[1]);
      });
      return _extends({}, old, newDoc);
    }), _extends2.units = [].concat((applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$unit = applicationData.units) === null || _applicationData$unit === void 0 ? void 0 : _applicationData$unit.map(function (old) {
      return _extends({}, old, {
        active: false
      });
    })) || [], (data === null || data === void 0 ? void 0 : (_data$units = data.units) === null || _data$units === void 0 ? void 0 : _data$units.map(function (unit) {
      return _extends({}, unit, {
        active: true
      });
    })) || []), _extends2.workflow = state.workflow, _extends2.applicationStatus = "UPDATE", _extends2));

    if ((state === null || state === void 0 ? void 0 : (_state$workflow2 = state.workflow) === null || _state$workflow2 === void 0 ? void 0 : _state$workflow2.action) === "OPEN") {
      formData.units = formData.units.filter(function (unit) {
        return unit.active;
      });
    }

    history.push("/digit-ui/employee/pt/response", {
      Property: formData,
      key: "UPDATE",
      action: "SUBMIT"
    });
  };

  var configs = newConfig;
  return /*#__PURE__*/React.createElement(FormComposer, {
    heading: t("PT_UPDATE_PROPERTY"),
    isDisabled: !canSubmit,
    label: t("ES_COMMON_APPLICATION_SUBMIT"),
    config: configs.map(function (config) {
      return _extends({}, config, {
        body: [].concat(config.body.filter(function (a) {
          return !a.hideInEmployee;
        }), [{
          withoutLabel: true,
          type: "custom",
          populators: {
            name: "originalData",
            component: function component(props, customProps) {
              return /*#__PURE__*/React.createElement(React.Fragment, null);
            }
          }
        }])
      });
    }),
    fieldStyle: {
      marginRight: 0
    },
    onSubmit: onSubmit,
    defaultValues: defaultValues,
    onFormValueChange: onFormValueChange
  });
};

var EditApplication = function EditApplication() {
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useParams = useParams(),
      applicationNumber = _useParams.id;

  var _Digit$Hooks$pt$useAp = Digit.Hooks.pt.useApplicationDetail(t, tenantId, applicationNumber),
      isLoading = _Digit$Hooks$pt$useAp.isLoading,
      applicationDetails = _Digit$Hooks$pt$useAp.data;

  return applicationDetails && !isLoading ? /*#__PURE__*/React.createElement(EditForm, {
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    tenantId: tenantId
  }) : null;
};

var configPTApproverApplication = function configPTApproverApplication(_ref) {
  var _action$assigneeRoles;

  var t = _ref.t,
      action = _ref.action,
      approvers = _ref.approvers,
      selectedApprover = _ref.selectedApprover,
      setSelectedApprover = _ref.setSelectedApprover,
      selectFile = _ref.selectFile,
      uploadedFile = _ref.uploadedFile,
      setUploadedFile = _ref.setUploadedFile,
      assigneeLabel = _ref.assigneeLabel,
      businessService = _ref.businessService;
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + businessService + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "ES_PT_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: action.isTerminateState ? null : t(assigneeLabel || "WF_ROLE_" + ((_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : _action$assigneeRoles[0])),
        type: "dropdown",
        populators: action.isTerminateState ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("ES_PT_ACTION_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: "" + t("ES_PT_ATTACH_FILE") + (action.docUploadRequired ? " *" : ""),
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          showHint: true,
          hintText: t("PT_ATTACH_RESTRICTIONS_SIZE"),
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("ES_PT_ACTION_NO_FILEUPLOADED")
        })
      }]
    }]
  };
};

var configPTAssessProperty = function configPTAssessProperty(_ref) {
  var t = _ref.t,
      action = _ref.action,
      financialYears = _ref.financialYears,
      selectedFinancialYear = _ref.selectedFinancialYear,
      setSelectedFinancialYear = _ref.setSelectedFinancialYear;
  return {
    label: {
      heading: "WF_" + action.action + "_APPLICATION",
      submit: "WF_PT.CREATE_" + action.action,
      cancel: "ES_PT_COMMON_CANCEL"
    },
    form: [{
      body: [{
        label: t("ES_PT_FINANCIAL_YEARS"),
        isMandatory: true,
        type: "radio",
        populators: /*#__PURE__*/React.createElement(RadioButtons, {
          options: financialYears,
          optionsKey: "name",
          onSelect: setSelectedFinancialYear,
          selectedOption: selectedFinancialYear
        })
      }]
    }]
  };
};

var configTLApproverApplication = function configTLApproverApplication(_ref) {
  var t = _ref.t,
      action = _ref.action,
      approvers = _ref.approvers,
      selectedApprover = _ref.selectedApprover,
      setSelectedApprover = _ref.setSelectedApprover,
      selectFile = _ref.selectFile,
      uploadedFile = _ref.uploadedFile,
      setUploadedFile = _ref.setUploadedFile,
      businessService = _ref.businessService;
  var checkCondtions = true;
  if ((action === null || action === void 0 ? void 0 : action.action) == "SENDBACKTOCITIZEN") checkCondtions = false;
  if (action.isTerminateState) checkCondtions = false;
  return {
    label: {
      heading: "WF_" + (action === null || action === void 0 ? void 0 : action.action) + "_APPLICATION",
      submit: "WF_" + (businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()) + "_" + (action === null || action === void 0 ? void 0 : action.action),
      cancel: "WF_EMPLOYEE_NEWTL_CANCEL"
    },
    form: [{
      body: [{
        label: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_LABEL"),
        placeholder: !checkCondtions ? null : t("WF_ASSIGNEE_NAME_PLACEHOLDER"),
        type: "dropdown",
        populators: !checkCondtions ? null : /*#__PURE__*/React.createElement(Dropdown, {
          option: approvers,
          autoComplete: "off",
          optionKey: "name",
          id: "fieldInspector",
          select: setSelectedApprover,
          selected: selectedApprover
        })
      }, {
        label: t("WF_COMMON_COMMENTS"),
        type: "textarea",
        populators: {
          name: "comments"
        }
      }, {
        label: t("TL_APPROVAL_CHECKLIST_BUTTON_UP_FILE"),
        populators: /*#__PURE__*/React.createElement(UploadFile, {
          onUpload: selectFile,
          onDelete: function onDelete() {
            setUploadedFile(null);
          },
          message: uploadedFile ? "1 " + t("ES_PT_ACTION_FILEUPLOADED") : t("CS_ACTION_NO_FILEUPLOADED")
        })
      }]
    }]
  };
};

var Heading = function Heading(props) {
  return /*#__PURE__*/React.createElement("h1", {
    className: "heading-m"
  }, props.label);
};

var Close = function Close() {
  return /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};

var CloseBtn = function CloseBtn(props) {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close, null));
};

var ActionModal = function ActionModal(_ref) {
  var _action$assigneeRoles, _action$assigneeRoles2;

  var t = _ref.t,
      action = _ref.action,
      tenantId = _ref.tenantId,
      closeModal = _ref.closeModal,
      submitAction = _ref.submitAction,
      applicationData = _ref.applicationData,
      businessService = _ref.businessService,
      moduleCode = _ref.moduleCode;

  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, function (e) {
      return {
        code: e
      };
    }),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  }),
      approverData = _Digit$Hooks$useEmplo.data,
      PTALoading = _Digit$Hooks$useEmplo.isLoading;

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId, businessService, "FINANCIAL_YEARLS", {}, {
    details: {
      tenantId: Digit.ULBService.getStateId(),
      moduleDetails: [{
        moduleName: "egf-master",
        masterDetails: [{
          name: "FinancialYear",
          filter: "[?(@.module == 'PT')]"
        }]
      }]
    }
  }),
      financialYearsLoading = _Digit$Hooks$pt$useMD.isLoading,
      financialYearsData = _Digit$Hooks$pt$useMD.data;

  var _useState = useState({}),
      config = _useState[0],
      setConfig = _useState[1];

  var _useState2 = useState({}),
      defaultValues = _useState2[0];

  var _useState3 = useState([]),
      approvers = _useState3[0],
      setApprovers = _useState3[1];

  var _useState4 = useState(null),
      selectedApprover = _useState4[0],
      setSelectedApprover = _useState4[1];

  var _useState5 = useState(null),
      file = _useState5[0],
      setFile = _useState5[1];

  var _useState6 = useState(null),
      uploadedFile = _useState6[0],
      setUploadedFile = _useState6[1];

  var _useState7 = useState(null),
      setError = _useState7[1];

  var _useState8 = useState([]),
      financialYears = _useState8[0],
      setFinancialYears = _useState8[1];

  var _useState9 = useState(null),
      selectedFinancialYear = _useState9[0],
      setSelectedFinancialYear = _useState9[1];

  var _useState10 = useState(false);

  useEffect(function () {
    if (financialYearsData && financialYearsData["egf-master"]) {
      var _financialYearsData$e;

      setFinancialYears((_financialYearsData$e = financialYearsData["egf-master"]) === null || _financialYearsData$e === void 0 ? void 0 : _financialYearsData$e["FinancialYear"]);
    }
  }, [financialYearsData]);
  useEffect(function () {
    var _approverData$Employe;

    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;

      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);

  function selectFile(e) {
    setFile(e.target.files[0]);
  }

  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("PT", file, tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0])).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                  setError(t("CS_FILE_UPLOAD_ERROR"));
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);

  function submit(data) {
    if (!(action !== null && action !== void 0 && action.showFinancialYearsModal)) {
      var workflow = {
        action: action === null || action === void 0 ? void 0 : action.action,
        comments: data === null || data === void 0 ? void 0 : data.comments,
        businessService: businessService,
        moduleName: moduleCode
      };
      workflow["assignes"] = action !== null && action !== void 0 && action.isTerminateState || !selectedApprover ? [] : [selectedApprover];
      if (uploadedFile) workflow["documents"] = [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }];
      submitAction({
        Property: _extends({}, applicationData, {
          workflow: workflow
        })
      });
    } else {
      submitAction({
        customFunctionToExecute: action === null || action === void 0 ? void 0 : action.customFunctionToExecute,
        Assessment: {
          financialYear: selectedFinancialYear === null || selectedFinancialYear === void 0 ? void 0 : selectedFinancialYear.name,
          propertyId: applicationData === null || applicationData === void 0 ? void 0 : applicationData.propertyId,
          tenantId: tenantId,
          source: applicationData === null || applicationData === void 0 ? void 0 : applicationData.source,
          channel: applicationData === null || applicationData === void 0 ? void 0 : applicationData.channel,
          assessmentDate: Date.now()
        }
      });
    }
  }

  useEffect(function () {
    if (action) {
      if (action !== null && action !== void 0 && action.showFinancialYearsModal) {
        setConfig(configPTAssessProperty({
          t: t,
          action: action,
          financialYears: financialYears,
          selectedFinancialYear: selectedFinancialYear,
          setSelectedFinancialYear: setSelectedFinancialYear
        }));
      } else {
        setConfig(configPTApproverApplication({
          t: t,
          action: action,
          approvers: approvers,
          selectedApprover: selectedApprover,
          setSelectedApprover: setSelectedApprover,
          selectFile: selectFile,
          uploadedFile: uploadedFile,
          setUploadedFile: setUploadedFile,
          businessService: businessService
        }));
      }
    }
  }, [action, approvers, financialYears, selectedFinancialYear, uploadedFile]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {},
    isDisabled: !action.showFinancialYearsModal ? PTALoading || (action === null || action === void 0 ? void 0 : action.docUploadRequired) && !uploadedFile : !selectedFinancialYear,
    formId: "modal-action"
  }, financialYearsLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

var Heading$1 = function Heading(props) {
  return /*#__PURE__*/React.createElement("h1", {
    className: "heading-m"
  }, props.label);
};

var Close$1 = function Close() {
  return /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};

var CloseBtn$1 = function CloseBtn(props) {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$1, null));
};

var ActionModal$1 = function ActionModal(_ref) {
  var _action$assigneeRoles, _action$assigneeRoles2;

  var t = _ref.t,
      action = _ref.action,
      tenantId = _ref.tenantId,
      closeModal = _ref.closeModal,
      submitAction = _ref.submitAction,
      applicationData = _ref.applicationData,
      businessService = _ref.businessService;

  var _Digit$Hooks$useEmplo = Digit.Hooks.useEmployeeSearch(tenantId, {
    roles: action === null || action === void 0 ? void 0 : (_action$assigneeRoles = action.assigneeRoles) === null || _action$assigneeRoles === void 0 ? void 0 : (_action$assigneeRoles2 = _action$assigneeRoles.map) === null || _action$assigneeRoles2 === void 0 ? void 0 : _action$assigneeRoles2.call(_action$assigneeRoles, function (e) {
      return {
        code: e
      };
    }),
    isActive: true
  }, {
    enabled: !(action !== null && action !== void 0 && action.isTerminateState)
  }),
      approverData = _Digit$Hooks$useEmplo.data;

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId, businessService, "FINANCIAL_YEARLS", {}, {
    details: {
      tenantId: Digit.ULBService.getStateId(),
      moduleDetails: [{
        moduleName: "egf-master",
        masterDetails: [{
          name: "FinancialYear",
          filter: "[?(@.module == 'TL')]"
        }]
      }]
    }
  }),
      financialYearsLoading = _Digit$Hooks$pt$useMD.isLoading,
      financialYearsData = _Digit$Hooks$pt$useMD.data;

  var _useState = useState({}),
      config = _useState[0],
      setConfig = _useState[1];

  var _useState2 = useState({}),
      defaultValues = _useState2[0];

  var _useState3 = useState([]),
      approvers = _useState3[0],
      setApprovers = _useState3[1];

  var _useState4 = useState({}),
      selectedApprover = _useState4[0],
      setSelectedApprover = _useState4[1];

  var _useState5 = useState(null),
      file = _useState5[0],
      setFile = _useState5[1];

  var _useState6 = useState(null),
      uploadedFile = _useState6[0],
      setUploadedFile = _useState6[1];

  var _useState7 = useState(null),
      setError = _useState7[1];

  var _useState8 = useState([]),
      financialYears = _useState8[0],
      setFinancialYears = _useState8[1];

  var _useState9 = useState(null),
      selectedFinancialYear = _useState9[0];

  useEffect(function () {
    if (financialYearsData && financialYearsData["egf-master"]) {
      var _financialYearsData$e;

      setFinancialYears((_financialYearsData$e = financialYearsData["egf-master"]) === null || _financialYearsData$e === void 0 ? void 0 : _financialYearsData$e["FinancialYear"]);
    }
  }, [financialYearsData]);
  useEffect(function () {
    var _approverData$Employe;

    setApprovers(approverData === null || approverData === void 0 ? void 0 : (_approverData$Employe = approverData.Employees) === null || _approverData$Employe === void 0 ? void 0 : _approverData$Employe.map(function (employee) {
      var _employee$user;

      return {
        uuid: employee === null || employee === void 0 ? void 0 : employee.uuid,
        name: employee === null || employee === void 0 ? void 0 : (_employee$user = employee.user) === null || _employee$user === void 0 ? void 0 : _employee$user.name
      };
    }));
  }, [approverData]);

  function selectFile(e) {
    setFile(e.target.files[0]);
  }

  useEffect(function () {
    (function () {
      try {
        setError(null);

        var _temp4 = function () {
          if (file) {
            var _temp5 = function () {
              if (file.size >= 5242880) {
                setError(t("CS_MAXIMUM_UPLOAD_SIZE_EXCEEDED"));
              } else {
                var _temp6 = _catch(function () {
                  return Promise.resolve(Digit.UploadServices.Filestorage("PT", file, tenantId === null || tenantId === void 0 ? void 0 : tenantId.split(".")[0])).then(function (response) {
                    var _response$data, _response$data$files;

                    if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$files = _response$data.files) === null || _response$data$files === void 0 ? void 0 : _response$data$files.length) > 0) {
                      var _response$data2, _response$data2$files;

                      setUploadedFile(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$files = _response$data2.files[0]) === null || _response$data2$files === void 0 ? void 0 : _response$data2$files.fileStoreId);
                    } else {
                      setError(t("CS_FILE_UPLOAD_ERROR"));
                    }
                  });
                }, function (err) {
                  console.error("Modal -> err ", err);
                  setError(t("CS_FILE_UPLOAD_ERROR"));
                });

                if (_temp6 && _temp6.then) return _temp6.then(function () {});
              }
            }();

            if (_temp5 && _temp5.then) return _temp5.then(function () {});
          }
        }();

        return _temp4 && _temp4.then ? _temp4.then(function () {}) : void 0;
      } catch (e) {
        Promise.reject(e);
      }
    })();
  }, [file]);

  function submit(data) {
    applicationData = _extends({}, applicationData, {
      action: action === null || action === void 0 ? void 0 : action.action,
      comment: data === null || data === void 0 ? void 0 : data.comments,
      assignee: !(selectedApprover !== null && selectedApprover !== void 0 && selectedApprover.uuid) ? null : [selectedApprover === null || selectedApprover === void 0 ? void 0 : selectedApprover.uuid],
      wfDocuments: uploadedFile ? [{
        documentType: (action === null || action === void 0 ? void 0 : action.action) + " DOC",
        fileName: file === null || file === void 0 ? void 0 : file.name,
        fileStoreId: uploadedFile
      }] : null
    });
    submitAction({
      Licenses: [applicationData]
    });
  }

  useEffect(function () {
    if (action) {
      setConfig(configTLApproverApplication({
        t: t,
        action: action,
        approvers: approvers,
        selectedApprover: selectedApprover,
        setSelectedApprover: setSelectedApprover,
        selectFile: selectFile,
        uploadedFile: uploadedFile,
        setUploadedFile: setUploadedFile,
        businessService: businessService
      }));
    }
  }, [action, approvers, financialYears, selectedFinancialYear, uploadedFile]);
  return action && config.form ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement(Heading$1, {
      label: t(config.label.heading)
    }),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$1, {
      onClick: closeModal
    }),
    actionCancelLabel: t(config.label.cancel),
    actionCancelOnSubmit: closeModal,
    actionSaveLabel: t(config.label.submit),
    actionSaveOnSubmit: function actionSaveOnSubmit() {},
    formId: "modal-action"
  }, financialYearsLoading ? /*#__PURE__*/React.createElement(Loader, null) : /*#__PURE__*/React.createElement(FormComposer, {
    config: config.form,
    noBoxShadow: true,
    inline: true,
    childrenAtTheBottom: true,
    onSubmit: submit,
    defaultValues: defaultValues,
    formId: "modal-action"
  })) : /*#__PURE__*/React.createElement(Loader, null);
};

var ActionModal$2 = function ActionModal$2(props) {
  if (props !== null && props !== void 0 && props.businessService.includes("PT")) {
    return /*#__PURE__*/React.createElement(ActionModal, props);
  }

  if (props !== null && props !== void 0 && props.businessService.includes("NewTL") || props !== null && props !== void 0 && props.businessService.includes("TL") || props !== null && props !== void 0 && props.businessService.includes("EDITRENEWAL") || props !== null && props !== void 0 && props.businessService.includes("DIRECTRENEWAL")) {
    return /*#__PURE__*/React.createElement(ActionModal$1, props);
  }
};

var Reason = function Reason(_ref) {
  var headComment = _ref.headComment,
      otherComment = _ref.otherComment;
  return /*#__PURE__*/React.createElement("div", {
    className: "checkpoint-comments-wrap"
  }, /*#__PURE__*/React.createElement("h4", null, headComment), /*#__PURE__*/React.createElement("p", null, otherComment));
};

var TLCaption = function TLCaption(_ref) {
  var data = _ref.data;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement("div", null, data.date && /*#__PURE__*/React.createElement("p", null, data.date), /*#__PURE__*/React.createElement("p", null, data.name), data.mobileNumber && /*#__PURE__*/React.createElement(TelePhone, {
    mobile: data.mobileNumber
  }), data.source && /*#__PURE__*/React.createElement("p", null, t("ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + data.source.toUpperCase())), data.comment && /*#__PURE__*/React.createElement(Reason, {
    otherComment: data === null || data === void 0 ? void 0 : data.otherComment,
    headComment: data === null || data === void 0 ? void 0 : data.comment
  }));
};

var PDFSvg$1 = function PDFSvg(_ref) {
  var _ref$width = _ref.width,
      width = _ref$width === void 0 ? 34 : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? 34 : _ref$height,
      style = _ref.style;
  return /*#__PURE__*/React.createElement("svg", {
    style: style,
    xmlns: "http://www.w3.org/2000/svg",
    width: width,
    height: height,
    viewBox: "0 0 34 34",
    fill: "gray"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5v3zm4-3H19v1h1.5V11H19v2h-1.5V7h3v1.5zM9 9.5h1v-1H9v1zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm10 5.5h1v-3h-1v3z"
  }));
};

function PropertyDocuments(_ref2) {
  var documents = _ref2.documents;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(function () {
  }),
      filesArray = _useState[0],
      setFilesArray = _useState[1];

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useState2 = useState({}),
      pdfFiles = _useState2[0],
      setPdfFiles = _useState2[1];

  useEffect(function () {
    var _acc;

    var acc = [];
    documents === null || documents === void 0 ? void 0 : documents.forEach(function (element, index, array) {
      acc = [].concat(acc, element.values);
    });
    setFilesArray((_acc = acc) === null || _acc === void 0 ? void 0 : _acc.map(function (value) {
      return value === null || value === void 0 ? void 0 : value.fileStoreId;
    }));
  }, [documents]);
  useEffect(function () {
    Digit.UploadServices.Filefetch(filesArray, tenantId.split(".")[0]).then(function (res) {
      setPdfFiles(res === null || res === void 0 ? void 0 : res.data);
    });
  }, [filesArray]);
  var checkLocation = window.location.href.includes("employee/tl");
  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "19px"
    }
  }, documents === null || documents === void 0 ? void 0 : documents.map(function (document, index) {
    var _document$values;

    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(CardSubHeader, {
      style: checkLocation ? {
        marginTop: "32px",
        marginBottom: "18px",
        color: "#0B0C0C, 100%",
        fontSize: "24px",
        lineHeight: "30px"
      } : {
        marginTop: "32px",
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(document === null || document === void 0 ? void 0 : document.title)), /*#__PURE__*/React.createElement("div", {
      style: {
        display: "flex",
        flexWrap: "wrap"
      }
    }, document === null || document === void 0 ? void 0 : (_document$values = document.values) === null || _document$values === void 0 ? void 0 : _document$values.map(function (value, index) {
      var _pdfFiles$value$fileS;

      return /*#__PURE__*/React.createElement("a", {
        target: "_",
        href: (_pdfFiles$value$fileS = pdfFiles[value.fileStoreId]) === null || _pdfFiles$value$fileS === void 0 ? void 0 : _pdfFiles$value$fileS.split(",")[0],
        style: {
          minWidth: "160px",
          marginRight: "20px"
        },
        key: index
      }, /*#__PURE__*/React.createElement(PDFSvg$1, {
        width: 140,
        height: 140,
        style: {
          background: "#f6f6f6",
          padding: "8px"
        }
      }), /*#__PURE__*/React.createElement("p", {
        style: checkLocation ? {
          marginTop: "8px",
          fontWeight: "bold",
          textAlign: "center",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#505A5F"
        } : {
          marginTop: "8px",
          fontWeight: "bold",
          textAlign: "center"
        }
      }, t(value === null || value === void 0 ? void 0 : value.title)));
    })));
  }));
}

function PropertyFloors(_ref) {
  var floors = _ref.floors;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement(React.Fragment, null, floors.map(function (floor) {
    var _floor$values;

    return /*#__PURE__*/React.createElement("div", {
      key: t(floor === null || floor === void 0 ? void 0 : floor.title),
      style: {
        marginTop: "19px"
      }
    }, /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    }, t(floor === null || floor === void 0 ? void 0 : floor.title)), floor === null || floor === void 0 ? void 0 : (_floor$values = floor.values) === null || _floor$values === void 0 ? void 0 : _floor$values.map(function (value, index) {
      var _value$values;

      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(CardSectionHeader, {
        style: {
          marginBottom: "16px",
          color: "#505A5F",
          fontSize: "16px",
          marginTop: index !== 0 ? "16px" : "revert"
        }
      }, t(value.title)), /*#__PURE__*/React.createElement(StatusTable, {
        style: {
          position: "relative",
          padding: "8px"
        }
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          border: "1px solid #D6D5D4",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.map(function (value, index) {
        var _value$values2;

        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React.createElement(Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }

        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title),
          text: t(value.value) || "N/A",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values2 = value.values) === null || _value$values2 === void 0 ? void 0 : _value$values2.length) - 1,
          caption: value.caption,
          className: "border-none"
        });
      })));
    }));
  }));
}

function PropertyEstimates(_ref) {
  var taxHeadEstimatesCalculation = _ref.taxHeadEstimatesCalculation;
  var taxHeadEstimates = taxHeadEstimatesCalculation.taxHeadEstimates;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement("div", {
    style: {
      marginTop: "40px"
    }
  }, /*#__PURE__*/React.createElement(StatusTable, null, /*#__PURE__*/React.createElement(Row, {
    label: t("ES_PT_TITLE_TAX_HEADS"),
    text: t("ES_PT_TITLE_AMOUNT"),
    className: "border-none",
    textStyle: {
      fontWeight: "bold"
    }
  }), /*#__PURE__*/React.createElement(BreakLine, {
    style: {
      margin: "16px 0",
      width: "40%"
    }
  }), taxHeadEstimates === null || taxHeadEstimates === void 0 ? void 0 : taxHeadEstimates.map(function (estimate, index) {
    return /*#__PURE__*/React.createElement(Row, {
      key: t(estimate.taxHeadCode),
      label: t(estimate.taxHeadCode),
      text: "\u20B9 " + estimate.estimateAmount || "N/A",
      last: index === (taxHeadEstimates === null || taxHeadEstimates === void 0 ? void 0 : taxHeadEstimates.length) - 1,
      className: "border-none",
      textStyle: {
        color: "#505A5F"
      },
      labelStyle: {
        color: "#505A5F"
      }
    });
  }), /*#__PURE__*/React.createElement(BreakLine, {
    style: {
      margin: "16px 0",
      width: "40%"
    }
  }), /*#__PURE__*/React.createElement(Row, {
    label: t("ES_PT_TITLE_TOTAL_DUE_AMOUNT"),
    text: "\u20B9 " + (taxHeadEstimatesCalculation === null || taxHeadEstimatesCalculation === void 0 ? void 0 : taxHeadEstimatesCalculation.totalAmount) || "N/A",
    className: "border-none",
    textStyle: {
      fontSize: "24px",
      fontWeight: "bold"
    }
  })));
}

function PropertyOwners(_ref) {
  var owners = _ref.owners;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;
  var checkOwnerLength = (owners === null || owners === void 0 ? void 0 : owners.length) || 1;
  var cardStyles = {
    marginTop: "19px"
  };
  var statusTableStyles = {
    position: "relative",
    padding: "8px"
  };

  if ( Number(checkOwnerLength) > 1) {
    cardStyles = {
      marginTop: "19px",
      background: "#FAFAFA",
      border: "1px solid #D6D5D4",
      borderRadius: "4px",
      padding: "8px",
      lineHeight: "19px",
      maxWidth: "600px",
      minWidth: "280px"
    };
  } else if ( !(Number(checkOwnerLength) > 1)) {
    cardStyles = {
      marginTop: "19px",
      lineHeight: "19px",
      maxWidth: "600px",
      minWidth: "280px"
    };
    statusTableStyles = {
      position: "relative",
      marginTop: "19px"
    };
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, owners.map(function (owner, index) {
    var _owner$values;

    return /*#__PURE__*/React.createElement("div", {
      key: t(owner === null || owner === void 0 ? void 0 : owner.title),
      style: cardStyles
    }, /*#__PURE__*/React.createElement(CardSubHeader, {
      style:  Number(checkOwnerLength) > 1 ? {
        marginBottom: "8px",
        paddingBottom: "9px",
        color: "#0B0C0C",
        fontSize: "16px",
        lineHeight: "19px"
      } : {
        marginBottom: "8px",
        color: "#505A5F",
        fontSize: "24px"
      }
    },  Number(checkOwnerLength) > 1 ? t(owner === null || owner === void 0 ? void 0 : owner.title) + " " + (index + 1) : t(owner === null || owner === void 0 ? void 0 : owner.title)), /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(StatusTable, {
      style: statusTableStyles
    }, /*#__PURE__*/React.createElement("div", {
      style: {
        position: "absolute",
        maxWidth: "640px",
        top: 0,
        left: 0,
        bottom: 0,
        right: 0,
        width: "auto"
      }
    }), owner === null || owner === void 0 ? void 0 : (_owner$values = owner.values) === null || _owner$values === void 0 ? void 0 : _owner$values.map(function (value, index) {
      var _value$values;

      if (value.map === true && value.value !== "N/A") {
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title),
          text: /*#__PURE__*/React.createElement("img", {
            src: t(value.value),
            alt: ""
          })
        });
      }

      return /*#__PURE__*/React.createElement(Row, {
        key: t(value.title),
        label:  t(value.title) + ":",
        text: t(value.value) || "N/A",
        last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
        caption: value.caption,
        className: "border-none",
        rowContainerStyle:  {
          justifyContent: "space-between",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#0B0C0C"
        } 
      });
    }))));
  }));
}

function TLTradeUnits(_ref) {
  var units = _ref.units;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement(React.Fragment, null, units.map(function (unit, index) {
    var _unit$values;

    return (
      /*#__PURE__*/
      React.createElement("div", {
        key: t(unit === null || unit === void 0 ? void 0 : unit.title),
        style: {
          marginTop: "19px",
          background: "#FAFAFA",
          border: "1px solid #D6D5D4",
          borderRadius: "4px",
          padding: "8px",
          lineHeight: "19px",
          maxWidth: "600px",
          minWidth: "280px"
        }
      }, /*#__PURE__*/React.createElement(CardSubHeader, {
        style: {
          marginBottom: "9px",
          paddingBottom: "9px",
          color: "#0B0C0C",
          fontSize: "16px",
          lineHeight: "19px"
        }
      }, t(unit === null || unit === void 0 ? void 0 : unit.title) + " " + (index + 1)), /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(StatusTable, {
        style: {
          position: "relative",
          marginTop: "19px"
        }
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), unit === null || unit === void 0 ? void 0 : (_unit$values = unit.values) === null || _unit$values === void 0 ? void 0 : _unit$values.map(function (value, index) {
        var _value$values;

        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React.createElement(Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }

        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title) + ":",
          text: t(value.value) || "NA",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
          caption: value.caption,
          className: "border-none",
          rowContainerStyle: {
            justifyContent: "space-between",
            fontSize: "16px",
            lineHeight: "19px",
            color: "#0B0C0C"
          }
        });
      }))))
    );
  }));
}

function TLTradeAccessories(_ref) {
  var units = _ref.units;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  return /*#__PURE__*/React.createElement(React.Fragment, null, units.map(function (unit, index) {
    var _unit$values;

    return (
      /*#__PURE__*/
      React.createElement("div", {
        key: t(unit === null || unit === void 0 ? void 0 : unit.title),
        style: {
          marginTop: "19px",
          background: "#FAFAFA",
          border: "1px solid #D6D5D4",
          borderRadius: "4px",
          padding: "8px",
          lineHeight: "19px",
          maxWidth: "600px",
          minWidth: "280px"
        }
      }, /*#__PURE__*/React.createElement(CardSubHeader, {
        style: {
          marginBottom: "8px",
          paddingBottom: "9px",
          color: "#0B0C0C",
          fontSize: "16px",
          lineHeight: "19px"
        }
      }, t(unit === null || unit === void 0 ? void 0 : unit.title) + " " + (index + 1)), /*#__PURE__*/React.createElement(React.Fragment, {
        key: index
      }, /*#__PURE__*/React.createElement(StatusTable, {
        style: {
          position: "relative",
          marginTop: "19px"
        }
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          position: "absolute",
          maxWidth: "640px",
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: "auto"
        }
      }), unit === null || unit === void 0 ? void 0 : (_unit$values = unit.values) === null || _unit$values === void 0 ? void 0 : _unit$values.map(function (value, index) {
        var _value$values;

        if (value.map === true && value.value !== "N/A") {
          return /*#__PURE__*/React.createElement(Row, {
            key: t(value.title),
            label: t(value.title),
            text: /*#__PURE__*/React.createElement("img", {
              src: t(value.value),
              alt: ""
            })
          });
        }

        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title) + ":",
          text: t(value.value) || "N/A",
          last: index === (value === null || value === void 0 ? void 0 : (_value$values = value.values) === null || _value$values === void 0 ? void 0 : _value$values.length) - 1,
          caption: value.caption,
          className: "border-none",
          rowContainerStyle: {
            justifyContent: "space-between",
            fontSize: "16px",
            lineHeight: "19px",
            color: "#0B0C0C"
          }
        });
      }))))
    );
  }));
}

function ApplicationDetailsContent(_ref) {
  var _applicationDetails$a, _workflowDetails$data, _workflowDetails$data2, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5, _workflowDetails$data6, _workflowDetails$data7, _workflowDetails$data8, _workflowDetails$data9, _workflowDetails$data10;

  var applicationDetails = _ref.applicationDetails,
      workflowDetails = _ref.workflowDetails,
      isDataLoading = _ref.isDataLoading,
      applicationData = _ref.applicationData,
      timelineStatusPrefix = _ref.timelineStatusPrefix;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var getTimelineCaptions = function getTimelineCaptions(checkpoint) {
    if (checkpoint.state === "OPEN" || checkpoint.status === "INITIATED") {
      var _applicationData$audi;

      var caption = {
        date: Digit.DateUtils.ConvertTimestampToDate(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$audi = applicationData.auditDetails) === null || _applicationData$audi === void 0 ? void 0 : _applicationData$audi.createdTime),
        source: (applicationData === null || applicationData === void 0 ? void 0 : applicationData.channel) || ""
      };
      return /*#__PURE__*/React.createElement(TLCaption, {
        data: caption
      });
    } else {
      var _Digit$DateUtils, _applicationData$audi2, _checkpoint$assigner, _checkpoint$assigner2;

      var _caption = {
        date: (_Digit$DateUtils = Digit.DateUtils) === null || _Digit$DateUtils === void 0 ? void 0 : _Digit$DateUtils.ConvertTimestampToDate(applicationData === null || applicationData === void 0 ? void 0 : (_applicationData$audi2 = applicationData.auditDetails) === null || _applicationData$audi2 === void 0 ? void 0 : _applicationData$audi2.lastModifiedTime),
        name: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assigner = checkpoint.assigner) === null || _checkpoint$assigner === void 0 ? void 0 : _checkpoint$assigner.name,
        mobileNumber: checkpoint === null || checkpoint === void 0 ? void 0 : (_checkpoint$assigner2 = checkpoint.assigner) === null || _checkpoint$assigner2 === void 0 ? void 0 : _checkpoint$assigner2.mobileNumber
      };
      return /*#__PURE__*/React.createElement(TLCaption, {
        data: _caption
      });
    }
  };

  var checkLocation = window.location.href.includes("employee/tl");
  return /*#__PURE__*/React.createElement(Card, {
    style: {
      position: "relative"
    }
  }, applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationDetails) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.map(function (detail, index) {
    var _detail$values, _detail$additionalDet, _detail$additionalDet2, _detail$additionalDet3, _detail$additionalDet4, _detail$additionalDet5, _detail$additionalDet6, _detail$additionalDet7, _detail$additionalDet8, _detail$additionalDet9, _detail$additionalDet10, _detail$additionalDet11, _detail$additionalDet12;

    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement("div", {
      style: checkLocation ? {
        lineHeight: "19px",
        maxWidth: "600px",
        minWidth: "280px"
      } : {}
    }, index === 0 && !detail.asSectionHeader ? /*#__PURE__*/React.createElement(CardSubHeader, {
      style: {
        marginBottom: "16px"
      }
    }, t(detail.title)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardSectionHeader, {
      style: index == 0 && checkLocation ? {
        marginBottom: "16px"
      } : {
        marginBottom: "16px",
        marginTop: "32px"
      }
    }, t(detail.title), detail !== null && detail !== void 0 && detail.Component ? /*#__PURE__*/React.createElement(detail.Component, null) : null)), /*#__PURE__*/React.createElement(StatusTable, {
      style: checkLocation ? {
        position: "relative",
        marginTop: "19px"
      } : {}
    }, detail === null || detail === void 0 ? void 0 : (_detail$values = detail.values) === null || _detail$values === void 0 ? void 0 : _detail$values.map(function (value, index) {
      var _detail$values2;

      if (value.map === true && value.value !== "N/A") {
        return /*#__PURE__*/React.createElement(Row, {
          key: t(value.title),
          label: t(value.title),
          text: /*#__PURE__*/React.createElement("img", {
            src: t(value.value),
            alt: ""
          })
        });
      }

      return /*#__PURE__*/React.createElement(Row, {
        key: t(value.title),
        label: t(value.title),
        text: t(value.value) || "N/A",
        last: index === (detail === null || detail === void 0 ? void 0 : (_detail$values2 = detail.values) === null || _detail$values2 === void 0 ? void 0 : _detail$values2.length) - 1,
        caption: value.caption,
        className: "border-none",
        rowContainerStyle: checkLocation ? {
          justifyContent: "space-between",
          fontSize: "16px",
          lineHeight: "19px",
          color: "#0B0C0C"
        } : {}
      });
    }))), (detail === null || detail === void 0 ? void 0 : detail.belowComponent) && /*#__PURE__*/React.createElement(detail.belowComponent, null), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet = detail.additionalDetails) === null || _detail$additionalDet === void 0 ? void 0 : _detail$additionalDet.floors) && /*#__PURE__*/React.createElement(PropertyFloors, {
      floors: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet2 = detail.additionalDetails) === null || _detail$additionalDet2 === void 0 ? void 0 : _detail$additionalDet2.floors
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet3 = detail.additionalDetails) === null || _detail$additionalDet3 === void 0 ? void 0 : _detail$additionalDet3.owners) && /*#__PURE__*/React.createElement(PropertyOwners, {
      owners: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet4 = detail.additionalDetails) === null || _detail$additionalDet4 === void 0 ? void 0 : _detail$additionalDet4.owners
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet5 = detail.additionalDetails) === null || _detail$additionalDet5 === void 0 ? void 0 : _detail$additionalDet5.units) && /*#__PURE__*/React.createElement(TLTradeUnits, {
      units: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet6 = detail.additionalDetails) === null || _detail$additionalDet6 === void 0 ? void 0 : _detail$additionalDet6.units
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet7 = detail.additionalDetails) === null || _detail$additionalDet7 === void 0 ? void 0 : _detail$additionalDet7.accessories) && /*#__PURE__*/React.createElement(TLTradeAccessories, {
      units: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet8 = detail.additionalDetails) === null || _detail$additionalDet8 === void 0 ? void 0 : _detail$additionalDet8.accessories
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet9 = detail.additionalDetails) === null || _detail$additionalDet9 === void 0 ? void 0 : _detail$additionalDet9.documents) && /*#__PURE__*/React.createElement(PropertyDocuments, {
      documents: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet10 = detail.additionalDetails) === null || _detail$additionalDet10 === void 0 ? void 0 : _detail$additionalDet10.documents
    }), (detail === null || detail === void 0 ? void 0 : (_detail$additionalDet11 = detail.additionalDetails) === null || _detail$additionalDet11 === void 0 ? void 0 : _detail$additionalDet11.taxHeadEstimatesCalculation) && /*#__PURE__*/React.createElement(PropertyEstimates, {
      taxHeadEstimatesCalculation: detail === null || detail === void 0 ? void 0 : (_detail$additionalDet12 = detail.additionalDetails) === null || _detail$additionalDet12 === void 0 ? void 0 : _detail$additionalDet12.taxHeadEstimatesCalculation
    }));
  }), (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.timeline) === null || _workflowDetails$data2 === void 0 ? void 0 : _workflowDetails$data2.length) > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreakLine, null), ((workflowDetails === null || workflowDetails === void 0 ? void 0 : workflowDetails.isLoading) || isDataLoading) && /*#__PURE__*/React.createElement(Loader, null), !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && !isDataLoading && /*#__PURE__*/React.createElement(Fragment$1, null, /*#__PURE__*/React.createElement(CardSectionHeader, {
    style: {
      marginBottom: "16px",
      marginTop: "32px"
    }
  }, t("ES_APPLICATION_DETAILS_APPLICATION_TIMELINE")), workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data3 = workflowDetails.data) !== null && _workflowDetails$data3 !== void 0 && _workflowDetails$data3.timeline && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data4 = workflowDetails.data) === null || _workflowDetails$data4 === void 0 ? void 0 : (_workflowDetails$data5 = _workflowDetails$data4.timeline) === null || _workflowDetails$data5 === void 0 ? void 0 : _workflowDetails$data5.length) === 1 ? /*#__PURE__*/React.createElement(CheckPoint, {
    isCompleted: true,
    label: t("" + timelineStatusPrefix + (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data6 = workflowDetails.data) === null || _workflowDetails$data6 === void 0 ? void 0 : (_workflowDetails$data7 = _workflowDetails$data6.timeline[0]) === null || _workflowDetails$data7 === void 0 ? void 0 : _workflowDetails$data7.state)),
    customChild: getTimelineCaptions(workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data8 = workflowDetails.data) === null || _workflowDetails$data8 === void 0 ? void 0 : _workflowDetails$data8.timeline[0])
  }) : /*#__PURE__*/React.createElement(ConnectingCheckPoints, null, (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data9 = workflowDetails.data) === null || _workflowDetails$data9 === void 0 ? void 0 : _workflowDetails$data9.timeline) && (workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data10 = workflowDetails.data) === null || _workflowDetails$data10 === void 0 ? void 0 : _workflowDetails$data10.timeline.map(function (checkpoint, index, arr) {
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(CheckPoint, {
      keyValue: index,
      isCompleted: index === 0,
      info: checkpoint.comment,
      label: t("" + timelineStatusPrefix + ((checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction) === "REOPEN" ? checkpoint === null || checkpoint === void 0 ? void 0 : checkpoint.performedAction : checkpoint.state)),
      customChild: getTimelineCaptions(checkpoint)
    }));
  }))))));
}

function ApplicationDetailsToast(_ref) {
  var _showToast$action, _showToast$error, _showToast$error2, _showToast$error3, _showToast$error4, _showToast$error5, _showToast$error6, _showToast$error7, _showToast$error8, _showToast$action2;

  var t = _ref.t,
      showToast = _ref.showToast,
      closeToast = _ref.closeToast,
      businessService = _ref.businessService;

  if (businessService.includes("NewTL") || businessService.includes("TL") || businessService.includes("EDITRENEWAL")) {
    var label = "";

    switch (showToast === null || showToast === void 0 ? void 0 : (_showToast$action = showToast.action) === null || _showToast$action === void 0 ? void 0 : _showToast$action.action) {
      case "SENDBACK":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error = showToast.error) === null || _showToast$error === void 0 ? void 0 : _showToast$error.message : t("TL_SENDBACK_CHECKLIST_MESSAGE_HEAD");
        break;

      case "FORWARD":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error2 = showToast.error) === null || _showToast$error2 === void 0 ? void 0 : _showToast$error2.message : t("TL_FORWARD_SUCCESS_MESSAGE_MAIN");
        break;

      case "APPROVE":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error3 = showToast.error) === null || _showToast$error3 === void 0 ? void 0 : _showToast$error3.message : t("TL_APPROVAL_CHECKLIST_MESSAGE_HEAD");
        break;

      case "SENDBACKTOCITIZEN":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error4 = showToast.error) === null || _showToast$error4 === void 0 ? void 0 : _showToast$error4.message : t("TL_SENDBACK_TOCITIZEN_CHECKLIST_MESSAGE_HEAD");
        break;

      case "REJECT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error5 = showToast.error) === null || _showToast$error5 === void 0 ? void 0 : _showToast$error5.message : t("TL_APPROVAL_REJ_MESSAGE_HEAD");
        break;

      case "RESUBMIT":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error6 = showToast.error) === null || _showToast$error6 === void 0 ? void 0 : _showToast$error6.message : t("TL_APPLICATION_RESUBMIT_SUCCESS_MESSAGE_MAIN");
        break;

      case "CANCEL":
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error7 = showToast.error) === null || _showToast$error7 === void 0 ? void 0 : _showToast$error7.message : t("TL_TL_CANCELLED_MESSAGE_HEAD");
        break;

      default:
        label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error8 = showToast.error) === null || _showToast$error8 === void 0 ? void 0 : _showToast$error8.message : "ES_" + businessService + "_" + (showToast === null || showToast === void 0 ? void 0 : (_showToast$action2 = showToast.action) === null || _showToast$action2 === void 0 ? void 0 : _showToast$action2.action) + "_UPDATE_SUCCESS";
    }

    return /*#__PURE__*/React.createElement(React.Fragment, null, showToast && /*#__PURE__*/React.createElement(Toast, {
      error: showToast.key === "error",
      label: label,
      onClose: closeToast
    }));
  } else {
    var _showToast$error9, _showToast$action3;

    var _label = (showToast === null || showToast === void 0 ? void 0 : showToast.key) === "error" ? showToast === null || showToast === void 0 ? void 0 : (_showToast$error9 = showToast.error) === null || _showToast$error9 === void 0 ? void 0 : _showToast$error9.message : "ES_" + businessService + "_" + (showToast === null || showToast === void 0 ? void 0 : (_showToast$action3 = showToast.action) === null || _showToast$action3 === void 0 ? void 0 : _showToast$action3.action) + "_UPDATE_SUCCESS";

    return /*#__PURE__*/React.createElement(React.Fragment, null, showToast && /*#__PURE__*/React.createElement(Toast, {
      error: showToast.key === "error",
      label: t(_label),
      onClose: closeToast
    }));
  }
}

function ApplicationDetailsActionBar(_ref) {
  var _user$info, _user$info$roles, _workflowDetails$data, _workflowDetails$data2, _workflowDetails$data3, _workflowDetails$data4, _workflowDetails$data5;

  var workflowDetails = _ref.workflowDetails,
      displayMenu = _ref.displayMenu,
      onActionSelect = _ref.onActionSelect,
      setDisplayMenu = _ref.setDisplayMenu,
      businessService = _ref.businessService,
      forcedActionPrefix = _ref.forcedActionPrefix;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var user = Digit.UserService.getUser();
  var userRoles = user === null || user === void 0 ? void 0 : (_user$info = user.info) === null || _user$info === void 0 ? void 0 : (_user$info$roles = _user$info.roles) === null || _user$info$roles === void 0 ? void 0 : _user$info$roles.map(function (e) {
    return e.code;
  });
  var actions = workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : (_workflowDetails$data2 = _workflowDetails$data.actionState) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.nextActions) === null || _workflowDetails$data3 === void 0 ? void 0 : _workflowDetails$data3.filter(function (e) {
    return userRoles.some(function (role) {
      var _e$roles;

      return (_e$roles = e.roles) === null || _e$roles === void 0 ? void 0 : _e$roles.includes(role);
    }) || !e.roles;
  });
  return /*#__PURE__*/React.createElement(React.Fragment, null, !(workflowDetails !== null && workflowDetails !== void 0 && workflowDetails.isLoading) && (actions === null || actions === void 0 ? void 0 : actions.length) > 0 && /*#__PURE__*/React.createElement(ActionBar, null, displayMenu && workflowDetails !== null && workflowDetails !== void 0 && (_workflowDetails$data4 = workflowDetails.data) !== null && _workflowDetails$data4 !== void 0 && (_workflowDetails$data5 = _workflowDetails$data4.actionState) !== null && _workflowDetails$data5 !== void 0 && _workflowDetails$data5.nextActions ? /*#__PURE__*/React.createElement(Menu, {
    localeKeyPrefix: forcedActionPrefix || "WF_EMPLOYEE_" + (businessService === null || businessService === void 0 ? void 0 : businessService.toUpperCase()),
    options: actions,
    optionKey: "action",
    t: t,
    onSelect: onActionSelect
  }) : null, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("WF_TAKE_ACTION"),
    onSubmit: function onSubmit() {
      return setDisplayMenu(!displayMenu);
    }
  })));
}

var ApplicationDetails = function ApplicationDetails(props) {
  var _workflowDetails$data;

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var state = tenantId.split(".")[0];

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var history = useHistory();

  var _useParams = useParams(),
      applicationNumber = _useParams.id;

  var _useState = useState(false),
      displayMenu = _useState[0],
      setDisplayMenu = _useState[1];

  var _useState2 = useState(null),
      selectedAction = _useState2[0],
      setSelectedAction = _useState2[1];

  var _useState3 = useState(false),
      showModal = _useState3[0],
      setShowModal = _useState3[1];

  var applicationDetails = props.applicationDetails,
      showToast = props.showToast,
      setShowToast = props.setShowToast,
      isLoading = props.isLoading,
      isDataLoading = props.isDataLoading,
      applicationData = props.applicationData,
      mutate = props.mutate,
      workflowDetails = props.workflowDetails,
      businessService = props.businessService,
      closeToast = props.closeToast,
      moduleCode = props.moduleCode,
      timelineStatusPrefix = props.timelineStatusPrefix,
      forcedActionPrefix = props.forcedActionPrefix;
  useEffect(function () {
    if (showToast) {
      workflowDetails.revalidate();
    }
  }, [showToast]);

  function onActionSelect(action) {
    if (action) {
      if (action !== null && action !== void 0 && action.redirectionUrll) {
        var _action$redirectionUr;

        window.location.assign(window.location.origin + "/digit-ui/employee/payment/collect/" + (action === null || action === void 0 ? void 0 : (_action$redirectionUr = action.redirectionUrll) === null || _action$redirectionUr === void 0 ? void 0 : _action$redirectionUr.pathname));
      } else if (!(action !== null && action !== void 0 && action.redirectionUrl)) {
        setShowModal(true);
      } else {
        var _action$redirectionUr2, _action$redirectionUr3;

        history.push({
          pathname: (_action$redirectionUr2 = action.redirectionUrl) === null || _action$redirectionUr2 === void 0 ? void 0 : _action$redirectionUr2.pathname,
          state: _extends({}, (_action$redirectionUr3 = action.redirectionUrl) === null || _action$redirectionUr3 === void 0 ? void 0 : _action$redirectionUr3.state)
        });
      }
    } else console.log("no action found");

    setSelectedAction(action);
    setDisplayMenu(false);
  }

  var queryClient = useQueryClient();

  var closeModal = function closeModal() {
    setSelectedAction(null);
    setShowModal(false);
  };

  var submitAction = function submitAction(data) {
    if (typeof (data === null || data === void 0 ? void 0 : data.customFunctionToExecute) === "function") {
      data === null || data === void 0 ? void 0 : data.customFunctionToExecute(_extends({}, data));
    }

    if (mutate) {
      mutate(data, {
        onError: function onError(error, variables) {
          setShowToast({
            key: "error",
            error: error
          });
          setTimeout(closeToast, 5000);
        },
        onSuccess: function onSuccess(data, variables) {
          setShowToast({
            key: "success",
            action: selectedAction
          });
          setTimeout(closeToast, 5000);
          queryClient.clear();
          queryClient.refetchQueries("APPLICATION_SEARCH");
        }
      });
    }

    closeModal();
  };

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, !isLoading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ApplicationDetailsContent, {
    applicationDetails: applicationDetails,
    workflowDetails: workflowDetails,
    isDataLoading: isDataLoading,
    applicationData: applicationData,
    businessService: businessService,
    timelineStatusPrefix: timelineStatusPrefix
  }), showModal ? /*#__PURE__*/React.createElement(ActionModal$2, {
    t: t,
    action: selectedAction,
    tenantId: tenantId,
    state: state,
    id: applicationNumber,
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    closeModal: closeModal,
    submitAction: submitAction,
    actionData: workflowDetails === null || workflowDetails === void 0 ? void 0 : (_workflowDetails$data = workflowDetails.data) === null || _workflowDetails$data === void 0 ? void 0 : _workflowDetails$data.timeline,
    businessService: businessService,
    workflowDetails: workflowDetails,
    moduleCode: moduleCode
  }) : null, /*#__PURE__*/React.createElement(ApplicationDetailsToast, {
    t: t,
    showToast: showToast,
    closeToast: closeToast,
    businessService: businessService
  }), /*#__PURE__*/React.createElement(ApplicationDetailsActionBar, {
    workflowDetails: workflowDetails,
    displayMenu: displayMenu,
    onActionSelect: onActionSelect,
    setDisplayMenu: setDisplayMenu,
    businessService: businessService,
    forcedActionPrefix: forcedActionPrefix
  })) : /*#__PURE__*/React.createElement(Loader, null));
};

var ApplicationDetails$1 = function ApplicationDetails$1() {
  var _applicationDetails$a, _appDetailsToShow$app2, _workflowDetails4, _workflowDetails4$dat, _workflowDetails4$dat2, _workflowDetails5, _workflowDetails5$dat, _workflowDetails5$dat2, _workflowDetails5$dat3, _appDetailsToShow$app3, _appDetailsToShow$app4, _appDetailsToShow$app5, _workflowDetails8, _workflowDetails8$dat, _workflowDetails9, _workflowDetails9$dat, _workflowDetails9$dat2, _workflowDetails9$dat3, _workflowDetails$data2, _workflowDetails$data3, _appDetailsToShow$app11, _appDetailsToShow$app12, _appDetailsToShow$app13;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useParams = useParams(),
      propertyId = _useParams.id;

  var _useState = useState(null),
      showToast = _useState[0],
      setShowToast = _useState[1];

  var _useState2 = useState({}),
      appDetailsToShow = _useState2[0],
      setAppDetailsToShow = _useState2[1];

  var _useState3 = useState(false),
      enableAudit = _useState3[0],
      setEnableAudit = _useState3[1];

  var _useState4 = useState("PT.CREATE"),
      businessService = _useState4[0],
      setBusinessService = _useState4[1];

  var _Digit$Hooks$pt$useAp = Digit.Hooks.pt.useApplicationDetail(t, tenantId, propertyId),
      isLoading = _Digit$Hooks$pt$useAp.isLoading,
      applicationDetails = _Digit$Hooks$pt$useAp.data;

  var _Digit$Hooks$pt$useAp2 = Digit.Hooks.pt.useApplicationActions(tenantId),
      mutate = _Digit$Hooks$pt$useAp2.mutate;

  var workflowDetails = Digit.Hooks.useWorkflowDetails({
    tenantId: (applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId) || tenantId,
    id: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationData) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.acknowldgementNumber,
    moduleCode: businessService,
    role: "PT_CEMP"
  });

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    tenantId: tenantId,
    filters: {
      propertyIds: propertyId,
      audit: true
    }
  }, {
    enabled: enableAudit,
    select: function select(data) {
      var _data$Properties;

      return (_data$Properties = data.Properties) === null || _data$Properties === void 0 ? void 0 : _data$Properties.filter(function (e) {
        return e.status === "ACTIVE";
      });
    }
  }),
      auditData = _Digit$Hooks$pt$usePr.data;

  var showTransfererDetails = function showTransfererDetails() {
    var _applicationDetails$a2, _applicationDetails$a3;

    if (auditData && Object.keys(appDetailsToShow).length && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a2 = applicationDetails.applicationData) === null || _applicationDetails$a2 === void 0 ? void 0 : _applicationDetails$a2.status) !== "ACTIVE" && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a3 = applicationDetails.applicationData) === null || _applicationDetails$a3 === void 0 ? void 0 : _applicationDetails$a3.creationReason) === "MUTATION" && !(appDetailsToShow !== null && appDetailsToShow !== void 0 && appDetailsToShow.applicationDetails.find(function (e) {
      return e.title === "PT_MUTATION_TRANSFEROR_DETAILS";
    }))) {
      var _appDetailsToShow$app;

      var _applicationDetails = (_appDetailsToShow$app = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app === void 0 ? void 0 : _appDetailsToShow$app.filter(function (e) {
        return e.title === "PT_OWNERSHIP_INFO_SUB_HEADER";
      });

      var compConfig = newConfigMutate.reduce(function (acc, el) {
        return [].concat(acc, el.body);
      }, []).find(function (e) {
        return e.component === "TransfererDetails";
      });

      _applicationDetails.unshift({
        title: "PT_MUTATION_TRANSFEROR_DETAILS",
        belowComponent: function belowComponent() {
          return /*#__PURE__*/React.createElement(TransfererDetails, {
            userType: "employee",
            formData: {
              originalData: auditData[0]
            },
            config: compConfig
          });
        }
      });

      setAppDetailsToShow(_extends({}, appDetailsToShow, {
        applicationDetails: _applicationDetails
      }));
    }
  };

  var closeToast = function closeToast() {
    setShowToast(null);
  };

  useEffect(function () {
    if (applicationDetails) {
      var _applicationDetails$a4, _applicationDetails$a5;

      setAppDetailsToShow(lodash.cloneDeep(applicationDetails));

      if ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a4 = applicationDetails.applicationData) === null || _applicationDetails$a4 === void 0 ? void 0 : _applicationDetails$a4.status) !== "ACTIVE" && (applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a5 = applicationDetails.applicationData) === null || _applicationDetails$a5 === void 0 ? void 0 : _applicationDetails$a5.creationReason) === "MUTATION") {
        setEnableAudit(true);
      }
    }
  }, [applicationDetails]);
  useEffect(function () {
    showTransfererDetails();
  }, [auditData, applicationDetails, appDetailsToShow]);
  useEffect(function () {
    var _workflowDetails, _workflowDetails$data;

    if ((_workflowDetails = workflowDetails) !== null && _workflowDetails !== void 0 && (_workflowDetails$data = _workflowDetails.data) !== null && _workflowDetails$data !== void 0 && _workflowDetails$data.applicationBusinessService) {
      var _workflowDetails2, _workflowDetails2$dat;

      setBusinessService((_workflowDetails2 = workflowDetails) === null || _workflowDetails2 === void 0 ? void 0 : (_workflowDetails2$dat = _workflowDetails2.data) === null || _workflowDetails2$dat === void 0 ? void 0 : _workflowDetails2$dat.applicationBusinessService);
    }
  }, [workflowDetails.data]);
  var PT_CEMP = Digit.UserService.hasAccess(["PT_CEMP"]) || false;

  if ((appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app2 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app2 === void 0 ? void 0 : _appDetailsToShow$app2.status) === "ACTIVE" && PT_CEMP) {
    var _workflowDetails3;

    if (businessService == "PT.CREATE") setBusinessService("PT.UPDATE");
    workflowDetails = _extends({}, workflowDetails, {
      data: _extends({}, (_workflowDetails3 = workflowDetails) === null || _workflowDetails3 === void 0 ? void 0 : _workflowDetails3.data, {
        actionState: {
          nextActions: [{
            action: "VIEW_DETAILS",
            redirectionUrl: {
              pathname: "/digit-ui/employee/pt/property-details/" + propertyId
            },
            tenantId: Digit.ULBService.getStateId()
          }]
        }
      })
    });
  }

  if (PT_CEMP && (_workflowDetails4 = workflowDetails) !== null && _workflowDetails4 !== void 0 && (_workflowDetails4$dat = _workflowDetails4.data) !== null && _workflowDetails4$dat !== void 0 && (_workflowDetails4$dat2 = _workflowDetails4$dat.actionState) !== null && _workflowDetails4$dat2 !== void 0 && _workflowDetails4$dat2.isStateUpdatable && !((_workflowDetails5 = workflowDetails) !== null && _workflowDetails5 !== void 0 && (_workflowDetails5$dat = _workflowDetails5.data) !== null && _workflowDetails5$dat !== void 0 && (_workflowDetails5$dat2 = _workflowDetails5$dat.actionState) !== null && _workflowDetails5$dat2 !== void 0 && (_workflowDetails5$dat3 = _workflowDetails5$dat2.nextActions) !== null && _workflowDetails5$dat3 !== void 0 && _workflowDetails5$dat3.find(function (e) {
    return e.action === "UPDATE";
  }))) {
    var _workflowDetails6, _workflowDetails6$dat, _workflowDetails6$dat2, _workflowDetails7, _workflowDetails7$dat, _workflowDetails7$dat2;

    if (!((_workflowDetails6 = workflowDetails) !== null && _workflowDetails6 !== void 0 && (_workflowDetails6$dat = _workflowDetails6.data) !== null && _workflowDetails6$dat !== void 0 && (_workflowDetails6$dat2 = _workflowDetails6$dat.actionState) !== null && _workflowDetails6$dat2 !== void 0 && _workflowDetails6$dat2.nextActions)) workflowDetails.data.actionState.nextActions = [];
    (_workflowDetails7 = workflowDetails) === null || _workflowDetails7 === void 0 ? void 0 : (_workflowDetails7$dat = _workflowDetails7.data) === null || _workflowDetails7$dat === void 0 ? void 0 : (_workflowDetails7$dat2 = _workflowDetails7$dat.actionState) === null || _workflowDetails7$dat2 === void 0 ? void 0 : _workflowDetails7$dat2.nextActions.push({
      action: "UPDATE",
      redirectionUrl: {
        pathname: "/digit-ui/employee/pt/modify-application/" + propertyId,
        state: {
          workflow: {
            action: "REOPEN",
            moduleName: "PT",
            businessService: businessService
          }
        }
      },
      tenantId: Digit.ULBService.getStateId()
    });
  }

  if (!((appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app3 = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app3 === void 0 ? void 0 : (_appDetailsToShow$app4 = _appDetailsToShow$app3[0]) === null || _appDetailsToShow$app4 === void 0 ? void 0 : (_appDetailsToShow$app5 = _appDetailsToShow$app4.values) === null || _appDetailsToShow$app5 === void 0 ? void 0 : _appDetailsToShow$app5[0].title) === "PT_PROPERTY_APPLICATION_NO")) {
    var _appDetailsToShow$app6, _appDetailsToShow$app7, _appDetailsToShow$app8, _appDetailsToShow$app9;

    appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app6 = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app6 === void 0 ? void 0 : _appDetailsToShow$app6.unshift({
      values: [{
        title: "PT_PROPERTY_APPLICATION_NO",
        value: appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app7 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app7 === void 0 ? void 0 : _appDetailsToShow$app7.acknowldgementNumber
      }, {
        title: "PT_SEARCHPROPERTY_TABEL_PTUID",
        value: appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app8 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app8 === void 0 ? void 0 : _appDetailsToShow$app8.propertyId
      }, {
        title: "ES_APPLICATION_CHANNEL",
        value: "ES_APPLICATION_DETAILS_APPLICATION_CHANNEL_" + (appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app9 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app9 === void 0 ? void 0 : _appDetailsToShow$app9.channel)
      }]
    });
  }

  if (PT_CEMP && ((_workflowDetails8 = workflowDetails) === null || _workflowDetails8 === void 0 ? void 0 : (_workflowDetails8$dat = _workflowDetails8.data) === null || _workflowDetails8$dat === void 0 ? void 0 : _workflowDetails8$dat.applicationBusinessService) === "PT.MUTATION" && (_workflowDetails9 = workflowDetails) !== null && _workflowDetails9 !== void 0 && (_workflowDetails9$dat = _workflowDetails9.data) !== null && _workflowDetails9$dat !== void 0 && (_workflowDetails9$dat2 = _workflowDetails9$dat.actionState) !== null && _workflowDetails9$dat2 !== void 0 && (_workflowDetails9$dat3 = _workflowDetails9$dat2.nextActions) !== null && _workflowDetails9$dat3 !== void 0 && _workflowDetails9$dat3.find(function (act) {
    return act.action === "PAY";
  })) {
    var _workflowDetails10, _workflowDetails10$da, _workflowDetails10$da2;

    workflowDetails.data.actionState.nextActions = (_workflowDetails10 = workflowDetails) === null || _workflowDetails10 === void 0 ? void 0 : (_workflowDetails10$da = _workflowDetails10.data) === null || _workflowDetails10$da === void 0 ? void 0 : (_workflowDetails10$da2 = _workflowDetails10$da.actionState) === null || _workflowDetails10$da2 === void 0 ? void 0 : _workflowDetails10$da2.nextActions.map(function (act) {
      if (act.action === "PAY") {
        var _appDetailsToShow$app10;

        return {
          action: "PAY",
          forcedName: "WF_EMPLOYEE_PT.MUTATION_PAY",
          redirectionUrl: {
            pathname: "/digit-ui/employee/payment/collect/PT.MUTATION/" + (appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app10 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app10 === void 0 ? void 0 : _appDetailsToShow$app10.acknowldgementNumber)
          }
        };
      }

      return act;
    });
  }

  var wfDocs = (_workflowDetails$data2 = workflowDetails.data) === null || _workflowDetails$data2 === void 0 ? void 0 : (_workflowDetails$data3 = _workflowDetails$data2.timeline) === null || _workflowDetails$data3 === void 0 ? void 0 : _workflowDetails$data3.reduce(function (acc, _ref) {
    var documents = _ref.documents;
    return documents ? [].concat(acc, documents) : acc;
  }, []);
  var appdetailsDocuments = appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app11 = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app11 === void 0 ? void 0 : (_appDetailsToShow$app12 = _appDetailsToShow$app11.find(function (e) {
    return e.title === "PT_OWNERSHIP_INFO_SUB_HEADER";
  })) === null || _appDetailsToShow$app12 === void 0 ? void 0 : (_appDetailsToShow$app13 = _appDetailsToShow$app12.additionalDetails) === null || _appDetailsToShow$app13 === void 0 ? void 0 : _appDetailsToShow$app13.documents;

  if (appdetailsDocuments && wfDocs !== null && wfDocs !== void 0 && wfDocs.length && !(appdetailsDocuments !== null && appdetailsDocuments !== void 0 && appdetailsDocuments.find(function (e) {
    return e.title === "PT_WORKFLOW_DOCS";
  }))) {
    var _wfDocs$map;

    appDetailsToShow.applicationDetails.find(function (e) {
      return e.title === "PT_OWNERSHIP_INFO_SUB_HEADER";
    }).additionalDetails.documents = [].concat(appdetailsDocuments, [{
      title: "PT_WORKFLOW_DOCS",
      values: wfDocs === null || wfDocs === void 0 ? void 0 : (_wfDocs$map = wfDocs.map) === null || _wfDocs$map === void 0 ? void 0 : _wfDocs$map.call(wfDocs, function (e) {
        return _extends({}, e, {
          title: e.documentType
        });
      })
    }]);
  }

  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Header, null, t("PT_APPLICATION_TITLE")), /*#__PURE__*/React.createElement(ApplicationDetails, {
    applicationDetails: appDetailsToShow,
    isLoading: isLoading,
    isDataLoading: isLoading,
    applicationData: appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : appDetailsToShow.applicationData,
    mutate: mutate,
    workflowDetails: workflowDetails,
    businessService: businessService,
    moduleCode: "PT",
    showToast: showToast,
    setShowToast: setShowToast,
    closeToast: closeToast,
    timelineStatusPrefix: "ES_PT_COMMON_STATUS_",
    forcedActionPrefix: "WF_EMPLOYEE_PT.CREATE"
  }));
};

var OwnerHistory = function OwnerHistory(props) {
  var propertyId = props.propertyId,
      userType = props.userType;
  return /*#__PURE__*/React.createElement(propertyOwnerHistory, {
    propertyId: propertyId,
    userType: userType
  });
};

var Close$2 = function Close() {
  return /*#__PURE__*/React.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "#FFFFFF"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0 0h24v24H0V0z",
    fill: "none"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z"
  }));
};

var CloseBtn$2 = function CloseBtn(props) {
  return /*#__PURE__*/React.createElement("div", {
    className: "icon-bg-secondary",
    onClick: props.onClick
  }, /*#__PURE__*/React.createElement(Close$2, null));
};

var PropertyDetails = function PropertyDetails() {
  var _applicationDetails$a2, _appDetailsToShow$app2, _appDetailsToShow$app3, _appDetailsToShow$app4, _applicationDetails$a3, _appDetailsToShow$app6, _appDetailsToShow$app7;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useParams = useParams(),
      applicationNumber = _useParams.id;

  var _useState = useState(null),
      showToast = _useState[0],
      setShowToast = _useState[1];

  var _useState2 = useState({}),
      appDetailsToShow = _useState2[0],
      setAppDetailsToShow = _useState2[1];

  var _useState3 = useState(false),
      enableAudit = _useState3[0],
      setEnableAudit = _useState3[1];

  var _useState4 = useState(false),
      showModal = _useState4[0],
      setShowModal = _useState4[1];

  var PT_CEMP = Digit.UserService.hasAccess(["PT_CEMP"]) || false;

  var _useState5 = useState("PT.CREATE"),
      businessService = _useState5[0],
      setBusinessService = _useState5[1];

  var history = useHistory();

  var _Digit$Hooks$pt$useAp = Digit.Hooks.pt.useApplicationDetail(t, tenantId, applicationNumber),
      isLoading = _Digit$Hooks$pt$useAp.isLoading,
      applicationDetails = _Digit$Hooks$pt$useAp.data;

  var _Digit$Hooks$useFetch = Digit.Hooks.useFetchBillsForBuissnessService({
    businessService: "PT",
    consumerCode: applicationNumber
  }),
      fetchBillData = _Digit$Hooks$useFetch.data,
      fetchBillLoading = _Digit$Hooks$useFetch.isLoading;

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    tenantId: tenantId,
    filters: {
      propertyIds: applicationNumber,
      audit: true
    }
  }, {
    enabled: enableAudit,
    select: function select(data) {
      var _data$Properties$filt;

      return (_data$Properties$filt = data.Properties.filter(function (e) {
        return e.status === "ACTIVE";
      })) === null || _data$Properties$filt === void 0 ? void 0 : _data$Properties$filt.sort(function (a, b) {
        return b.auditDetails.lastModifiedTime - a.auditDetails.lastModifiedTime;
      });
    }
  }),
      auditData = _Digit$Hooks$pt$usePr.data;

  useEffect(function () {
    if (applicationDetails && !enableAudit) {
      var _applicationDetails$a;

      setAppDetailsToShow(lodash.cloneDeep(applicationDetails));

      if ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationData) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.status) !== "ACTIVE") {
        setEnableAudit(true);
      }
    }
  }, [applicationDetails]);
  useEffect(function () {
    if (enableAudit && auditData !== null && auditData !== void 0 && auditData.length && Object.keys(appDetailsToShow).length) {
      var _lastActiveProperty$o;

      var lastActiveProperty = auditData === null || auditData === void 0 ? void 0 : auditData[0];
      lastActiveProperty.owners = lastActiveProperty === null || lastActiveProperty === void 0 ? void 0 : (_lastActiveProperty$o = lastActiveProperty.owners) === null || _lastActiveProperty$o === void 0 ? void 0 : _lastActiveProperty$o.filter(function (owner) {
        return owner.status == "ACTIVE";
      });

      if (lastActiveProperty) {
        var _applicationDetails = appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : appDetailsToShow.transformToAppDetailsForEmployee({
          property: lastActiveProperty,
          t: t
        });

        setAppDetailsToShow(_extends({}, appDetailsToShow, {
          applicationDetails: _applicationDetails
        }));
      }
    }
  }, [auditData, enableAudit, applicationDetails]);
  var workflowDetails = Digit.Hooks.useWorkflowDetails({
    tenantId: (applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId) || tenantId,
    id: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a2 = applicationDetails.applicationData) === null || _applicationDetails$a2 === void 0 ? void 0 : _applicationDetails$a2.acknowldgementNumber,
    moduleCode: "PT.UPDATE",
    role: "PT_CEMP"
  });

  var closeToast = function closeToast() {
    setShowToast(null);
  };

  useEffect(function () {
    var _workflowDetails, _workflowDetails$data;

    if ((_workflowDetails = workflowDetails) !== null && _workflowDetails !== void 0 && (_workflowDetails$data = _workflowDetails.data) !== null && _workflowDetails$data !== void 0 && _workflowDetails$data.applicationBusinessService) {
      var _workflowDetails2, _workflowDetails2$dat;

      setBusinessService((_workflowDetails2 = workflowDetails) === null || _workflowDetails2 === void 0 ? void 0 : (_workflowDetails2$dat = _workflowDetails2.data) === null || _workflowDetails2$dat === void 0 ? void 0 : _workflowDetails2$dat.applicationBusinessService);
    }
  }, [workflowDetails.data]);

  if (appDetailsToShow !== null && appDetailsToShow !== void 0 && appDetailsToShow.applicationDetails) {
    var _appDetailsToShow$app;

    appDetailsToShow.applicationDetails = appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app === void 0 ? void 0 : _appDetailsToShow$app.map(function (e) {
      if (e.title === "PT_OWNERSHIP_INFO_SUB_HEADER") {
        return _extends({}, e, {
          Component: function Component() {
            return /*#__PURE__*/React.createElement(LinkLabel, {
              onClick: function onClick() {
                return setShowModal(function (prev) {
                  return !prev;
                });
              },
              style: {
                display: "inline",
                marginLeft: "25px"
              }
            }, t("PT_VIEW_HISTORY"));
          }
        });
      }

      return e;
    });
  }

  if ((appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app2 = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app2 === void 0 ? void 0 : (_appDetailsToShow$app3 = _appDetailsToShow$app2[0]) === null || _appDetailsToShow$app3 === void 0 ? void 0 : (_appDetailsToShow$app4 = _appDetailsToShow$app3.values) === null || _appDetailsToShow$app4 === void 0 ? void 0 : _appDetailsToShow$app4[1].title) !== "PT_TOTAL_DUES") {
    var _appDetailsToShow$app5, _fetchBillData$Bill$, _fetchBillData$Bill$2;

    appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app5 = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app5 === void 0 ? void 0 : _appDetailsToShow$app5.unshift({
      values: [{
        title: "PT_PROPERTY_PTUID",
        value: applicationNumber
      }, {
        title: "PT_TOTAL_DUES",
        value: fetchBillData !== null && fetchBillData !== void 0 && (_fetchBillData$Bill$ = fetchBillData.Bill[0]) !== null && _fetchBillData$Bill$ !== void 0 && _fetchBillData$Bill$.totalAmount ? "\u20B9 " + (fetchBillData === null || fetchBillData === void 0 ? void 0 : (_fetchBillData$Bill$2 = fetchBillData.Bill[0]) === null || _fetchBillData$Bill$2 === void 0 ? void 0 : _fetchBillData$Bill$2.totalAmount) : "N/A"
      }]
    });
  }

  if ((applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a3 = applicationDetails.applicationData) === null || _applicationDetails$a3 === void 0 ? void 0 : _applicationDetails$a3.status) === "ACTIVE") {
    var _workflowDetails3, _fetchBillData$Bill$3, _fetchBillData$Bill$4;

    workflowDetails = _extends({}, workflowDetails, {
      data: _extends({}, (_workflowDetails3 = workflowDetails) === null || _workflowDetails3 === void 0 ? void 0 : _workflowDetails3.data, {
        actionState: {
          nextActions: [{
            action: "ASSESS_PROPERTY",
            forcedName: "PT_ASSESS",
            showFinancialYearsModal: true,
            customFunctionToExecute: function customFunctionToExecute(data) {
              delete data.customFunctionToExecute;
              history.push({
                pathname: "/digit-ui/employee/pt/assessment-details/" + applicationNumber,
                state: _extends({}, data)
              });
            },
            tenantId: Digit.ULBService.getStateId()
          }, {
            action: !(fetchBillData !== null && fetchBillData !== void 0 && (_fetchBillData$Bill$3 = fetchBillData.Bill[0]) !== null && _fetchBillData$Bill$3 !== void 0 && _fetchBillData$Bill$3.totalAmount) ? "MUTATE_PROPERTY" : "PT_TOTALDUES_PAY",
            forcedName: "PT_OWNERSHIP_TRANSFER",
            redirectionUrl: {
              pathname: !(fetchBillData !== null && fetchBillData !== void 0 && (_fetchBillData$Bill$4 = fetchBillData.Bill[0]) !== null && _fetchBillData$Bill$4 !== void 0 && _fetchBillData$Bill$4.totalAmount) ? "/digit-ui/employee/pt/property-mutate-docs-required/" + applicationNumber : "/digit-ui/employee/payment/collect/PT/" + applicationNumber,
              state: null
            },
            tenantId: Digit.ULBService.getStateId()
          }]
        }
      })
    });
  }

  if ((appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app6 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app6 === void 0 ? void 0 : _appDetailsToShow$app6.status) === "ACTIVE" && PT_CEMP) {
    var _workflowDetails4, _workflowDetails4$dat, _workflowDetails4$dat2, _workflowDetails4$dat3;

    if (businessService == "PT.CREATE") setBusinessService("PT.UPDATE");

    if (!((_workflowDetails4 = workflowDetails) !== null && _workflowDetails4 !== void 0 && (_workflowDetails4$dat = _workflowDetails4.data) !== null && _workflowDetails4$dat !== void 0 && (_workflowDetails4$dat2 = _workflowDetails4$dat.actionState) !== null && _workflowDetails4$dat2 !== void 0 && (_workflowDetails4$dat3 = _workflowDetails4$dat2.nextActions) !== null && _workflowDetails4$dat3 !== void 0 && _workflowDetails4$dat3.find(function (e) {
      return e.action === "UPDATE";
    }))) {
      var _workflowDetails5, _workflowDetails5$dat, _workflowDetails5$dat2, _workflowDetails5$dat3;

      (_workflowDetails5 = workflowDetails) === null || _workflowDetails5 === void 0 ? void 0 : (_workflowDetails5$dat = _workflowDetails5.data) === null || _workflowDetails5$dat === void 0 ? void 0 : (_workflowDetails5$dat2 = _workflowDetails5$dat.actionState) === null || _workflowDetails5$dat2 === void 0 ? void 0 : (_workflowDetails5$dat3 = _workflowDetails5$dat2.nextActions) === null || _workflowDetails5$dat3 === void 0 ? void 0 : _workflowDetails5$dat3.push({
        action: "UPDATE",
        redirectionUrl: {
          pathname: "/digit-ui/employee/pt/modify-application/" + applicationNumber,
          state: {
            workflow: {
              action: "OPEN",
              moduleName: "PT",
              businessService: "PT.UPDATE"
            }
          }
        },
        tenantId: Digit.ULBService.getStateId()
      });
    }
  }

  if (fetchBillLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Header, null, t("PT_PROPERTY_INFORMATION")), /*#__PURE__*/React.createElement(ApplicationDetails, {
    applicationDetails: appDetailsToShow,
    isLoading: isLoading,
    isDataLoading: isLoading,
    applicationData: appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : appDetailsToShow.applicationData,
    mutate: null,
    workflowDetails: (appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app7 = appDetailsToShow.applicationData) === null || _appDetailsToShow$app7 === void 0 ? void 0 : _appDetailsToShow$app7.status) === "ACTIVE" ? workflowDetails : {},
    businessService: "PT",
    showToast: showToast,
    setShowToast: setShowToast,
    closeToast: closeToast,
    timelineStatusPrefix: "ES_PT_COMMON_STATUS_",
    forcedActionPrefix: "WF_EMPLOYEE_PT.CREATE"
  }), showModal ? /*#__PURE__*/React.createElement(Modal, {
    headerBarMain: /*#__PURE__*/React.createElement("h1", {
      className: "heading-m"
    }, t("PT_OWNER_HISTORY")),
    headerBarEnd: /*#__PURE__*/React.createElement(CloseBtn$2, {
      onClick: function onClick() {
        return setShowModal(false);
      }
    }),
    hideSubmit: true,
    isDisabled: false,
    popupStyles: {
      width: "75%",
      marginTop: "75px"
    }
  }, /*#__PURE__*/React.createElement(OwnerHistory, {
    propertyId: applicationNumber,
    userType: "employee"
  })) : null);
};

var AssessmentDetails = function AssessmentDetails() {
  var _location$state, _applicationDetails$a, _appDetailsToShow$app, _appDetailsToShow$app2, _location$state2, _location$state2$Asse, _location$state5, _location$state5$Asse, _location$state6, _location$state6$Asse;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useParams = useParams(),
      propertyId = _useParams.id;

  var location = useLocation();
  var AssessmentData = location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.Assessment;

  var _useState = useState(null),
      showToast = _useState[0],
      setShowToast = _useState[1];

  var queryClient = useQueryClient();
  var history = useHistory();

  var _useState2 = useState({}),
      appDetailsToShow = _useState2[0],
      setAppDetailsToShow = _useState2[1];

  var _Digit$Hooks$pt$useAp = Digit.Hooks.pt.useApplicationDetail(t, tenantId, propertyId),
      isLoading = _Digit$Hooks$pt$useAp.isLoading,
      applicationDetails = _Digit$Hooks$pt$useAp.data;

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyAssessment(tenantId),
      assessmentLoading = _Digit$Hooks$pt$usePr.isLoading,
      assessmentMutate = _Digit$Hooks$pt$usePr.mutate;

  var _Digit$Hooks$pt$usePt = Digit.Hooks.pt.usePtCalculationEstimate(tenantId),
      ptCalculationEstimateLoading = _Digit$Hooks$pt$usePt.isLoading,
      ptCalculationEstimateData = _Digit$Hooks$pt$usePt.data,
      ptCalculationEstimateMutate = _Digit$Hooks$pt$usePt.mutate;

  useEffect(function () {
    ptCalculationEstimateMutate({
      Assessment: AssessmentData
    });
  }, []);
  useEffect(function () {
    if (applicationDetails) setAppDetailsToShow(lodash.cloneDeep(applicationDetails));
  }, [applicationDetails]);
  var workflowDetails = Digit.Hooks.useWorkflowDetails({
    tenantId: (applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.tenantId) || tenantId,
    id: applicationDetails === null || applicationDetails === void 0 ? void 0 : (_applicationDetails$a = applicationDetails.applicationData) === null || _applicationDetails$a === void 0 ? void 0 : _applicationDetails$a.acknowldgementNumber,
    moduleCode: "PT",
    role: "PT_CEMP"
  });
  appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app === void 0 ? void 0 : _appDetailsToShow$app.shift();
  appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : (_appDetailsToShow$app2 = appDetailsToShow.applicationDetails) === null || _appDetailsToShow$app2 === void 0 ? void 0 : _appDetailsToShow$app2.unshift({
    title: "PT_ESTIMATE_DETAILS_HEADER",
    values: [{
      title: "PT_PROPERTY_PTUID",
      value: propertyId
    }, {
      title: "ES_PT_TITLE_BILLING_PERIOD",
      value: location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : (_location$state2$Asse = _location$state2.Assessment) === null || _location$state2$Asse === void 0 ? void 0 : _location$state2$Asse.financialYear
    }],
    additionalDetails: {
      taxHeadEstimatesCalculation: ptCalculationEstimateData === null || ptCalculationEstimateData === void 0 ? void 0 : ptCalculationEstimateData.Calculation[0]
    }
  });

  var closeToast = function closeToast() {
    setShowToast(null);
  };

  var handleAssessment = function handleAssessment() {
    var _location$state3, _location$state3$Asse;

    if (!queryClient.getQueryData(["PT_ASSESSMENT", propertyId, location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : (_location$state3$Asse = _location$state3.Assessment) === null || _location$state3$Asse === void 0 ? void 0 : _location$state3$Asse.financialYear])) {
      assessmentMutate({
        Assessment: AssessmentData
      }, {
        onError: function onError(error, variables) {
          var _error$response, _error$response$data, _error$response$data$;

          setShowToast({
            key: "error",
            action: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.Errors[0]) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || error.message
          });
          setTimeout(closeToast, 5000);
        },
        onSuccess: function onSuccess(data, variables) {
          var _data$Assessments, _data$Assessments$, _data$Assessments$$au, _location$state4, _location$state4$Asse;

          sessionStorage.setItem("IsPTAccessDone", data === null || data === void 0 ? void 0 : (_data$Assessments = data.Assessments) === null || _data$Assessments === void 0 ? void 0 : (_data$Assessments$ = _data$Assessments[0]) === null || _data$Assessments$ === void 0 ? void 0 : (_data$Assessments$$au = _data$Assessments$.auditDetails) === null || _data$Assessments$$au === void 0 ? void 0 : _data$Assessments$$au.lastModifiedTime);
          setShowToast({
            key: "success",
            action: {
              action: "ASSESSMENT"
            }
          });
          setTimeout(closeToast, 5000);
          queryClient.setQueryData(["PT_ASSESSMENT", propertyId, location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : (_location$state4$Asse = _location$state4.Assessment) === null || _location$state4$Asse === void 0 ? void 0 : _location$state4$Asse.financialYear], true);
        }
      });
    }
  };

  var proceeedToPay = function proceeedToPay() {
    history.push("/digit-ui/employee/payment/collect/PT/" + propertyId);
  };

  if (ptCalculationEstimateLoading || assessmentLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Header, null, t("PT_ASSESS_PROPERTY")), /*#__PURE__*/React.createElement(ApplicationDetails, {
    applicationDetails: appDetailsToShow,
    isLoading: isLoading,
    isDataLoading: isLoading,
    applicationData: appDetailsToShow === null || appDetailsToShow === void 0 ? void 0 : appDetailsToShow.applicationData,
    mutate: null,
    workflowDetails: queryClient.getQueryData(["PT_ASSESSMENT", propertyId, location === null || location === void 0 ? void 0 : (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : (_location$state5$Asse = _location$state5.Assessment) === null || _location$state5$Asse === void 0 ? void 0 : _location$state5$Asse.financialYear]) ? _extends({}, workflowDetails, {
      data: _extends({}, workflowDetails.data, {
        nextActions: []
      })
    }) : workflowDetails,
    businessService: "PT",
    assessmentMutate: assessmentMutate,
    ptCalculationEstimateMutate: ptCalculationEstimateMutate,
    showToast: showToast,
    setShowToast: setShowToast,
    closeToast: closeToast,
    timelineStatusPrefix: "ES_PT_COMMON_STATUS_",
    forcedActionPrefix: "WF_EMPLOYEE_PT.CREATE"
  }), !queryClient.getQueryData(["PT_ASSESSMENT", propertyId, location === null || location === void 0 ? void 0 : (_location$state6 = location.state) === null || _location$state6 === void 0 ? void 0 : (_location$state6$Asse = _location$state6.Assessment) === null || _location$state6$Asse === void 0 ? void 0 : _location$state6$Asse.financialYear]) ? /*#__PURE__*/React.createElement(ActionBar, null, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_ASSESS_PROPERTY_BUTTON"),
    onSubmit: handleAssessment
  })) : /*#__PURE__*/React.createElement(ActionBar, null, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("PT_PROCEED_PAYMENT"),
    onSubmit: proceeedToPay
  })));
};

var GetMessage = function GetMessage(type, action, isSuccess, isEmployee, t) {
  return t((isEmployee ? "E" : "C") + "S_PT_RESPONSE_" + (action ? action : "CREATE") + "_" + type + (isSuccess ? "" : "_ERROR"));
};

var GetActionMessage$1 = function GetActionMessage(action, isSuccess, isEmployee, t) {
  return GetMessage("ACTION", action, isSuccess, isEmployee, t);
};

var GetLabel = function GetLabel(action, isSuccess, isEmployee, t) {
  return GetMessage("LABEL", action, isSuccess, isEmployee, t);
};

var DisplayText = function DisplayText(action, isSuccess, isEmployee, t) {
  return GetMessage("DISPLAY", action, isSuccess, isEmployee, t);
};

var BannerPicker$1 = function BannerPicker(props) {
  var _props$data, _props$data$Propertie, _props$data$Propertie2, _props$data2, _props$data2$Properti, _props$data2$Properti2, _props$data3, _props$data3$Properti, _props$data3$Properti2;

  return /*#__PURE__*/React.createElement(Banner, {
    message: GetActionMessage$1((props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$Propertie = _props$data.Properties) === null || _props$data$Propertie === void 0 ? void 0 : (_props$data$Propertie2 = _props$data$Propertie[0]) === null || _props$data$Propertie2 === void 0 ? void 0 : _props$data$Propertie2.applicationStatus) || props.action, props.isSuccess, props.isEmployee, props.t),
    applicationNumber: props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : (_props$data2$Properti = _props$data2.Properties) === null || _props$data2$Properti === void 0 ? void 0 : (_props$data2$Properti2 = _props$data2$Properti[0]) === null || _props$data2$Properti2 === void 0 ? void 0 : _props$data2$Properti2.acknowldgementNumber,
    info: GetLabel(((_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : (_props$data3$Properti = _props$data3.Properties) === null || _props$data3$Properti === void 0 ? void 0 : (_props$data3$Properti2 = _props$data3$Properti[0]) === null || _props$data3$Properti2 === void 0 ? void 0 : _props$data3$Properti2.applicationStatus) || props.action, props.isSuccess, props.isEmployee, props.t),
    successful: props.isSuccess
  });
};

var Response = function Response(props) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var queryClient = useQueryClient();
  var history = useHistory();

  var _useState = useState(null),
      error = _useState[0],
      setError = _useState[1];

  var _useState2 = useState(null),
      showToast = _useState2[0],
      setShowToast = _useState2[1];

  var _useState3 = useState(false),
      enableAudit = _useState3[0],
      setEnableAudit = _useState3[1];

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false),
      mutationHappened = _Digit$Hooks$useSessi[0],
      setMutationHappened = _Digit$Hooks$useSessi[1];

  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", false),
      successData = _Digit$Hooks$useSessi2[0],
      setsuccessData = _Digit$Hooks$useSessi2[1];

  var closeToast = function closeToast() {
    setShowToast(null);
    setError(null);
  };

  var tenantId = Digit.ULBService.getCurrentTenantId();
  var state = props.location.state;
  var mutation = Digit.Hooks.pt.usePropertyAPI(tenantId, state.key !== "UPDATE");

  var _Digit$Hooks$useStore = Digit.Hooks.useStore.getInitData(),
      storeData = _Digit$Hooks$useStore.data;

  var _ref = storeData || {},
      tenants = _ref.tenants;

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertySearch({
    tenantId: tenantId,
    filters: {
      propertyIds: state.Property.propertyId,
      audit: true
    }
  }, {
    enabled: enableAudit,
    select: function select(data) {
      var _data$Properties;

      return (_data$Properties = data.Properties) === null || _data$Properties === void 0 ? void 0 : _data$Properties.filter(function (e) {
        return e.status === "ACTIVE";
      });
    }
  }),
      auditData = _Digit$Hooks$pt$usePr.data;

  useEffect(function () {
    if (mutation.data && mutation.isSuccess) setsuccessData(mutation.data);
  }, [mutation.data]);
  useEffect(function () {
    var onSuccess = function onSuccess(successRes) {
      try {
        var _successRes$Propertie;

        setMutationHappened(true);
        queryClient.clear();

        if ((successRes === null || successRes === void 0 ? void 0 : (_successRes$Propertie = successRes.Properties[0]) === null || _successRes$Propertie === void 0 ? void 0 : _successRes$Propertie.creationReason) === "MUTATION") {
          setEnableAudit(true);
        }

        return Promise.resolve();
      } catch (e) {
        return Promise.reject(e);
      }
    };

    var onError = function onError(error, variables) {
      var _error$response, _error$response$data, _error$response$data$;

      setShowToast({
        key: "error"
      });
      setError((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.Errors[0]) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || null);
    };

    if (!mutationHappened) {
      mutation.mutate({
        Property: state === null || state === void 0 ? void 0 : state.Property
      }, {
        onError: onError,
        onSuccess: onSuccess
      });
    }
  }, []);

  var handleDownloadPdf = function handleDownloadPdf() {
    try {
      var _ref2 = mutation.data || successData,
          _ref2$Properties = _ref2.Properties,
          Properties = _ref2$Properties === void 0 ? [] : _ref2$Properties;

      var Property = Properties && Properties[0] || {};
      var tenantInfo = tenants.find(function (tenant) {
        return tenant.code === Property.tenantId;
      });
      return Promise.resolve(getPTAcknowledgementData(_extends({}, Property, {
        auditData: auditData
      }), tenantInfo, t)).then(function (data) {
        Digit.Utils.pdf.generate(data);
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  if (mutation.isLoading || mutation.isIdle && !mutationHappened) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(BannerPicker$1, {
    t: t,
    data: (mutation === null || mutation === void 0 ? void 0 : mutation.data) || successData,
    action: state === null || state === void 0 ? void 0 : state.action,
    isSuccess: !Object.keys(successData || {}).length ? mutation === null || mutation === void 0 ? void 0 : mutation.isSuccess : true,
    isLoading: mutation.isIdle && !mutationHappened || (mutation === null || mutation === void 0 ? void 0 : mutation.isLoading),
    isEmployee: props.parentRoute.includes("employee")
  }), /*#__PURE__*/React.createElement(CardText, null, DisplayText(state.action, (mutation.isSuccess || !!successData) && !mutation.isError, props.parentRoute.includes("employee"), t)), (mutation.isSuccess || !!successData) && !mutation.isError && /*#__PURE__*/React.createElement(SubmitBar, {
    style: {
      overflow: "hidden"
    },
    label: t("PT_DOWNLOAD_ACK_FORM"),
    onSubmit: handleDownloadPdf
  })), showToast && /*#__PURE__*/React.createElement(Toast, {
    error: showToast.key === "error" ? true : false,
    label: error,
    onClose: closeToast
  }), /*#__PURE__*/React.createElement(ActionBar, null, /*#__PURE__*/React.createElement(Link, {
    to: "" + (props.parentRoute.includes("employee") ? "/digit-ui/employee" : "/digit-ui/citizen")
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    label: t("CORE_COMMON_GO_TO_HOME")
  }))));
};

var MutationForm = function MutationForm(_ref) {
  var applicationData = _ref.applicationData,
      tenantId = _ref.tenantId;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(false),
      canSubmit = _useState[0],
      setSubmitValve = _useState[1];

  var _Digit$Hooks$pt$useMD = Digit.Hooks.pt.useMDMS(tenantId.split(".")[0], "PropertyTax", "MutationDocuments"),
      mutationDocs = _Digit$Hooks$pt$useMD.data;

  var defaultValues = {
    originalData: applicationData
  };

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_HAPPENED", false),
      setMutationHappened = _Digit$Hooks$useSessi[1];

  var _Digit$Hooks$useSessi2 = Digit.Hooks.useSessionStorage("EMPLOYEE_MUTATION_SUCCESS_DATA", {}),
      clearSuccessData = _Digit$Hooks$useSessi2[2];

  useEffect(function () {
    setMutationHappened(false);
    clearSuccessData();
  }, []);
  var history = useHistory();

  var onFormValueChange = function onFormValueChange(setValue, formData, formState) {
    var _formData$ownershipCa, _formData$ownershipCa2, _formData$ownershipCa3;

    setSubmitValve(!Object.keys(formState.errors).length);

    if (!Object.keys(formState.errors).length) {
      var additionalDetails = formData.additionalDetails;
      var documentDate = additionalDetails.documentDate,
          documentNumber = additionalDetails.documentNumber,
          documentValue = additionalDetails.documentValue,
          isMutationInCourt = additionalDetails.isMutationInCourt,
          isPropertyUnderGovtPossession = additionalDetails.isPropertyUnderGovtPossession,
          marketValue = additionalDetails.marketValue,
          reasonForTransfer = additionalDetails.reasonForTransfer;
      setSubmitValve(!(!documentDate || !documentNumber || !documentValue || !isMutationInCourt || !isPropertyUnderGovtPossession || !marketValue || !reasonForTransfer));
    }

    if (formData !== null && formData !== void 0 && (_formData$ownershipCa = formData.ownershipCategory) !== null && _formData$ownershipCa !== void 0 && (_formData$ownershipCa2 = _formData$ownershipCa.code) !== null && _formData$ownershipCa2 !== void 0 && (_formData$ownershipCa3 = _formData$ownershipCa2.includes) !== null && _formData$ownershipCa3 !== void 0 && _formData$ownershipCa3.call(_formData$ownershipCa2, "MULTIPLE")) {
      var _formData$owners;

      if ((formData === null || formData === void 0 ? void 0 : (_formData$owners = formData.owners) === null || _formData$owners === void 0 ? void 0 : _formData$owners.length) < 2) setSubmitValve(false);
    }
  };

  var onSubmit = function onSubmit(data) {
    var _data$originalData, _data$originalData$ow, _data$originalData2, _data$originalData2$o, _additionalDetails$is, _data$originalData3;

    data.originalData.owners = (_data$originalData = data.originalData) === null || _data$originalData === void 0 ? void 0 : (_data$originalData$ow = _data$originalData.owners) === null || _data$originalData$ow === void 0 ? void 0 : _data$originalData$ow.filter(function (owner) {
      return owner.status == "ACTIVE";
    });
    var additionalDetails = data.additionalDetails;
    var submitData = {
      Property: _extends({}, data.originalData, {
        creationReason: "MUTATION",
        owners: [].concat((_data$originalData2 = data.originalData) === null || _data$originalData2 === void 0 ? void 0 : (_data$originalData2$o = _data$originalData2.owners) === null || _data$originalData2$o === void 0 ? void 0 : _data$originalData2$o.map(function (e) {
          return _extends({}, e, {
            landlineNumber: data.owners[0].altContactNumber,
            altContactNumber: data.owners[0].altContactNumber,
            status: "INACTIVE"
          });
        }), data.owners.map(function (owner) {
          var _data$documents, _data$documents$docum, _owner$institution, _owner$institution$ty;

          var obj = {};
          var gender = owner.gender.code;
          var ownerType = owner.ownerType.code;
          var relationship = owner.relationship.code;
          obj.documents = [data === null || data === void 0 ? void 0 : (_data$documents = data.documents) === null || _data$documents === void 0 ? void 0 : (_data$documents$docum = _data$documents.documents) === null || _data$documents$docum === void 0 ? void 0 : _data$documents$docum.find(function (e) {
            var _e$documentType;

            return (_e$documentType = e.documentType) === null || _e$documentType === void 0 ? void 0 : _e$documentType.includes("OWNER.IDENTITYPROOF");
          })];

          if (owner.documents) {
            var _owner$documents = owner.documents,
                documentUid = _owner$documents.documentUid,
                documentType = _owner$documents.documentType;
            obj.documents = [].concat(obj.documents, [{
              documentUid: documentUid,
              documentType: documentType.code,
              fileStoreId: documentUid
            }]);
          }

          return _extends({}, owner, {
            gender: gender,
            ownerType: ownerType,
            relationship: relationship,
            inistitutetype: owner === null || owner === void 0 ? void 0 : (_owner$institution = owner.institution) === null || _owner$institution === void 0 ? void 0 : (_owner$institution$ty = _owner$institution.type) === null || _owner$institution$ty === void 0 ? void 0 : _owner$institution$ty.code,
            landlineNumber: owner === null || owner === void 0 ? void 0 : owner.altContactNumber
          }, obj, {
            status: "ACTIVE"
          });
        })),
        additionalDetails: _extends({}, additionalDetails, {
          isMutationInCourt: (_additionalDetails$is = additionalDetails.isMutationInCourt) === null || _additionalDetails$is === void 0 ? void 0 : _additionalDetails$is.code,
          reasonForTransfer: additionalDetails === null || additionalDetails === void 0 ? void 0 : additionalDetails.reasonForTransfer.code,
          isPropertyUnderGovtPossession: additionalDetails.isPropertyUnderGovtPossession.code,
          documentDate: new Date(additionalDetails === null || additionalDetails === void 0 ? void 0 : additionalDetails.documentDate).getTime(),
          marketValue: Number(additionalDetails === null || additionalDetails === void 0 ? void 0 : additionalDetails.marketValue)
        }),
        ownershipCategory: data.ownershipCategory.code,
        documents: [].concat((_data$originalData3 = data.originalData) === null || _data$originalData3 === void 0 ? void 0 : _data$originalData3.documents.filter(function (oldDoc) {
          var _mutationDocs$Propert;

          return !(mutationDocs !== null && mutationDocs !== void 0 && (_mutationDocs$Propert = mutationDocs.PropertyTax) !== null && _mutationDocs$Propert !== void 0 && _mutationDocs$Propert.MutationDocuments.some(function (mut) {
            return oldDoc.documentType.includes(mut.code);
          }));
        }), data.documents.documents.map(function (e) {
          return e.documentType.includes("OWNER.TRANSFERREASONDOCUMENT") ? _extends({}, e, {
            documentType: e.documentType.split(".")[2]
          }) : e;
        })),
        workflow: {
          action: "OPEN",
          businessService: "PT.MUTATION",
          moduleName: "PT",
          tenantId: data.originalData.tenantId
        }
      })
    };

    if (!submitData.Property.ownershipCategory.includes("INDIVIDUAL")) {
      submitData.Property.institution = {
        nameOfAuthorizedPerson: data.owners[0].name,
        name: data.owners[0].institution.name,
        designation: data.owners[0].designation,
        tenantId: data.originalData.tenantId,
        type: data.owners[0].institution.type.code
      };
    }

    history.replace("/digit-ui/employee/pt/response", {
      Property: submitData.Property,
      key: "UPDATE",
      action: "SUBMIT"
    });
  };

  var configs = newConfigMutate;
  return /*#__PURE__*/React.createElement(FormComposer, {
    heading: t("ES_TITLE_MUTATE_PROPERTY"),
    isDisabled: !canSubmit,
    label: t("ES_COMMON_APPLICATION_SUBMIT"),
    config: configs.map(function (config) {
      return _extends({}, config, {
        body: [].concat(config.body.filter(function (a) {
          return !a.hideInEmployee;
        }), [{
          withoutLabel: true,
          type: "custom",
          populators: {
            name: "originalData",
            component: function component(props, customProps) {
              return /*#__PURE__*/React.createElement(React.Fragment, null);
            }
          }
        }])
      });
    }),
    fieldStyle: {
      marginRight: 0
    },
    onSubmit: onSubmit,
    defaultValues: defaultValues,
    onFormValueChange: onFormValueChange
  });
};

var MutateProperty = function MutateProperty() {
  var tenantId = Digit.ULBService.getCurrentTenantId();

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useParams = useParams(),
      applicationNumber = _useParams.id;

  var _Digit$Hooks$pt$useAp = Digit.Hooks.pt.useApplicationDetail(t, tenantId, applicationNumber),
      isLoading = _Digit$Hooks$pt$useAp.isLoading,
      applicationDetails = _Digit$Hooks$pt$useAp.data;

  return applicationDetails && !isLoading ? /*#__PURE__*/React.createElement(MutationForm, {
    applicationData: applicationDetails === null || applicationDetails === void 0 ? void 0 : applicationDetails.applicationData,
    tenantId: tenantId
  }) : null;
};

var RequiredDoc = function RequiredDoc() {
  var tenantId = Digit.ULBService.getCurrentTenantId();
  var stateId = tenantId.split(".")[0];

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var history = useHistory();

  var _useParams = useParams(),
      id = _useParams.id;

  var _useState = useState([]),
      docs = _useState[0],
      setDocs = _useState[1];

  var _Digit$Hooks$pt$usePr = Digit.Hooks.pt.usePropertyMDMS(stateId, "PropertyTax", ["MutationDocuments"]),
      isLoading = _Digit$Hooks$pt$usePr.isLoading,
      Documentsob = _Digit$Hooks$pt$usePr.data;

  var OnSubmit = function OnSubmit() {
    history.push("/digit-ui/employee/pt/property-mutate/" + id);
  };

  useEffect(function () {
    var _Documentsob$Property;

    if (Documentsob) setDocs(Documentsob === null || Documentsob === void 0 ? void 0 : (_Documentsob$Property = Documentsob.PropertyTax) === null || _Documentsob$Property === void 0 ? void 0 : _Documentsob$Property.MutationDocuments);
  }, [Documentsob]);

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, t("PT_REQIURED_DOC_TRANSFER_OWNERSHIP")), /*#__PURE__*/React.createElement(Card, null, docs.map(function (doc, index) {
    var splitValues = doc.code.split(".");
    var dd = doc.dropdownData;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: index
    }, /*#__PURE__*/React.createElement(CardSectionHeader, {
      style: {
        marginTop: "38px",
        marginBottom: "16px"
      }
    }, t(splitValues[0] + "." + splitValues[1])), dd.map(function (e, ind) {
      return /*#__PURE__*/React.createElement(React.Fragment, {
        key: ind
      }, /*#__PURE__*/React.createElement(CardLabel, {
        style: {
          fontWeight: 700
        }
      }, ind + 1 + ". " + t(e.code)));
    }), /*#__PURE__*/React.createElement(CardText, {
      className: "docsDescription"
    }, t(splitValues[0] + "." + splitValues[1] + "." + splitValues[1] + "_DESCRIPTION")));
  })), /*#__PURE__*/React.createElement(ActionBar, null, /*#__PURE__*/React.createElement(SubmitBar, {
    style: {
      display: "block",
      marginLeft: "auto"
    },
    label: t("PT_TRANSFER_OWNERSHIP"),
    onSubmit: OnSubmit
  })));
};

var EmployeeApp = function EmployeeApp(_ref) {
  var _breadcrumbObj;

  var path = _ref.path,
      url = _ref.url,
      userType = _ref.userType;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var location = useLocation();
  var mobileView = innerWidth <= 640;
  var inboxInitialState = {
    searchParams: {
      uuid: {
        code: "ASSIGNED_TO_ALL",
        name: "ES_INBOX_ASSIGNED_TO_ALL"
      },
      services: ["PT.CREATE", "PT.MUTATION", "PT.UPDATE"],
      applicationStatus: [],
      locality: []
    }
  };

  var combineTaxDueInSearchData = function combineTaxDueInSearchData(searchData, _break, _next) {
    try {
      var _temp3 = function _temp3() {
        return _next(returnData);
      };

      var returnData;
      var tenantId = Digit.ULBService.getCurrentTenantId();
      var businessService = ["PT"].join();
      var consumerCode = searchData.map(function (e) {
        return e.propertyId;
      }).join();

      var _temp4 = _catch(function () {
        return Promise.resolve(Digit.PaymentService.fetchBill(tenantId, {
          consumerCode: consumerCode,
          businessService: businessService
        })).then(function (res) {
          var obj = {};
          res.Bill.forEach(function (e) {
            obj[e.consumerCode] = e.totalAmount;
          });
          returnData = searchData.map(function (e) {
            return _extends({}, e, {
              due_tax: obj[e.propertyId] || 0
            });
          });
        });
      }, function (er) {
        var _er$response, _err$Errors;

        var err = er === null || er === void 0 ? void 0 : (_er$response = er.response) === null || _er$response === void 0 ? void 0 : _er$response.data;

        if (["EG_BS_BILL_NO_DEMANDS_FOUND", "EMPTY_DEMANDS"].includes(err === null || err === void 0 ? void 0 : (_err$Errors = err.Errors) === null || _err$Errors === void 0 ? void 0 : _err$Errors[0].code)) {
          returnData = searchData.map(function (e) {
            return _extends({}, e, {
              due_tax: 0
            });
          });
        }
      });

      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  var searchMW = [{
    combineTaxDueInSearchData: combineTaxDueInSearchData
  }];
  var breadcrumbObj = (_breadcrumbObj = {}, _breadcrumbObj["/digit-ui/employee/pt/inbox"] = "ES_TITLE_INBOX", _breadcrumbObj["/digit-ui/employee/pt/new-application"] = "ES_TITLE_NEW_PROPERTY_APPLICATION", _breadcrumbObj["/digit-ui/employee/pt/search"] = "ES_COMMON_SEARCH", _breadcrumbObj);

  var getBreadCrumb = function getBreadCrumb() {
    if (breadcrumbObj[location.pathname]) return t(breadcrumbObj[location.pathname]);else if (location.pathname.includes("/digit-ui/employee/pt/application-details/")) return t("PT_APPLICATION_TITLE");else if (location.pathname.includes("/digit-ui/employee/pt/property-details/")) return t("PT_PROPERTY_INFORMATION");else if (location.pathname.includes("/digit-ui/employee/pt/assessment-details/")) return t("PT_ASSESS_PROPERTY");else if (location.pathname.includes("digit-ui/employee/pt/property-mutate-docs-required")) return t("PT_REQIURED_DOC_TRANSFER_OWNERSHIP");else if (location.pathname.includes("/digit-ui/employee/pt/property-mutate/")) return t("ES_TITLE_MUTATE_PROPERTY");else if (location.pathname.includes("/digit-ui/employee/pt/modify-application/")) return t("PT_UPDATE_PROPERTY");
  };

  return /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "ground-container"
  }, /*#__PURE__*/React.createElement("p", {
    className: "breadcrumb",
    style: {
      marginLeft: mobileView ? "2vw" : "revert"
    }
  }, /*#__PURE__*/React.createElement(Link, {
    to: "/digit-ui/employee",
    style: {
      cursor: "pointer",
      color: "#666"
    }
  }, t("ES_COMMON_HOME")), " ", "/ ", /*#__PURE__*/React.createElement("span", null, getBreadCrumb())), /*#__PURE__*/React.createElement(PrivateRoute, {
    exact: true,
    path: path + "/",
    component: function component() {
      return /*#__PURE__*/React.createElement(PTLinks, {
        matchPath: path,
        userType: userType
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/inbox",
    component: function component() {
      return /*#__PURE__*/React.createElement(Inbox, {
        useNewInboxAPI: true,
        parentRoute: path,
        businessService: "PT",
        filterComponent: "PT_INBOX_FILTER",
        initialStates: inboxInitialState,
        isInbox: true
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/new-application",
    component: function component() {
      return /*#__PURE__*/React.createElement(NewApplication, {
        parentUrl: url
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/application-details/:id",
    component: function component() {
      return /*#__PURE__*/React.createElement(ApplicationDetails$1, {
        parentRoute: path
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property-details/:id",
    component: function component() {
      return /*#__PURE__*/React.createElement(PropertyDetails, {
        parentRoute: path
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/assessment-details/:id",
    component: function component() {
      return /*#__PURE__*/React.createElement(AssessmentDetails, {
        parentRoute: path
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/modify-application/:id",
    component: function component() {
      return /*#__PURE__*/React.createElement(EditApplication, null);
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/response",
    component: function component(props) {
      return /*#__PURE__*/React.createElement(Response, _extends({}, props, {
        parentRoute: path
      }));
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property-mutate/:id",
    component: function component() {
      return /*#__PURE__*/React.createElement(MutateProperty, {
        parentRoute: path
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/property-mutate-docs-required/:id",
    component: function component() {
      return /*#__PURE__*/React.createElement(RequiredDoc, {
        parentRoute: path
      });
    }
  }), /*#__PURE__*/React.createElement(PrivateRoute, {
    path: path + "/search",
    component: function component() {
      return /*#__PURE__*/React.createElement(Inbox, {
        parentRoute: path,
        businessService: "PT",
        middlewareSearch: searchMW,
        initialStates: inboxInitialState,
        isInbox: false,
        EmptyResultInboxComp: "PTEmptyResultInbox"
      });
    }
  }))));
};

var PTCard = function PTCard() {
  var _propsForModuleCard$l;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState("-"),
      total = _useState[0],
      setTotal = _useState[1];

  var _Digit$Hooks$useNewIn = Digit.Hooks.useNewInboxGeneral({
    tenantId: Digit.ULBService.getCurrentTenantId(),
    ModuleCode: "PT",
    filters: {
      limit: 10,
      offset: 0,
      services: ["PT.CREATE", "PT.MUTATION", "PT.UPDATE"]
    },
    config: {
      select: function select(data) {
        return (data === null || data === void 0 ? void 0 : data.totalCount) || "-";
      },
      enabled: Digit.Utils.ptAccess()
    }
  }),
      data = _Digit$Hooks$useNewIn.data,
      isLoading = _Digit$Hooks$useNewIn.isLoading,
      isFetching = _Digit$Hooks$useNewIn.isFetching,
      isSuccess = _Digit$Hooks$useNewIn.isSuccess;

  useEffect(function () {
    if (!isFetching && isSuccess) setTotal(data);
  }, [isFetching]);

  if (!Digit.Utils.ptAccess()) {
    return null;
  }

  var propsForModuleCard = {
    Icon: /*#__PURE__*/React.createElement(PropertyHouse, null),
    moduleName: t("ES_TITLE_PROPERTY_TAX"),
    kpis: [{
      count: total,
      label: t("ES_TITLE_INBOX"),
      link: "/digit-ui/employee/pt/inbox"
    }],
    links: [{
      count: isLoading ? "-" : total,
      label: t("ES_COMMON_INBOX"),
      link: "/digit-ui/employee/pt/inbox"
    }]
  };
  var PT_CEMP = Digit.UserService.hasAccess(["PT_CEMP"]) || false;

  if (PT_CEMP && !((_propsForModuleCard$l = propsForModuleCard.links) !== null && _propsForModuleCard$l !== void 0 && _propsForModuleCard$l[1])) {
    propsForModuleCard.links.push({
      label: t("ES_TITLE_NEW_REGISTRATION"),
      link: "/digit-ui/employee/pt/new-application"
    });
  }

  return /*#__PURE__*/React.createElement(EmployeeModuleCard, propsForModuleCard);
};

var StatusCount = function StatusCount(_ref) {
  var _statusMap$find;

  var status = _ref.status,
      searchParams = _ref.searchParams,
      onAssignmentChange = _ref.onAssignmentChange,
      statusMap = _ref.statusMap;

  var _useTranslation = useTranslation();

  return /*#__PURE__*/React.createElement(CheckBox, {
    styles: {
      height: "unset"
    },
    onChange: function onChange(e) {
      return onAssignmentChange(_extends({}, e, {
        state: status.state
      }), status);
    },
    checked: function () {
      return searchParams === null || searchParams === void 0 ? void 0 : searchParams.applicationStatus.some(function (e) {
        return e.uuid === status.uuid;
      });
    }(),
    label: status.name + " (" + ((statusMap === null || statusMap === void 0 ? void 0 : (_statusMap$find = statusMap.find(function (e) {
      return e.statusid === status.uuid;
    })) === null || _statusMap$find === void 0 ? void 0 : _statusMap$find.count) || "-") + ")"
  });
};

var Status = function Status(_ref) {
  var _userRoleStates$filte, _userRoleStates$filte2, _userRoleStates$filte3, _userRoleStates$filte4, _userRoleStates$filte5;

  var onAssignmentChange = _ref.onAssignmentChange,
      searchParams = _ref.searchParams,
      businessServices = _ref.businessServices,
      statusMap = _ref.statusMap;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _useState = useState(false),
      moreStatus = _useState[0],
      showMoreStatus = _useState[1];

  var _Digit$Hooks$useAppli = Digit.Hooks.useApplicationStatusGeneral({
    businessServices: businessServices
  }, {}),
      statusData = _Digit$Hooks$useAppli.data,
      isLoading = _Digit$Hooks$useAppli.isLoading;

  var _ref2 = statusData || {},
      userRoleStates = _ref2.userRoleStates;

  var map = {
    "PT.CREATE": "ES_PT_NEW_PROPERTY",
    "PT.MUTATION": "ES_PT_TRANSFER_OWNERSHIP",
    "PT.UPDATE": "ES_PT_UPDATE_PROPERTY"
  };

  var translateState = function translateState(state, t) {
    return "" + t(map[state.stateBusinessService]) + " - " + t("ES_PT_COMMON_STATUS_" + (state.state || "CREATED"));
  };

  if (isLoading) {
    return /*#__PURE__*/React.createElement(Loader, null);
  }

  return userRoleStates !== null && userRoleStates !== void 0 && userRoleStates.filter(function (e) {
    return !e.isTerminateState;
  }).length ? /*#__PURE__*/React.createElement("div", {
    className: "status-container"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      fontWeight: "normal"
    }
  }, t("ES_INBOX_STATUS")), userRoleStates === null || userRoleStates === void 0 ? void 0 : (_userRoleStates$filte = userRoleStates.filter(function (e) {
    return !e.isTerminateState;
  })) === null || _userRoleStates$filte === void 0 ? void 0 : (_userRoleStates$filte2 = _userRoleStates$filte.slice(0, 4)) === null || _userRoleStates$filte2 === void 0 ? void 0 : _userRoleStates$filte2.map(function (option, index) {
    return /*#__PURE__*/React.createElement(StatusCount, {
      businessServices: businessServices,
      key: index,
      onAssignmentChange: onAssignmentChange,
      status: _extends({
        name: translateState(option, t),
        code: option.applicationStatus
      }, option),
      searchParams: searchParams,
      statusMap: statusMap
    });
  }), (userRoleStates === null || userRoleStates === void 0 ? void 0 : (_userRoleStates$filte3 = userRoleStates.filter(function (e) {
    return !e.isTerminateState;
  })) === null || _userRoleStates$filte3 === void 0 ? void 0 : _userRoleStates$filte3.slice(4).length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, moreStatus && (userRoleStates === null || userRoleStates === void 0 ? void 0 : (_userRoleStates$filte4 = userRoleStates.filter(function (e) {
    return !e.isTerminateState;
  })) === null || _userRoleStates$filte4 === void 0 ? void 0 : (_userRoleStates$filte5 = _userRoleStates$filte4.slice(4)) === null || _userRoleStates$filte5 === void 0 ? void 0 : _userRoleStates$filte5.map(function (option, index) {
    return /*#__PURE__*/React.createElement(StatusCount, {
      businessServices: businessServices,
      key: option.uuid,
      onAssignmentChange: onAssignmentChange,
      status: _extends({
        name: translateState(option, t),
        code: option.applicationStatus
      }, option),
      searchParams: searchParams,
      statusMap: statusMap
    });
  })), /*#__PURE__*/React.createElement("div", {
    className: "filter-button",
    onClick: function onClick() {
      return showMoreStatus(!moreStatus);
    }
  }, " ", moreStatus ? t("ES_COMMON_LESS") : t("ES_COMMON_MORE"), " ")) : null) : null;
};

var Filter = function Filter(_ref) {
  var _searchParams$localit;

  var searchParams = _ref.searchParams,
      onFilterChange = _ref.onFilterChange,
      defaultSearchParams = _ref.defaultSearchParams,
      statusMap = _ref.statusMap,
      moduleCode = _ref.moduleCode,
      props = _objectWithoutPropertiesLoose(_ref, ["searchParams", "onFilterChange", "defaultSearchParams", "statusMap", "moduleCode"]);

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var client = useQueryClient();

  var _useState = useState(function () {
    return _extends({}, searchParams, {
      services: []
    });
  }),
      _searchParams = _useState[0],
      setSearchParams = _useState[1];

  var ApplicationTypeMenu = [{
    label: "ES_PT_NEW_PROPERTY",
    value: "PT.CREATE"
  }, {
    label: "ES_PT_TRANSFER_OWNERSHIP",
    value: "PT.MUTATION"
  }, {
    label: "ES_PT_UPDATE_PROPERTY",
    value: "PT.UPDATE"
  }];

  var localParamChange = function localParamChange(filterParam) {
    var keys_to_delete = filterParam.delete;

    var _new = _extends({}, _searchParams, filterParam);

    if (keys_to_delete) keys_to_delete.forEach(function (key) {
      return delete _new[key];
    });
    delete filterParam.delete;
    setSearchParams(_extends({}, _new));
  };

  var applyLocalFilters = function applyLocalFilters() {
    if (_searchParams.services.length === 0) onFilterChange(_extends({}, _searchParams, {
      services: ApplicationTypeMenu.map(function (e) {
        return e.value;
      })
    }));else onFilterChange(_searchParams);
  };

  var clearAll = function clearAll() {
    setSearchParams(_extends({}, defaultSearchParams, {
      services: []
    }));
    onFilterChange(_extends({}, defaultSearchParams));
  };

  var tenantId = Digit.ULBService.getCurrentTenantId();

  var onServiceSelect = function onServiceSelect(e, label) {
    var _searchParams$applica;

    if (e.target.checked) localParamChange({
      services: Array.isArray(_searchParams.services) ? [].concat(_searchParams.services, [label]) : [label]
    });else localParamChange({
      services: _searchParams.services.filter(function (o) {
        return o !== label;
      }),
      applicationStatus: (_searchParams$applica = _searchParams.applicationStatus) === null || _searchParams$applica === void 0 ? void 0 : _searchParams$applica.filter(function (e) {
        return e.stateBusinessService !== label;
      })
    });
  };

  var selectLocality = function selectLocality(d) {
    localParamChange({
      locality: [].concat(_searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.locality, [d])
    });
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    className: "filter"
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-card"
  }, /*#__PURE__*/React.createElement("div", {
    className: "heading",
    style: {
      alignItems: "center"
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      display: "flex",
      alignItems: "center"
    }
  }, /*#__PURE__*/React.createElement("span", null, /*#__PURE__*/React.createElement("svg", {
    width: "17",
    height: "17",
    viewBox: "0 0 22 22",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M0.66666 2.48016C3.35999 5.9335 8.33333 12.3335 8.33333 12.3335V20.3335C8.33333 21.0668 8.93333 21.6668 9.66666 21.6668H12.3333C13.0667 21.6668 13.6667 21.0668 13.6667 20.3335V12.3335C13.6667 12.3335 18.6267 5.9335 21.32 2.48016C22 1.60016 21.3733 0.333496 20.2667 0.333496H1.71999C0.613327 0.333496 -0.01334 1.60016 0.66666 2.48016Z",
    fill: "#505A5F"
  }))), /*#__PURE__*/React.createElement("span", {
    style: {
      marginLeft: "8px",
      fontWeight: "normal"
    }
  }, t("ES_COMMON_FILTER_BY"), ":")), /*#__PURE__*/React.createElement("div", {
    className: "clearAll",
    onClick: clearAll
  }, t("ES_COMMON_CLEAR_ALL")), props.type === "desktop" && /*#__PURE__*/React.createElement("span", {
    className: "clear-search",
    onClick: clearAll,
    style: {
      border: "1px solid #e0e0e0",
      padding: "6px"
    }
  }, /*#__PURE__*/React.createElement("svg", {
    width: "17",
    height: "17",
    viewBox: "0 0 16 22",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M8 5V8L12 4L8 0V3C3.58 3 0 6.58 0 11C0 12.57 0.46 14.03 1.24 15.26L2.7 13.8C2.25 12.97 2 12.01 2 11C2 7.69 4.69 5 8 5ZM14.76 6.74L13.3 8.2C13.74 9.04 14 9.99 14 11C14 14.31 11.31 17 8 17V14L4 18L8 22V19C12.42 19 16 15.42 16 11C16 9.43 15.54 7.97 14.76 6.74Z",
    fill: "#505A5F"
  }))), props.type === "mobile" && /*#__PURE__*/React.createElement("span", {
    onClick: props.onClose
  }, /*#__PURE__*/React.createElement(CloseSvg, null))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(RadioButtons, {
    onSelect: function onSelect(d) {
      return localParamChange({
        uuid: d
      });
    },
    selectedOption: _searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.uuid,
    t: t,
    optionsKey: "name",
    options: [{
      code: "ASSIGNED_TO_ME",
      name: "ES_INBOX_ASSIGNED_TO_ME"
    }, {
      code: "ASSIGNED_TO_ALL",
      name: "ES_INBOX_ASSIGNED_TO_ALL"
    }]
  }), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      fontWeight: "normal"
    }
  }, t("ES_INBOX_LOCALITY"), ":"), /*#__PURE__*/React.createElement(Localities, {
    selectLocality: selectLocality,
    tenantId: tenantId,
    boundaryType: "revenue"
  }), /*#__PURE__*/React.createElement("div", {
    className: "tag-container"
  }, _searchParams === null || _searchParams === void 0 ? void 0 : (_searchParams$localit = _searchParams.locality) === null || _searchParams$localit === void 0 ? void 0 : _searchParams$localit.map(function (locality, index) {
    return /*#__PURE__*/React.createElement(RemoveableTag, {
      key: index,
      text: t(locality.i18nkey),
      onClick: function onClick() {
        localParamChange({
          locality: _searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.locality.filter(function (loc) {
            return loc.code !== locality.code;
          })
        });
      }
    });
  }))), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
    className: "filter-label",
    style: {
      fontWeight: "normal"
    }
  }, t("ES_PT_APP_TYPE")), ApplicationTypeMenu.map(function (e, index) {
    var _searchParams$service;

    var checked = _searchParams === null || _searchParams === void 0 ? void 0 : (_searchParams$service = _searchParams.services) === null || _searchParams$service === void 0 ? void 0 : _searchParams$service.includes(e.value);
    return /*#__PURE__*/React.createElement(CheckBox, {
      key: index + "service",
      label: t(e.label),
      value: e.label,
      checked: checked,
      onChange: function onChange(event) {
        return onServiceSelect(event, e.value);
      }
    });
  })), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Status, {
    searchParams: _searchParams,
    businessServices: _searchParams.services,
    statusMap: statusMap || client.getQueryData("INBOX_STATUS_MAP_" + moduleCode),
    moduleCode: moduleCode,
    onAssignmentChange: function onAssignmentChange(e, status) {
      if (e.target.checked) localParamChange({
        applicationStatus: [].concat(_searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.applicationStatus, [status])
      });else {
        var applicationStatus = _searchParams === null || _searchParams === void 0 ? void 0 : _searchParams.applicationStatus.filter(function (e) {
          return e.state !== status.state;
        });
        localParamChange({
          applicationStatus: applicationStatus
        });
      }
    }
  })), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(SubmitBar, {
    onSubmit: function onSubmit() {
      return applyLocalFilters();
    },
    label: t("ES_COMMON_APPLY")
  }))))));
};

var EmptyResultInbox = function EmptyResultInbox(props) {
  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var history = useHistory();

  var addNewProprty = function addNewProprty() {
    history.push("/digit-ui/employee/pt/new-application");
  };

  return /*#__PURE__*/React.createElement(React.Fragment, null, props.data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    style: {
      textAlign: "center",
      marginTop: "50px",
      marginBottom: "24px"
    }
  }, t("PT_NO_MATCHING_PROPERTY_FOUND")), /*#__PURE__*/React.createElement("div", {
    style: {
      textAlign: "center"
    }
  }, /*#__PURE__*/React.createElement(SubmitBar, {
    onSubmit: addNewProprty,
    label: t("PT_ADD_NEW_PROPERTY_BUTTON")
  }))) : null);
};

var GetCell = function GetCell(value) {
  return /*#__PURE__*/React.createElement("span", {
    className: "cell-text"
  }, value);
};

var GetSlaCell = function GetSlaCell(value) {
  if (isNaN(value)) return /*#__PURE__*/React.createElement("span", {
    className: "sla-cell-success"
  }, "0");
  return value < 0 ? /*#__PURE__*/React.createElement("span", {
    className: "sla-cell-error"
  }, value) : /*#__PURE__*/React.createElement("span", {
    className: "sla-cell-success"
  }, value);
};

var GetMobCell = function GetMobCell(value) {
  return /*#__PURE__*/React.createElement("span", {
    className: "sla-cell"
  }, value);
};

var TableConfig = function TableConfig(t) {
  return {
    PT: {
      searchColumns: function searchColumns(props) {
        return [{
          Header: t("ES_INBOX_UNIQUE_PROPERTY_ID"),
          disableSortBy: true,
          Cell: function Cell(_ref) {
            var _row$original, _row$original$searchD, _row$original2, _row$original2$search;

            var row = _ref.row;
            return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", {
              className: "link"
            }, /*#__PURE__*/React.createElement(Link, {
              to: props.parentRoute + "/property-details/" + ((_row$original = row.original) === null || _row$original === void 0 ? void 0 : (_row$original$searchD = _row$original.searchData) === null || _row$original$searchD === void 0 ? void 0 : _row$original$searchD["propertyId"])
            }, (_row$original2 = row.original) === null || _row$original2 === void 0 ? void 0 : (_row$original2$search = _row$original2.searchData) === null || _row$original2$search === void 0 ? void 0 : _row$original2$search["propertyId"])));
          },
          mobileCell: function mobileCell(original) {
            var _original$searchData;

            return GetMobCell(original === null || original === void 0 ? void 0 : (_original$searchData = original.searchData) === null || _original$searchData === void 0 ? void 0 : _original$searchData["propertyId"]);
          }
        }, {
          Header: t("ES_INBOX_OWNER_NAME"),
          disableSortBy: true,
          Cell: function Cell(_ref2) {
            var _row$original3, _row$original4, _row$original5;

            var row = _ref2.row;
            var owners = ((_row$original3 = row.original) === null || _row$original3 === void 0 ? void 0 : _row$original3.searchData["owners"]) || [];
            var status = (_row$original4 = row.original) === null || _row$original4 === void 0 ? void 0 : _row$original4.searchData.status;
            var creationReason = (_row$original5 = row.original) === null || _row$original5 === void 0 ? void 0 : _row$original5.searchData.creationReason;
            var sortedOwners = [].concat(owners.filter(function (a, b) {
              return a.status === "ACTIVE";
            }), owners.filter(function (a, b) {
              return a.status !== "ACTIVE";
            }));

            var _owner = status === "INWORKFLOW" && creationReason === "MUTATION" ? sortedOwners.reverse() : sortedOwners;

            return GetCell("" + (_owner === null || _owner === void 0 ? void 0 : _owner[0].name));
          },
          mobileCell: function mobileCell(original) {
            var _original$searchData2, _original$searchData3;

            return GetMobCell(original === null || original === void 0 ? void 0 : (_original$searchData2 = original.searchData) === null || _original$searchData2 === void 0 ? void 0 : (_original$searchData3 = _original$searchData2["owners"]) === null || _original$searchData3 === void 0 ? void 0 : _original$searchData3[0].name);
          }
        }, {
          Header: t("ES_INBOX_LOCALITY"),
          Cell: function Cell(_ref3) {
            var _row$original6, _row$original6$search, _row$original7, _row$original7$search, _row$original7$search2, _row$original7$search3;

            var row = _ref3.row;
            var tenantId = (_row$original6 = row.original) === null || _row$original6 === void 0 ? void 0 : (_row$original6$search = _row$original6.searchData) === null || _row$original6$search === void 0 ? void 0 : _row$original6$search.tenantId;
            return GetCell(t(tenantId.replace(".", "_").toUpperCase() + "_REVENUE_" + ((_row$original7 = row.original) === null || _row$original7 === void 0 ? void 0 : (_row$original7$search = _row$original7.searchData) === null || _row$original7$search === void 0 ? void 0 : (_row$original7$search2 = _row$original7$search.address) === null || _row$original7$search2 === void 0 ? void 0 : (_row$original7$search3 = _row$original7$search2.locality) === null || _row$original7$search3 === void 0 ? void 0 : _row$original7$search3.code)));
          },
          disableSortBy: true,
          mobileCell: function mobileCell(original) {
            var _original$searchData4, _original$searchData5, _original$searchData6;

            return GetMobCell(original === null || original === void 0 ? void 0 : (_original$searchData4 = original.searchData) === null || _original$searchData4 === void 0 ? void 0 : (_original$searchData5 = _original$searchData4.address) === null || _original$searchData5 === void 0 ? void 0 : (_original$searchData6 = _original$searchData5.locality) === null || _original$searchData6 === void 0 ? void 0 : _original$searchData6.name);
          }
        }, {
          Header: t("ES_SEARCH_PROPERTY_STATUS"),
          Cell: function Cell(_ref4) {
            var _row$original8, _row$original8$search;

            var row = _ref4.row;
            return GetCell(t((_row$original8 = row.original) === null || _row$original8 === void 0 ? void 0 : (_row$original8$search = _row$original8.searchData) === null || _row$original8$search === void 0 ? void 0 : _row$original8$search.status));
          },
          disableSortBy: true,
          mobileCell: function mobileCell(original) {
            var _original$searchData7;

            return GetMobCell(original === null || original === void 0 ? void 0 : (_original$searchData7 = original.searchData) === null || _original$searchData7 === void 0 ? void 0 : _original$searchData7.status);
          }
        }, {
          Header: t("ES_SEARCH_TAX_DUE"),
          Cell: function Cell(_ref5) {
            var _row$original9, _row$original9$search;

            var row = _ref5.row;
            return GetCell("₹ " + ((_row$original9 = row.original) === null || _row$original9 === void 0 ? void 0 : (_row$original9$search = _row$original9.searchData) === null || _row$original9$search === void 0 ? void 0 : _row$original9$search.due_tax));
          },
          disableSortBy: true,
          mobileCell: function mobileCell(original) {
            var _original$searchData8;

            return GetMobCell("₹ " + (original === null || original === void 0 ? void 0 : (_original$searchData8 = original.searchData) === null || _original$searchData8 === void 0 ? void 0 : _original$searchData8.due_tax));
          }
        }, {
          Header: t("ES_SEARCH_ACTION"),
          Cell: function Cell(_ref6) {
            var _row$original10, _row$original10$searc, _row$original11, _row$original11$searc;

            var row = _ref6.row;
            return /*#__PURE__*/React.createElement("div", null, ((_row$original10 = row.original) === null || _row$original10 === void 0 ? void 0 : (_row$original10$searc = _row$original10.searchData) === null || _row$original10$searc === void 0 ? void 0 : _row$original10$searc.due_tax) > 0 ? /*#__PURE__*/React.createElement("span", {
              className: "link"
            }, /*#__PURE__*/React.createElement(Link, {
              to: "/digit-ui/employee/payment/collect/PT/" + ((_row$original11 = row.original) === null || _row$original11 === void 0 ? void 0 : (_row$original11$searc = _row$original11.searchData) === null || _row$original11$searc === void 0 ? void 0 : _row$original11$searc["propertyId"])
            }, t("ES_PT_COLLECT_TAX"))) : null);
          },
          disableSortBy: true
        }];
      },
      inboxColumns: function inboxColumns(props) {
        return [{
          Header: t("ES_INBOX_UNIQUE_PROPERTY_ID"),
          Cell: function Cell(_ref7) {
            var _row$original12, _row$original12$searc, _row$original13, _row$original13$searc;

            var row = _ref7.row;
            return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("span", {
              className: "link"
            }, /*#__PURE__*/React.createElement(Link, {
              to: props.parentRoute + "/application-details/" + ((_row$original12 = row.original) === null || _row$original12 === void 0 ? void 0 : (_row$original12$searc = _row$original12.searchData) === null || _row$original12$searc === void 0 ? void 0 : _row$original12$searc["propertyId"])
            }, (_row$original13 = row.original) === null || _row$original13 === void 0 ? void 0 : (_row$original13$searc = _row$original13.searchData) === null || _row$original13$searc === void 0 ? void 0 : _row$original13$searc["propertyId"])));
          },
          mobileCell: function mobileCell(original) {
            var _original$searchData9;

            return GetMobCell(original === null || original === void 0 ? void 0 : (_original$searchData9 = original.searchData) === null || _original$searchData9 === void 0 ? void 0 : _original$searchData9["propertyId"]);
          }
        }, {
          Header: t("ES_INBOX_OWNER"),
          Cell: function Cell(_ref8) {
            var _row$original14, _row$original14$searc, _row$original14$searc2;

            var row = _ref8.row;
            return GetCell("" + ((_row$original14 = row.original) === null || _row$original14 === void 0 ? void 0 : (_row$original14$searc = _row$original14.searchData) === null || _row$original14$searc === void 0 ? void 0 : (_row$original14$searc2 = _row$original14$searc["owners"]) === null || _row$original14$searc2 === void 0 ? void 0 : _row$original14$searc2[0].name));
          },
          mobileCell: function mobileCell(original) {
            var _original$searchData10, _original$searchData11;

            return GetMobCell(original === null || original === void 0 ? void 0 : (_original$searchData10 = original.searchData) === null || _original$searchData10 === void 0 ? void 0 : (_original$searchData11 = _original$searchData10["owners"]) === null || _original$searchData11 === void 0 ? void 0 : _original$searchData11[0].name);
          }
        }, {
          Header: t("ES_INBOX_APPLICATION_TYPE"),
          Cell: function Cell(_ref9) {
            var _row$original15, _row$original15$workf;

            var row = _ref9.row;
            var map = {
              "PT.CREATE": "ES_PT_NEW_PROPERTY",
              "PT.MUTATION": "ES_PT_TRANSFER_OWNERSHIP",
              "PT.UPDATE": "ES_PT_UPDATE_PROPERTY"
            };
            return GetCell(t("" + map[(_row$original15 = row.original) === null || _row$original15 === void 0 ? void 0 : (_row$original15$workf = _row$original15.workflowData) === null || _row$original15$workf === void 0 ? void 0 : _row$original15$workf.businessService]));
          },
          mobileCell: function mobileCell(original) {
            var _original$workflowDat;

            var map = {
              "PT.CREATE": "ES_PT_NEW_PROPERTY",
              "PT.MUTATION": "ES_PT_TRANSFER_OWNERSHIP",
              "PT.UPDATE": "ES_PT_UPDATE_PROPERTY"
            };
            return GetMobCell(t(map[original === null || original === void 0 ? void 0 : (_original$workflowDat = original.workflowData) === null || _original$workflowDat === void 0 ? void 0 : _original$workflowDat.businessService]));
          }
        }, {
          Header: t("ES_INBOX_STATUS"),
          Cell: function Cell(_ref10) {
            var _row$original16, _wf$state;

            var row = _ref10.row;
            var wf = (_row$original16 = row.original) === null || _row$original16 === void 0 ? void 0 : _row$original16.workflowData;
            return GetCell(t("ES_PT_COMMON_STATUS_" + (wf === null || wf === void 0 ? void 0 : (_wf$state = wf.state) === null || _wf$state === void 0 ? void 0 : _wf$state["state"])));
          },
          mobileCell: function mobileCell(original) {
            var _original$workflowDat2, _original$workflowDat3;

            return GetMobCell(t("ES_PT_COMMON_STATUS_" + (original === null || original === void 0 ? void 0 : (_original$workflowDat2 = original.workflowData) === null || _original$workflowDat2 === void 0 ? void 0 : (_original$workflowDat3 = _original$workflowDat2.state) === null || _original$workflowDat3 === void 0 ? void 0 : _original$workflowDat3["state"])));
          }
        }, {
          Header: t("ES_INBOX_SLA_DAYS_REMAINING"),
          accessor: "createdTime",
          Cell: function Cell(_ref11) {
            var row = _ref11.row;
            var wf = row.original.workflowData;
            var math = Math.round(((wf === null || wf === void 0 ? void 0 : wf.businesssServiceSla) || 0) / (24 * 60 * 60 * 1000)) || "-";
            return GetSlaCell(math);
          },
          mobileCell: function mobileCell(original) {
            var _original$workflowDat4;

            return GetSlaCell(Math.round(((original === null || original === void 0 ? void 0 : (_original$workflowDat4 = original.workflowData) === null || _original$workflowDat4 === void 0 ? void 0 : _original$workflowDat4["businesssServiceSla"]) || 0) / (24 * 60 * 60 * 1000)));
          }
        }];
      },
      serviceRequestIdKey: function serviceRequestIdKey(original) {
        var _original$t, _original$t$props;

        return original === null || original === void 0 ? void 0 : (_original$t = original[t("ES_INBOX_UNIQUE_PROPERTY_ID")]) === null || _original$t === void 0 ? void 0 : (_original$t$props = _original$t.props) === null || _original$t$props === void 0 ? void 0 : _original$t$props.children;
      }
    }
  };
};

var componentsToRegister = {
  PropertyTax: PropertyTax,
  PTSelectPincode: PTSelectPincode,
  PTSelectAddress: PTSelectAddress,
  PTSelectStreet: PTSelectStreet,
  Proof: Proof,
  SelectOwnerShipDetails: SelectOwnerShipDetails,
  SelectOwnerDetails: SelectOwnerDetails,
  SelectSpecialOwnerCategoryType: SelectSpecialOwnerCategoryType,
  SelectOwnerAddress: SelectOwnerAddress,
  SelectInistitutionOwnerDetails: SelectInistitutionOwnerDetails,
  SelectProofIdentity: SelectProofIdentity,
  SelectSpecialProofIdentity: SelectSpecialProofIdentity,
  PTSelectGeolocation: PTSelectGeolocation,
  PTWFApplicationTimeline: PTWFApplicationTimeline,
  PTWFCaption: PTWFCaption,
  PTWFReason: PTWFReason,
  IsThisFloorSelfOccupied: IsThisFloorSelfOccupied,
  ProvideSubUsageType: ProvideSubUsageType,
  RentalDetails: RentalDetails,
  ProvideSubUsageTypeOfRentedArea: ProvideSubUsageTypeOfRentedArea,
  IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,
  UnOccupiedArea: UnOccupiedArea,
  Area: Area,
  IsResidential: IsResidential,
  PropertyType: PropertyType,
  PropertyUsageType: PropertyUsageType,
  GroundFloorDetails: GroundFloorDetails,
  PropertyFloorDetails: PropertyFloorsDetails,
  PropertyBasementDetails: PropertyBasementsDetails,
  PropertyInformation: PropertyInformation,
  ProvideFloorNo: ProvideFloorNo,
  propertyOwnerHistory: propertyOwnerHistory,
  TransferDetails: propertyOwnerHistory,
  Units: Units,
  SelectAltContactNumber: SelectAltContactNumber,
  SelectDocuments: SelectDocuments,
  PTEmployeeOwnershipDetails: PTEmployeeOwnershipDetails,
  SearchPropertyCitizen: SearchProperty,
  SearchResultCitizen: CitizenSearchResults,
  TransfererDetails: TransfererDetails,
  OwnerMutate: OwnerCitizen,
  PTComments: Comments,
  IsMutationPending: IsMutationPending,
  PropertyMarketValue: PropertyMarketValue,
  PTReasonForTransfer: ReasonForTransfer,
  PTRegistrationDocument: RegistrationDocument,
  UnderStateAquire: PTPropertyUnderStateAquire,
  TransferProof: TransferProof
};

var addComponentsToRegistry = function addComponentsToRegistry() {
  Object.entries(componentsToRegister).forEach(function (_ref) {
    var key = _ref[0],
        value = _ref[1];
    Digit.ComponentRegistryService.setComponent(key, value);
  });
};

var PTModule = function PTModule(_ref2) {
  var stateCode = _ref2.stateCode,
      userType = _ref2.userType,
      tenants = _ref2.tenants;

  var _useRouteMatch = useRouteMatch(),
      path = _useRouteMatch.path,
      url = _useRouteMatch.url;

  var moduleCode = "PT";
  var language = Digit.StoreData.getCurrentLanguage();

  var _Digit$Services$useSt = Digit.Services.useStore({
    stateCode: stateCode,
    moduleCode: moduleCode,
    language: language
  });

  addComponentsToRegistry();
  Digit.SessionStorage.set("PT_TENANTS", tenants);

  if (userType === "employee") {
    return /*#__PURE__*/React.createElement(EmployeeApp, {
      path: path,
      url: url,
      userType: userType
    });
  } else return /*#__PURE__*/React.createElement(App, null);
};
var PTLinks = function PTLinks(_ref3) {
  var matchPath = _ref3.matchPath;

  var _useTranslation = useTranslation(),
      t = _useTranslation.t;

  var _Digit$Hooks$useSessi = Digit.Hooks.useSessionStorage("PT_CREATE_PROPERTY", {}),
      clearParams = _Digit$Hooks$useSessi[2];

  useEffect(function () {
    clearParams();
  }, []);
  var links = [{
    link: matchPath + "/property/citizen-search",
    i18nKey: t("PT_SEARCH_AND_PAY")
  }, {
    link: "/digit-ui/citizen/payment/my-bills/PT",
    i18nKey: t("CS_TITLE_MY_BILLS")
  }, {
    link: matchPath + "/property/new-application",
    i18nKey: t("PT_CREATE_PROPERTY")
  }, {
    link: matchPath + "/property/my-properties",
    i18nKey: t("PT_MY_PROPERTIES")
  }, {
    link: matchPath + "/property/my-applications",
    i18nKey: t("PT_MY_APPLICATION")
  }, {
    link: matchPath + "/property/property-mutation",
    i18nKey: t("PT_PROPERTY_MUTATION")
  }];
  return /*#__PURE__*/React.createElement(CitizenHomeCard, {
    header: t("ACTION_TEST_PROPERTY_TAX"),
    links: links,
    Icon: function Icon() {
      return /*#__PURE__*/React.createElement(PTIcon, {
        className: "fill-path-primary-main"
      });
    }
  });
};
var PTComponents = {
  PTCard: PTCard,
  PTModule: PTModule,
  PTLinks: PTLinks,
  PT_INBOX_FILTER: function PT_INBOX_FILTER(props) {
    return /*#__PURE__*/React.createElement(Filter, props);
  },
  PTEmptyResultInbox: EmptyResultInbox,
  PTInboxTableConfig: TableConfig
};

export { PTComponents, PTLinks, PTModule };
//# sourceMappingURL=index.modern.js.map
